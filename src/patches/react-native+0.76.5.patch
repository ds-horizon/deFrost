diff --git a/node_modules/react-native/Libraries/Renderer/implementations/ReactFabric-dev.js b/node_modules/react-native/Libraries/Renderer/implementations/ReactFabric-dev.js
index 4d49bcd..d24dbbf 100644
--- a/node_modules/react-native/Libraries/Renderer/implementations/ReactFabric-dev.js
+++ b/node_modules/react-native/Libraries/Renderer/implementations/ReactFabric-dev.js
@@ -13,6 +13,8 @@
 
 "use strict";
 
+import defrost from '@d11/de-frost'
+
 if (__DEV__) {
   (function () {
     "use strict";
@@ -21,12 +23,17 @@ if (__DEV__) {
     if (
       typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" &&
       typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===
-        "function"
+      "function"
     ) {
       __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
     }
     var React = require("react");
     require("react-native/Libraries/ReactPrivate/ReactNativePrivateInitializeCore");
+    var updatedComponents = [];
+    var updatedComponentForProfiler = null;
+    function insertUpdateComponents(componentName, flags, key) {
+      updatedComponents.push({ componentName, flags, key });
+    }
     var ReactNativePrivateInterface = require("react-native/Libraries/ReactPrivate/ReactNativePrivateInterface");
     var Scheduler = require("scheduler");
 
@@ -43,8 +50,8 @@ if (__DEV__) {
         {
           for (
             var _len = arguments.length,
-              args = new Array(_len > 1 ? _len - 1 : 0),
-              _key = 1;
+            args = new Array(_len > 1 ? _len - 1 : 0),
+            _key = 1;
             _key < _len;
             _key++
           ) {
@@ -60,8 +67,8 @@ if (__DEV__) {
         {
           for (
             var _len2 = arguments.length,
-              args = new Array(_len2 > 1 ? _len2 - 1 : 0),
-              _key2 = 1;
+            args = new Array(_len2 > 1 ? _len2 - 1 : 0),
+            _key2 = 1;
             _key2 < _len2;
             _key2++
           ) {
@@ -122,7 +129,7 @@ if (__DEV__) {
         if (!getNodeFromInstance$1 || !getInstanceFromNode$1) {
           error(
             "Injected " +
-              "module is missing getNodeFromInstance or getInstanceFromNode."
+            "module is missing getNodeFromInstance or getInstanceFromNode."
           );
         }
       }
@@ -136,14 +143,14 @@ if (__DEV__) {
         var listenersLen = listenersIsArr
           ? dispatchListeners.length
           : dispatchListeners
-          ? 1
-          : 0;
+            ? 1
+            : 0;
         var instancesIsArr = isArray(dispatchInstances);
         var instancesLen = instancesIsArr
           ? dispatchInstances.length
           : dispatchInstances
-          ? 1
-          : 0;
+            ? 1
+            : 0;
 
         if (
           instancesIsArr !== listenersIsArr ||
@@ -506,14 +513,14 @@ if (__DEV__) {
           Object.defineProperty(
             this,
             "preventDefault",
-            getPooledWarningPropertyDefinition("preventDefault", function () {})
+            getPooledWarningPropertyDefinition("preventDefault", function () { })
           );
           Object.defineProperty(
             this,
             "stopPropagation",
             getPooledWarningPropertyDefinition(
               "stopPropagation",
-              function () {}
+              function () { }
             )
           );
         }
@@ -527,7 +534,7 @@ if (__DEV__) {
     SyntheticEvent.extend = function (Interface) {
       var Super = this;
 
-      var E = function () {};
+      var E = function () { };
 
       E.prototype = Super.prototype;
       var prototype = new E();
@@ -576,9 +583,9 @@ if (__DEV__) {
         {
           error(
             "This synthetic event is reused for performance reasons. If you're seeing this, " +
-              "you're %s `%s` on a released/nullified synthetic event. %s. " +
-              "If you must keep the original synthetic event around, use event.persist(). " +
-              "See https://react.dev/link/event-pooling for more information.",
+            "you're %s `%s` on a released/nullified synthetic event. %s. " +
+            "If you must keep the original synthetic event around, use event.persist(). " +
+            "See https://react.dev/link/event-pooling for more information.",
             action,
             propName,
             result
@@ -745,7 +752,7 @@ if (__DEV__) {
         if (identifier > MAX_TOUCH_BANK) {
           error(
             "Touch identifier %s is greater than maximum supported %s which causes " +
-              "performance issues backfilling array locations for all of the indices.",
+            "performance issues backfilling array locations for all of the indices.",
             identifier,
             MAX_TOUCH_BANK
           );
@@ -784,8 +791,8 @@ if (__DEV__) {
         {
           warn(
             "Cannot record touch move without a touch start.\n" +
-              "Touch Move: %s\n" +
-              "Touch Bank: %s",
+            "Touch Move: %s\n" +
+            "Touch Bank: %s",
             printTouch(touch),
             printTouchBank()
           );
@@ -809,8 +816,8 @@ if (__DEV__) {
         {
           warn(
             "Cannot record touch end without a touch start.\n" +
-              "Touch End: %s\n" +
-              "Touch Bank: %s",
+            "Touch End: %s\n" +
+            "Touch Bank: %s",
             printTouch(touch),
             printTouchBank()
           );
@@ -1223,7 +1230,7 @@ if (__DEV__) {
 
       var i;
 
-      for (i = path.length; i-- > 0; ) {
+      for (i = path.length; i-- > 0;) {
         fn(path[i], "captured", arg);
       }
 
@@ -1252,10 +1259,10 @@ if (__DEV__) {
       if (listener && typeof listener !== "function") {
         throw new Error(
           "Expected `" +
-            registrationName +
-            "` listener to be a function, instead got a value of `" +
-            typeof listener +
-            "` type."
+          registrationName +
+          "` listener to be a function, instead got a value of `" +
+          typeof listener +
+          "` type."
         );
       }
 
@@ -1556,10 +1563,10 @@ to return true:wantsResponderID|                            |
       var shouldSetEventType = isStartish(topLevelType)
         ? eventTypes.startShouldSetResponder
         : isMoveish(topLevelType)
-        ? eventTypes.moveShouldSetResponder
-        : topLevelType === TOP_SELECTION_CHANGE
-        ? eventTypes.selectionChangeShouldSetResponder
-        : eventTypes.scrollShouldSetResponder; // TODO: stop one short of the current responder.
+          ? eventTypes.moveShouldSetResponder
+          : topLevelType === TOP_SELECTION_CHANGE
+            ? eventTypes.selectionChangeShouldSetResponder
+            : eventTypes.scrollShouldSetResponder; // TODO: stop one short of the current responder.
 
       var bubbleShouldSetFrom = !responderInst
         ? targetInst
@@ -1746,11 +1753,11 @@ to return true:wantsResponderID|                            |
           nativeEvent
         )
           ? setResponderAndExtractTransfer(
-              topLevelType,
-              targetInst,
-              nativeEvent,
-              nativeEventTarget
-            )
+            topLevelType,
+            targetInst,
+            nativeEvent,
+            nativeEventTarget
+          )
           : null; // Responder may or may not have transferred on a new touch start/move.
         // Regardless, whoever is the responder after any potential transfer, we
         // direct all touch start/move/ends to them in the form of
@@ -1768,10 +1775,10 @@ to return true:wantsResponderID|                            |
         var incrementalTouch = isResponderTouchStart
           ? eventTypes.responderStart
           : isResponderTouchMove
-          ? eventTypes.responderMove
-          : isResponderTouchEnd
-          ? eventTypes.responderEnd
-          : null;
+            ? eventTypes.responderMove
+            : isResponderTouchEnd
+              ? eventTypes.responderEnd
+              : null;
 
         if (incrementalTouch) {
           var gesture = ResponderSyntheticEvent.getPooled(
@@ -1795,8 +1802,8 @@ to return true:wantsResponderID|                            |
         var finalTouch = isResponderTerminate
           ? eventTypes.responderTerminate
           : isResponderRelease
-          ? eventTypes.responderRelease
-          : null;
+            ? eventTypes.responderRelease
+            : null;
 
         if (finalTouch) {
           var finalEvent = ResponderSyntheticEvent.getPooled(
@@ -1855,7 +1862,7 @@ to return true:wantsResponderID|                            |
         if (pluginIndex <= -1) {
           throw new Error(
             "EventPluginRegistry: Cannot inject event plugins that do not exist in " +
-              ("the plugin ordering, `" + pluginName + "`.")
+            ("the plugin ordering, `" + pluginName + "`.")
           );
         }
 
@@ -1866,7 +1873,7 @@ to return true:wantsResponderID|                            |
         if (!pluginModule.extractEvents) {
           throw new Error(
             "EventPluginRegistry: Event plugins must implement an `extractEvents` " +
-              ("method, but `" + pluginName + "` does not.")
+            ("method, but `" + pluginName + "` does not.")
           );
         }
 
@@ -1883,10 +1890,10 @@ to return true:wantsResponderID|                            |
           ) {
             throw new Error(
               "EventPluginRegistry: Failed to publish event `" +
-                eventName +
-                "` for plugin `" +
-                pluginName +
-                "`."
+              eventName +
+              "` for plugin `" +
+              pluginName +
+              "`."
             );
           }
         }
@@ -1905,7 +1912,7 @@ to return true:wantsResponderID|                            |
       if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
         throw new Error(
           "EventPluginRegistry: More than one plugin attempted to publish the same " +
-            ("event name, `" + eventName + "`.")
+          ("event name, `" + eventName + "`.")
         );
       }
 
@@ -1944,7 +1951,7 @@ to return true:wantsResponderID|                            |
       if (registrationNameModules[registrationName]) {
         throw new Error(
           "EventPluginRegistry: More than one plugin attempted to publish the same " +
-            ("registration name, `" + registrationName + "`.")
+          ("registration name, `" + registrationName + "`.")
         );
       }
 
@@ -1987,7 +1994,7 @@ to return true:wantsResponderID|                            |
       if (eventPluginOrder) {
         throw new Error(
           "EventPluginRegistry: Cannot inject event plugin ordering more than " +
-            "once. You are likely trying to load more than one copy of React."
+          "once. You are likely trying to load more than one copy of React."
         );
       } // Clone the ordering so it cannot be dynamically mutated.
       // $FlowFixMe[method-unbinding] found when upgrading Flow
@@ -2022,7 +2029,7 @@ to return true:wantsResponderID|                            |
           if (namesToPlugins[pluginName]) {
             throw new Error(
               "EventPluginRegistry: Cannot inject two different event plugins " +
-                ("using the same name, `" + pluginName + "`.")
+              ("using the same name, `" + pluginName + "`.")
             );
           }
 
@@ -2056,10 +2063,10 @@ to return true:wantsResponderID|                            |
       if (listener && typeof listener !== "function") {
         throw new Error(
           "Expected `" +
-            registrationName +
-            "` listener to be a function, instead got a value of `" +
-            typeof listener +
-            "` type."
+          registrationName +
+          "` listener to be a function, instead got a value of `" +
+          typeof listener +
+          "` type."
         );
       }
 
@@ -2067,8 +2074,8 @@ to return true:wantsResponderID|                            |
     }
 
     var customBubblingEventTypes =
-        ReactNativePrivateInterface.ReactNativeViewConfigRegistry
-          .customBubblingEventTypes,
+      ReactNativePrivateInterface.ReactNativeViewConfigRegistry
+        .customBubblingEventTypes,
       customDirectEventTypes =
         ReactNativePrivateInterface.ReactNativeViewConfigRegistry
           .customDirectEventTypes; // Start of inline: the below functions were inlined from
@@ -2132,7 +2139,7 @@ to return true:wantsResponderID|                            |
 
       var i;
 
-      for (i = path.length; i-- > 0; ) {
+      for (i = path.length; i-- > 0;) {
         fn(path[i], "captured", arg);
       }
 
@@ -2849,7 +2856,7 @@ to return true:wantsResponderID|                            |
       if (eventQueue) {
         throw new Error(
           "processEventQueue(): Additional events were enqueued while processing " +
-            "an event queue. Support for this has not yet been implemented."
+          "an event queue. Support for this has not yet been implemented."
         );
       } // This would be a good time to rethrow if any of the event handlers threw.
 
@@ -3126,7 +3133,7 @@ to return true:wantsResponderID|                            |
     var prevGroupCollapsed;
     var prevGroupEnd;
 
-    function disabledLog() {}
+    function disabledLog() { }
 
     disabledLog.__reactDisabledLog = true;
     function disableLogs() {
@@ -3204,7 +3211,7 @@ to return true:wantsResponderID|                            |
         if (disabledDepth < 0) {
           error(
             "disabledDepth fell below zero. " +
-              "This is a bug in React. Please file an issue."
+            "This is a bug in React. Please file an issue."
           );
         }
       }
@@ -3234,8 +3241,8 @@ to return true:wantsResponderID|                            |
         {
           error(
             "The installed version of React DevTools is too old and will not work " +
-              "with the current version of React. Please update React DevTools. " +
-              "https://react.dev/link/react-devtools"
+            "with the current version of React. Please update React DevTools. " +
+            "https://react.dev/link/react-devtools"
           );
         } // DevTools exists, even though it doesn't support Fiber.
 
@@ -3378,7 +3385,7 @@ to return true:wantsResponderID|                            |
       }
     } // Profiler API hooks
 
-    function injectProfilingHooks(profilingHooks) {}
+    function injectProfilingHooks(profilingHooks) { }
 
     function getLaneLabelMap() {
       {
@@ -4297,8 +4304,8 @@ to return true:wantsResponderID|                            |
     function shim$2() {
       throw new Error(
         "The current renderer does not support mutation. " +
-          "This error is likely caused by a bug in React. " +
-          "Please file an issue."
+        "This error is likely caused by a bug in React. " +
+        "Please file an issue."
       );
     } // Mutation (when unsupported)
     var commitMount = shim$2;
@@ -4308,8 +4315,8 @@ to return true:wantsResponderID|                            |
     function shim$1() {
       throw new Error(
         "The current renderer does not support hydration. " +
-          "This error is likely caused by a bug in React. " +
-          "Please file an issue."
+        "This error is likely caused by a bug in React. " +
+        "Please file an issue."
       );
     } // Hydration (when unsupported)
     var isSuspenseInstancePending = shim$1;
@@ -4323,8 +4330,8 @@ to return true:wantsResponderID|                            |
     function shim() {
       throw new Error(
         "The current renderer does not support Resources. " +
-          "This error is likely caused by a bug in React. " +
-          "Please file an issue."
+        "This error is likely caused by a bug in React. " +
+        "Please file an issue."
       );
     } // Resources (when unsupported)
     var suspendResource = shim;
@@ -4822,7 +4829,7 @@ to return true:wantsResponderID|                            |
           if (typeof type.tag === "number") {
             error(
               "Received an unexpected object in getComponentNameFromType(). " +
-                "This is likely a bug in React. Please file an issue."
+              "This is likely a bug in React. Please file an issue."
             );
           }
         }
@@ -5028,10 +5035,10 @@ to return true:wantsResponderID|                            |
           if (!instance._warnedAboutRefsInRender) {
             error(
               "%s is accessing isMounted inside its render() function. " +
-                "render() should be a pure function of props and state. It should " +
-                "never access something that requires stale data from the previous " +
-                "render, such as refs. Move this logic to componentDidMount and " +
-                "componentDidUpdate instead.",
+              "render() should be a pure function of props and state. It should " +
+              "never access something that requires stale data from the previous " +
+              "render, such as refs. Move this logic to componentDidMount and " +
+              "componentDidUpdate instead.",
               getComponentNameFromFiber(ownerFiber) || "A component"
             );
           }
@@ -5187,7 +5194,7 @@ to return true:wantsResponderID|                            |
             if (!didFindChild) {
               throw new Error(
                 "Child was not found in either parent set. This indicates a bug " +
-                  "in React related to the return pointer. Please file an issue."
+                "in React related to the return pointer. Please file an issue."
               );
             }
           }
@@ -5196,7 +5203,7 @@ to return true:wantsResponderID|                            |
         if (a.alternate !== b) {
           throw new Error(
             "Return fibers should always be each others' alternates. " +
-              "This error is likely caused by a bug in React. Please file an issue."
+            "This error is likely caused by a bug in React. Please file an issue."
           );
         }
       } // If the root is not a host container, we're in a disconnected tree. I.e.
@@ -5393,7 +5400,7 @@ to return true:wantsResponderID|                            |
         if (c === null) {
           error(
             "Expected host context to exist. This error is likely caused by a bug " +
-              "in React. Please file an issue."
+            "in React. Please file an issue."
           );
         }
       }
@@ -5465,7 +5472,7 @@ to return true:wantsResponderID|                            |
       {
         throw new Error(
           "Expected prepareToHydrateHostInstance() to never be called. " +
-            "This error is likely caused by a bug in React. Please file an issue."
+          "This error is likely caused by a bug in React. Please file an issue."
         );
       }
     }
@@ -5474,7 +5481,7 @@ to return true:wantsResponderID|                            |
       {
         throw new Error(
           "Expected prepareToHydrateHostTextInstance() to never be called. " +
-            "This error is likely caused by a bug in React. Please file an issue."
+          "This error is likely caused by a bug in React. Please file an issue."
         );
       }
     }
@@ -5483,7 +5490,7 @@ to return true:wantsResponderID|                            |
       {
         throw new Error(
           "Expected prepareToHydrateHostSuspenseInstance() to never be called. " +
-            "This error is likely caused by a bug in React. Please file an issue."
+          "This error is likely caused by a bug in React. Please file an issue."
         );
       }
     }
@@ -6302,9 +6309,9 @@ to return true:wantsResponderID|                            |
 
           error(
             "An update (setState, replaceState, or forceUpdate) was scheduled " +
-              "from inside an update function. Update functions should be pure, " +
-              "with zero side-effects. Consider using componentDidUpdate or a " +
-              "callback.\n\nPlease update the following component: %s",
+            "from inside an update function. Update functions should be pure, " +
+            "with zero side-effects. Consider using componentDidUpdate or a " +
+            "callback.\n\nPlease update the following component: %s",
             componentName
           );
 
@@ -6768,7 +6775,7 @@ to return true:wantsResponderID|                            |
       if (typeof callback !== "function") {
         throw new Error(
           "Invalid argument passed as callback. Expected a function. Instead " +
-            ("received: " + callback)
+          ("received: " + callback)
         );
       }
 
@@ -7047,11 +7054,11 @@ to return true:wantsResponderID|                            |
     }
 
     var ReactStrictModeWarnings = {
-      recordUnsafeLifecycleWarnings: function (fiber, instance) {},
-      flushPendingUnsafeLifecycleWarnings: function () {},
-      recordLegacyContextWarning: function (fiber, instance) {},
-      flushLegacyContextWarning: function () {},
-      discardPendingWarnings: function () {}
+      recordUnsafeLifecycleWarnings: function (fiber, instance) { },
+      flushPendingUnsafeLifecycleWarnings: function () { },
+      recordLegacyContextWarning: function (fiber, instance) { },
+      flushLegacyContextWarning: function () { },
+      discardPendingWarnings: function () { }
     };
 
     {
@@ -7113,7 +7120,7 @@ to return true:wantsResponderID|                            |
         if (
           typeof instance.componentWillReceiveProps === "function" &&
           instance.componentWillReceiveProps.__suppressDeprecationWarning !==
-            true
+          true
         ) {
           pendingComponentWillReceivePropsWarnings.push(fiber);
         }
@@ -7225,9 +7232,9 @@ to return true:wantsResponderID|                            |
 
             error(
               "Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. " +
-                "See https://react.dev/link/unsafe-component-lifecycles for details.\n\n" +
-                "* Move code with side effects to componentDidMount, and set initial state in the constructor.\n" +
-                "\nPlease update the following components: %s",
+              "See https://react.dev/link/unsafe-component-lifecycles for details.\n\n" +
+              "* Move code with side effects to componentDidMount, and set initial state in the constructor.\n" +
+              "\nPlease update the following components: %s",
               sortedNames
             );
           }
@@ -7239,13 +7246,13 @@ to return true:wantsResponderID|                            |
 
             error(
               "Using UNSAFE_componentWillReceiveProps in strict mode is not recommended " +
-                "and may indicate bugs in your code. " +
-                "See https://react.dev/link/unsafe-component-lifecycles for details.\n\n" +
-                "* Move data fetching code or side effects to componentDidUpdate.\n" +
-                "* If you're updating state whenever props change, " +
-                "refactor your code to use memoization techniques or move it to " +
-                "static getDerivedStateFromProps. Learn more at: https://react.dev/link/derived-state\n" +
-                "\nPlease update the following components: %s",
+              "and may indicate bugs in your code. " +
+              "See https://react.dev/link/unsafe-component-lifecycles for details.\n\n" +
+              "* Move data fetching code or side effects to componentDidUpdate.\n" +
+              "* If you're updating state whenever props change, " +
+              "refactor your code to use memoization techniques or move it to " +
+              "static getDerivedStateFromProps. Learn more at: https://react.dev/link/derived-state\n" +
+              "\nPlease update the following components: %s",
               _sortedNames
             );
           }
@@ -7257,10 +7264,10 @@ to return true:wantsResponderID|                            |
 
             error(
               "Using UNSAFE_componentWillUpdate in strict mode is not recommended " +
-                "and may indicate bugs in your code. " +
-                "See https://react.dev/link/unsafe-component-lifecycles for details.\n\n" +
-                "* Move data fetching code or side effects to componentDidUpdate.\n" +
-                "\nPlease update the following components: %s",
+              "and may indicate bugs in your code. " +
+              "See https://react.dev/link/unsafe-component-lifecycles for details.\n\n" +
+              "* Move data fetching code or side effects to componentDidUpdate.\n" +
+              "\nPlease update the following components: %s",
               _sortedNames2
             );
           }
@@ -7272,13 +7279,13 @@ to return true:wantsResponderID|                            |
 
             warn(
               "componentWillMount has been renamed, and is not recommended for use. " +
-                "See https://react.dev/link/unsafe-component-lifecycles for details.\n\n" +
-                "* Move code with side effects to componentDidMount, and set initial state in the constructor.\n" +
-                "* Rename componentWillMount to UNSAFE_componentWillMount to suppress " +
-                "this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. " +
-                "To rename all deprecated lifecycles to their new names, you can run " +
-                "`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n" +
-                "\nPlease update the following components: %s",
+              "See https://react.dev/link/unsafe-component-lifecycles for details.\n\n" +
+              "* Move code with side effects to componentDidMount, and set initial state in the constructor.\n" +
+              "* Rename componentWillMount to UNSAFE_componentWillMount to suppress " +
+              "this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. " +
+              "To rename all deprecated lifecycles to their new names, you can run " +
+              "`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n" +
+              "\nPlease update the following components: %s",
               _sortedNames3
             );
           }
@@ -7290,16 +7297,16 @@ to return true:wantsResponderID|                            |
 
             warn(
               "componentWillReceiveProps has been renamed, and is not recommended for use. " +
-                "See https://react.dev/link/unsafe-component-lifecycles for details.\n\n" +
-                "* Move data fetching code or side effects to componentDidUpdate.\n" +
-                "* If you're updating state whenever props change, refactor your " +
-                "code to use memoization techniques or move it to " +
-                "static getDerivedStateFromProps. Learn more at: https://react.dev/link/derived-state\n" +
-                "* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress " +
-                "this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. " +
-                "To rename all deprecated lifecycles to their new names, you can run " +
-                "`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n" +
-                "\nPlease update the following components: %s",
+              "See https://react.dev/link/unsafe-component-lifecycles for details.\n\n" +
+              "* Move data fetching code or side effects to componentDidUpdate.\n" +
+              "* If you're updating state whenever props change, refactor your " +
+              "code to use memoization techniques or move it to " +
+              "static getDerivedStateFromProps. Learn more at: https://react.dev/link/derived-state\n" +
+              "* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress " +
+              "this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. " +
+              "To rename all deprecated lifecycles to their new names, you can run " +
+              "`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n" +
+              "\nPlease update the following components: %s",
               _sortedNames4
             );
           }
@@ -7311,13 +7318,13 @@ to return true:wantsResponderID|                            |
 
             warn(
               "componentWillUpdate has been renamed, and is not recommended for use. " +
-                "See https://react.dev/link/unsafe-component-lifecycles for details.\n\n" +
-                "* Move data fetching code or side effects to componentDidUpdate.\n" +
-                "* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress " +
-                "this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. " +
-                "To rename all deprecated lifecycles to their new names, you can run " +
-                "`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n" +
-                "\nPlease update the following components: %s",
+              "See https://react.dev/link/unsafe-component-lifecycles for details.\n\n" +
+              "* Move data fetching code or side effects to componentDidUpdate.\n" +
+              "* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress " +
+              "this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. " +
+              "To rename all deprecated lifecycles to their new names, you can run " +
+              "`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n" +
+              "\nPlease update the following components: %s",
               _sortedNames5
             );
           }
@@ -7336,7 +7343,7 @@ to return true:wantsResponderID|                            |
         if (strictRoot === null) {
           error(
             "Expected to find a StrictMode component in a strict mode tree. " +
-              "This error is likely caused by a bug in React. Please file an issue."
+            "This error is likely caused by a bug in React. Please file an issue."
           );
 
           return;
@@ -7381,10 +7388,10 @@ to return true:wantsResponderID|                            |
 
             error(
               "Legacy context API has been detected within a strict-mode tree." +
-                "\n\nThe old API will be supported in all 16.x releases, but applications " +
-                "using it should migrate to the new version." +
-                "\n\nPlease update the following components: %s" +
-                "\n\nLearn more about this warning here: https://react.dev/link/legacy-context",
+              "\n\nThe old API will be supported in all 16.x releases, but applications " +
+              "using it should migrate to the new version." +
+              "\n\nPlease update the following components: %s" +
+              "\n\nLearn more about this warning here: https://react.dev/link/legacy-context",
               sortedNames
             );
           } finally {
@@ -7469,7 +7476,7 @@ to return true:wantsResponderID|                            |
         if (willCoercionThrow(value)) {
           error(
             "The provided key is an unsupported type %s." +
-              " This value must be coerced to a string before using it here.",
+            " This value must be coerced to a string before using it here.",
             typeName(value)
           );
 
@@ -7482,7 +7489,7 @@ to return true:wantsResponderID|                            |
         if (willCoercionThrow(value)) {
           error(
             "The provided `%s` prop is an unsupported type %s." +
-              " This value must be coerced to a string before using it here.",
+            " This value must be coerced to a string before using it here.",
             propName,
             typeName(value)
           );
@@ -7504,16 +7511,16 @@ to return true:wantsResponderID|                            |
 
     var SuspenseException = new Error(
       "Suspense Exception: This is not a real error! It's an implementation " +
-        "detail of `use` to interrupt the current render. You must either " +
-        "rethrow it immediately, or move the `use` call outside of the " +
-        "`try/catch` block. Capturing without rethrowing will lead to " +
-        "unexpected behavior.\n\n" +
-        "To handle async errors, wrap your component in an error boundary, or " +
-        "call the promise's `.catch` method and pass the result to `use`"
+      "detail of `use` to interrupt the current render. You must either " +
+      "rethrow it immediately, or move the `use` call outside of the " +
+      "`try/catch` block. Capturing without rethrowing will lead to " +
+      "unexpected behavior.\n\n" +
+      "To handle async errors, wrap your component in an error boundary, or " +
+      "call the promise's `.catch` method and pass the result to `use`"
     );
     var SuspenseyCommitException = new Error(
       "Suspense Exception: This is not a real error, and should not leak into " +
-        "userspace. If you're seeing this, it's likely a bug in React."
+      "userspace. If you're seeing this, it's likely a bug in React."
     ); // This is a noop thenable that we use to trigger a fallback in throwException.
     // TODO: It would be better to refactor throwException into multiple functions
     // so we can trigger a fallback directly without having to check the type. But
@@ -7524,7 +7531,7 @@ to return true:wantsResponderID|                            |
         {
           error(
             "Internal React error: A listener was unexpectedly attached to a " +
-              '"noop" thenable. This is a bug in React. Please file an issue.'
+            '"noop" thenable. This is a bug in React. Please file an issue.'
           );
         }
       }
@@ -7544,7 +7551,7 @@ to return true:wantsResponderID|                            |
       return status === "fulfilled" || status === "rejected";
     }
 
-    function noop() {}
+    function noop() { }
 
     function trackUsedThenable(thenableState, thenable, index) {
       if (ReactCurrentActQueue$2.current !== null) {
@@ -7583,8 +7590,8 @@ to return true:wantsResponderID|                            |
 
               error(
                 "A component was suspended by an uncached promise. Creating " +
-                  "promises inside a Client Component or hook is not yet " +
-                  "supported, except via a Suspense-compatible library or framework."
+                "promises inside a Client Component or hook is not yet " +
+                "supported, except via a Suspense-compatible library or framework."
               );
             }
           } // Avoid an unhandled rejection errors for the Promises that we'll
@@ -7641,9 +7648,9 @@ to return true:wantsResponderID|                            |
               // root into offscreen mode.
               throw new Error(
                 "async/await is not yet supported in Client Components, only " +
-                  "Server Components. This error is often caused by accidentally " +
-                  "adding `'use client'` to a module that was originally written " +
-                  "for the server."
+                "Server Components. This error is often caused by accidentally " +
+                "adding `'use client'` to a module that was originally written " +
+                "for the server."
               );
             }
 
@@ -7710,7 +7717,7 @@ to return true:wantsResponderID|                            |
       if (suspendedThenable === null) {
         throw new Error(
           "Expected a suspended thenable. This is a bug in React. Please file " +
-            "an issue."
+          "an issue."
         );
       }
 
@@ -7747,8 +7754,8 @@ to return true:wantsResponderID|                            |
       if (rejectedReason === SuspenseException) {
         throw new Error(
           "Hooks are not supported inside an async component. This " +
-            "error is often caused by accidentally adding `'use client'` " +
-            "to a module that was originally written for the server."
+          "error is often caused by accidentally adding `'use client'` " +
+          "to a module that was originally written for the server."
         );
       }
     }
@@ -7776,7 +7783,7 @@ to return true:wantsResponderID|                            |
     var ownerHasFunctionTypeWarning;
     var ownerHasSymbolTypeWarning;
 
-    var warnForMissingKey = function (child, returnFiber) {};
+    var warnForMissingKey = function (child, returnFiber) { };
 
     {
       didWarnAboutMaps = false;
@@ -7804,7 +7811,7 @@ to return true:wantsResponderID|                            |
         if (typeof child._store !== "object") {
           throw new Error(
             "React Component in warnForMissingKey should have a _store. " +
-              "This error is likely caused by a bug in React. Please file an issue."
+            "This error is likely caused by a bug in React. Please file an issue."
           );
         } // $FlowFixMe[cannot-write] unable to narrow type from mixed to writable object
 
@@ -7820,8 +7827,8 @@ to return true:wantsResponderID|                            |
 
         error(
           "Each child in a list should have a unique " +
-            '"key" prop. See https://react.dev/link/warning-keys for ' +
-            "more information."
+          '"key" prop. See https://react.dev/link/warning-keys for ' +
+          "more information."
         );
       };
     }
@@ -7857,22 +7864,22 @@ to return true:wantsResponderID|                            |
       if (!owner) {
         throw new Error(
           "Element ref was specified as a string (" +
-            stringRef +
-            ") but no owner was set. This could happen for one of" +
-            " the following reasons:\n" +
-            "1. You may be adding a ref to a function component\n" +
-            "2. You may be adding a ref to a component that was not created inside a component's render method\n" +
-            "3. You have multiple copies of React loaded\n" +
-            "See https://react.dev/link/refs-must-have-owner for more information."
+          stringRef +
+          ") but no owner was set. This could happen for one of" +
+          " the following reasons:\n" +
+          "1. You may be adding a ref to a function component\n" +
+          "2. You may be adding a ref to a component that was not created inside a component's render method\n" +
+          "3. You have multiple copies of React loaded\n" +
+          "See https://react.dev/link/refs-must-have-owner for more information."
         );
       }
 
       if (owner.tag !== ClassComponent) {
         throw new Error(
           "Function components cannot have string refs. " +
-            "We recommend using useRef() instead. " +
-            "Learn more about using refs safely here: " +
-            "https://react.dev/link/strict-mode-string-ref"
+          "We recommend using useRef() instead. " +
+          "Learn more about using refs safely here: " +
+          "https://react.dev/link/strict-mode-string-ref"
         );
       }
 
@@ -7887,10 +7894,10 @@ to return true:wantsResponderID|                            |
           if (!didWarnAboutStringRefs[componentName]) {
             error(
               'Component "%s" contains the string ref "%s". Support for string refs ' +
-                "will be removed in a future major release. We recommend using " +
-                "useRef() or createRef() instead. " +
-                "Learn more about using refs safely here: " +
-                "https://react.dev/link/strict-mode-string-ref",
+              "will be removed in a future major release. We recommend using " +
+              "useRef() or createRef() instead. " +
+              "Learn more about using refs safely here: " +
+              "https://react.dev/link/strict-mode-string-ref",
               componentName,
               stringRef
             );
@@ -7905,9 +7912,9 @@ to return true:wantsResponderID|                            |
       if (!inst) {
         throw new Error(
           "Missing owner for string ref " +
-            stringRef +
-            ". This error is likely caused by a " +
-            "bug in React. Please file an issue."
+          stringRef +
+          ". This error is likely caused by a " +
+          "bug in React. Please file an issue."
         );
       } // Check if previous string ref matches new string ref
 
@@ -7970,12 +7977,12 @@ to return true:wantsResponderID|                            |
       var childString = Object.prototype.toString.call(newChild);
       throw new Error(
         "Objects are not valid as a React child (found: " +
-          (childString === "[object Object]"
-            ? "object with keys {" + Object.keys(newChild).join(", ") + "}"
-            : childString) +
-          "). " +
-          "If you meant to render a collection of children, use an array " +
-          "instead."
+        (childString === "[object Object]"
+          ? "object with keys {" + Object.keys(newChild).join(", ") + "}"
+          : childString) +
+        "). " +
+        "If you meant to render a collection of children, use an array " +
+        "instead."
       );
     }
 
@@ -7993,9 +8000,9 @@ to return true:wantsResponderID|                            |
         if (returnFiber.tag === HostRoot) {
           error(
             "Functions are not valid as a React child. This may happen if " +
-              "you return %s instead of <%s /> from render. " +
-              "Or maybe you meant to call this function rather than return it.\n" +
-              "  root.render(%s)",
+            "you return %s instead of <%s /> from render. " +
+            "Or maybe you meant to call this function rather than return it.\n" +
+            "  root.render(%s)",
             name,
             name,
             name
@@ -8003,9 +8010,9 @@ to return true:wantsResponderID|                            |
         } else {
           error(
             "Functions are not valid as a React child. This may happen if " +
-              "you return %s instead of <%s /> from render. " +
-              "Or maybe you meant to call this function rather than return it.\n" +
-              "  <%s>{%s}</%s>",
+            "you return %s instead of <%s /> from render. " +
+            "Or maybe you meant to call this function rather than return it.\n" +
+            "  <%s>{%s}</%s>",
             name,
             name,
             parentName,
@@ -8718,10 +8725,10 @@ to return true:wantsResponderID|                            |
 
               error(
                 "Encountered two children with the same key, `%s`. " +
-                  "Keys should be unique so that components maintain their identity " +
-                  "across updates. Non-unique keys may cause children to be " +
-                  "duplicated and/or omitted — the behavior is unsupported and " +
-                  "could change in a future version.",
+                "Keys should be unique so that components maintain their identity " +
+                "across updates. Non-unique keys may cause children to be " +
+                "duplicated and/or omitted — the behavior is unsupported and " +
+                "could change in a future version.",
                 key
               );
 
@@ -8929,7 +8936,7 @@ to return true:wantsResponderID|                            |
         if (typeof iteratorFn !== "function") {
           throw new Error(
             "An object is not an iterable. This error is likely caused by a bug in " +
-              "React. Please file an issue."
+            "React. Please file an issue."
           );
         }
 
@@ -8943,10 +8950,10 @@ to return true:wantsResponderID|                            |
             if (!didWarnAboutGenerators) {
               error(
                 "Using Generators as children is unsupported and will likely yield " +
-                  "unexpected results because enumerating a generator mutates it. " +
-                  "You may convert it to an array with `Array.from()` or the " +
-                  "`[...spread]` operator before rendering. Keep in mind " +
-                  "you might need to polyfill these features for older browsers."
+                "unexpected results because enumerating a generator mutates it. " +
+                "You may convert it to an array with `Array.from()` or the " +
+                "`[...spread]` operator before rendering. Keep in mind " +
+                "you might need to polyfill these features for older browsers."
               );
             }
 
@@ -8957,7 +8964,7 @@ to return true:wantsResponderID|                            |
             if (!didWarnAboutMaps) {
               error(
                 "Using Maps as children is not supported. " +
-                  "Use an array of keyed ReactElements instead."
+                "Use an array of keyed ReactElements instead."
               );
             }
 
@@ -9857,7 +9864,7 @@ to return true:wantsResponderID|                            |
           // It's unlikely their type would change as usually you define them inline.
           error(
             "%s received a final argument that is not an array (instead, received `%s`). When " +
-              "specified, the final argument must be an array.",
+            "specified, the final argument must be an array.",
             currentHookNameInDev,
             typeof deps
           );
@@ -9895,12 +9902,12 @@ to return true:wantsResponderID|                            |
 
             error(
               "React has detected a change in the order of Hooks called by %s. " +
-                "This will lead to bugs and errors if not fixed. " +
-                "For more information, read the Rules of Hooks: https://react.dev/link/rules-of-hooks\n\n" +
-                "   Previous render            Next render\n" +
-                "   ------------------------------------------------------\n" +
-                "%s" +
-                "   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
+              "This will lead to bugs and errors if not fixed. " +
+              "For more information, read the Rules of Hooks: https://react.dev/link/rules-of-hooks\n\n" +
+              "   Previous render            Next render\n" +
+              "   ------------------------------------------------------\n" +
+              "%s" +
+              "   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
               componentName,
               table
             );
@@ -9931,9 +9938,9 @@ to return true:wantsResponderID|                            |
 
             error(
               "async/await is not yet supported in Client Components, only " +
-                "Server Components. This error is often caused by accidentally " +
-                "adding `'use client'` to a module that was originally written " +
-                "for the server."
+              "Server Components. This error is often caused by accidentally " +
+              "adding `'use client'` to a module that was originally written " +
+              "for the server."
             );
           }
         }
@@ -9943,11 +9950,11 @@ to return true:wantsResponderID|                            |
     function throwInvalidHookError() {
       throw new Error(
         "Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for" +
-          " one of the following reasons:\n" +
-          "1. You might have mismatching versions of React and the renderer (such as React DOM)\n" +
-          "2. You might be breaking the Rules of Hooks\n" +
-          "3. You might have more than one copy of React in the same app\n" +
-          "See https://react.dev/link/invalid-hook-call for tips about how to debug and fix this problem."
+        " one of the following reasons:\n" +
+        "1. You might have mismatching versions of React and the renderer (such as React DOM)\n" +
+        "2. You might be breaking the Rules of Hooks\n" +
+        "3. You might have more than one copy of React in the same app\n" +
+        "See https://react.dev/link/invalid-hook-call for tips about how to debug and fix this problem."
       );
     }
 
@@ -9963,8 +9970,8 @@ to return true:wantsResponderID|                            |
         {
           error(
             "%s received a final argument during this render, but not during " +
-              "the previous render. Even though the final argument is optional, " +
-              "its type cannot change between renders.",
+            "the previous render. Even though the final argument is optional, " +
+            "its type cannot change between renders.",
             currentHookNameInDev
           );
         }
@@ -9978,9 +9985,9 @@ to return true:wantsResponderID|                            |
         if (nextDeps.length !== prevDeps.length) {
           error(
             "The final argument passed to %s changed size between renders. The " +
-              "order and size of this array must remain constant.\n\n" +
-              "Previous: %s\n" +
-              "Incoming: %s",
+            "order and size of this array must remain constant.\n\n" +
+            "Previous: %s\n" +
+            "Incoming: %s",
             currentHookNameInDev,
             "[" + prevDeps.join(", ") + "]",
             "[" + nextDeps.join(", ") + "]"
@@ -10141,7 +10148,7 @@ to return true:wantsResponderID|                            |
         if (
           current !== null &&
           (current.flags & StaticMask) !==
-            (workInProgress.flags & StaticMask) && // Disable this warning in legacy mode, because legacy Suspense is weird
+          (workInProgress.flags & StaticMask) && // Disable this warning in legacy mode, because legacy Suspense is weird
           // and creates false positives. To make this work in legacy mode, we'd
           // need to mark fibers that commit in an incomplete state, somehow. For
           // now I'll disable the warning that most of the bugs that would trigger
@@ -10150,7 +10157,7 @@ to return true:wantsResponderID|                            |
         ) {
           error(
             "Internal React error: Expected static flag was missing. Please " +
-              "notify the React team."
+            "notify the React team."
           );
         }
       }
@@ -10164,7 +10171,7 @@ to return true:wantsResponderID|                            |
       if (didRenderTooFewHooks) {
         throw new Error(
           "Rendered fewer hooks than expected. This may be caused by an accidental " +
-            "early return statement."
+          "early return statement."
         );
       }
 
@@ -10183,8 +10190,8 @@ to return true:wantsResponderID|                            |
 
             error(
               "`use` was called from inside a try/catch block. This is not allowed " +
-                "and can lead to unexpected behavior. To handle errors triggered " +
-                "by `use`, wrap your component in a error boundary."
+              "and can lead to unexpected behavior. To handle errors triggered " +
+              "by `use`, wrap your component in a error boundary."
             );
           }
         }
@@ -10250,7 +10257,7 @@ to return true:wantsResponderID|                            |
         if (numberOfReRenders >= RE_RENDER_LIMIT) {
           throw new Error(
             "Too many re-renders. React limits the number of renders to prevent " +
-              "an infinite loop."
+            "an infinite loop."
           );
         }
 
@@ -10576,7 +10583,7 @@ to return true:wantsResponderID|                            |
             // the future if we implement resuming, or some form of that.
             error(
               "Internal error: Expected work-in-progress queue to be a clone. " +
-                "This is a bug in React."
+              "This is a bug in React."
             );
           }
         }
@@ -11208,7 +11215,7 @@ to return true:wantsResponderID|                            |
           if (!refObject.hasOwnProperty("current")) {
             error(
               "Expected useImperativeHandle() first argument to either be a " +
-                "ref callback or React.createRef() object. Instead received: %s.",
+              "ref callback or React.createRef() object. Instead received: %s.",
               "an object with keys {" + Object.keys(refObject).join(", ") + "}"
             );
           }
@@ -11228,7 +11235,7 @@ to return true:wantsResponderID|                            |
         if (typeof create !== "function") {
           error(
             "Expected useImperativeHandle() second argument to be a function " +
-              "that creates a handle. Instead received: %s.",
+            "that creates a handle. Instead received: %s.",
             create !== null ? typeof create : "null"
           );
         }
@@ -11255,7 +11262,7 @@ to return true:wantsResponderID|                            |
         if (typeof create !== "function") {
           error(
             "Expected useImperativeHandle() second argument to be a function " +
-              "that creates a handle. Instead received: %s.",
+            "that creates a handle. Instead received: %s.",
             create !== null ? typeof create : "null"
           );
         }
@@ -11494,8 +11501,8 @@ to return true:wantsResponderID|                            |
             if (updatedFibersCount > 10) {
               warn(
                 "Detected a large number of updates inside startTransition. " +
-                  "If this is due to a subscription please re-write it to use React provided hooks. " +
-                  "Otherwise concurrent mode guarantees are off the table."
+                "If this is due to a subscription please re-write it to use React provided hooks. " +
+                "Otherwise concurrent mode guarantees are off the table."
               );
             }
           }
@@ -11576,8 +11583,8 @@ to return true:wantsResponderID|                            |
         if (typeof arguments[3] === "function") {
           error(
             "State updates from the useState() and useReducer() Hooks don't support the " +
-              "second callback argument. To execute a side effect after " +
-              "rendering, declare it in the component body with useEffect()."
+            "second callback argument. To execute a side effect after " +
+            "rendering, declare it in the component body with useEffect()."
           );
         }
       }
@@ -11609,8 +11616,8 @@ to return true:wantsResponderID|                            |
         if (typeof arguments[3] === "function") {
           error(
             "State updates from the useState() and useReducer() Hooks don't support the " +
-              "second callback argument. To execute a side effect after " +
-              "rendering, declare it in the component body with useEffect()."
+            "second callback argument. To execute a side effect after " +
+            "rendering, declare it in the component body with useEffect()."
           );
         }
       }
@@ -11768,18 +11775,18 @@ to return true:wantsResponderID|                            |
       var warnInvalidContextAccess = function () {
         error(
           "Context can only be read while React is rendering. " +
-            "In classes, you can read it in the render method or getDerivedStateFromProps. " +
-            "In function components, you can read it directly in the function body, but not " +
-            "inside Hooks like useReducer() or useMemo()."
+          "In classes, you can read it in the render method or getDerivedStateFromProps. " +
+          "In function components, you can read it directly in the function body, but not " +
+          "inside Hooks like useReducer() or useMemo()."
         );
       };
 
       var warnInvalidHookAccess = function () {
         error(
           "Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. " +
-            "You can only call Hooks at the top level of your React function. " +
-            "For more information, see " +
-            "https://react.dev/link/rules-of-hooks"
+          "You can only call Hooks at the top level of your React function. " +
+          "For more information, see " +
+          "https://react.dev/link/rules-of-hooks"
         );
       };
 
@@ -12830,11 +12837,11 @@ to return true:wantsResponderID|                            |
         value: function () {
           throw new Error(
             "_processChildContext is not available in React 16+. This likely " +
-              "means you have multiple copies of React and are attempting to nest " +
-              "a React 15 tree inside a React 16 tree using " +
-              "unstable_renderSubtreeIntoContainer, which isn't supported. Try " +
-              "to make sure you have only one copy of React (and ideally, switch " +
-              "to ReactDOM.createPortal)."
+            "means you have multiple copies of React and are attempting to nest " +
+            "a React 15 tree inside a React 16 tree using " +
+            "unstable_renderSubtreeIntoContainer, which isn't supported. Try " +
+            "to make sure you have only one copy of React (and ideally, switch " +
+            "to ReactDOM.createPortal)."
           );
         }
       });
@@ -12854,7 +12861,7 @@ to return true:wantsResponderID|                            |
 
           error(
             "Expected the last optional `callback` argument to be a " +
-              "function. Instead received: %s.",
+            "function. Instead received: %s.",
             callback
           );
         }
@@ -12871,7 +12878,7 @@ to return true:wantsResponderID|                            |
 
             error(
               "%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. " +
-                "You have returned undefined.",
+              "You have returned undefined.",
               componentName
             );
           }
@@ -13024,7 +13031,7 @@ to return true:wantsResponderID|                            |
           if (shouldUpdate === undefined) {
             error(
               "%s.shouldComponentUpdate(): Returned undefined instead of a " +
-                "boolean value. Make sure to return true or false.",
+              "boolean value. Make sure to return true or false.",
               getComponentNameFromType(ctor) || "Component"
             );
           }
@@ -13053,13 +13060,13 @@ to return true:wantsResponderID|                            |
           if (ctor.prototype && typeof ctor.prototype.render === "function") {
             error(
               "No `render` method found on the %s " +
-                "instance: did you accidentally return an object from the constructor?",
+              "instance: did you accidentally return an object from the constructor?",
               name
             );
           } else {
             error(
               "No `render` method found on the %s " +
-                "instance: you may have forgotten to define `render`.",
+              "instance: you may have forgotten to define `render`.",
               name
             );
           }
@@ -13072,8 +13079,8 @@ to return true:wantsResponderID|                            |
         ) {
           error(
             "getInitialState was defined on %s, a plain JavaScript class. " +
-              "This is only supported for classes created using React.createClass. " +
-              "Did you mean to define a state property instead?",
+            "This is only supported for classes created using React.createClass. " +
+            "Did you mean to define a state property instead?",
             name
           );
         }
@@ -13084,8 +13091,8 @@ to return true:wantsResponderID|                            |
         ) {
           error(
             "getDefaultProps was defined on %s, a plain JavaScript class. " +
-              "This is only supported for classes created using React.createClass. " +
-              "Use a static property to define defaultProps instead.",
+            "This is only supported for classes created using React.createClass. " +
+            "Use a static property to define defaultProps instead.",
             name
           );
         }
@@ -13093,7 +13100,7 @@ to return true:wantsResponderID|                            |
         if (instance.propTypes) {
           error(
             "propTypes was defined as an instance property on %s. Use a static " +
-              "property to define propTypes instead.",
+            "property to define propTypes instead.",
             name
           );
         }
@@ -13101,7 +13108,7 @@ to return true:wantsResponderID|                            |
         if (instance.contextType) {
           error(
             "contextType was defined as an instance property on %s. Use a static " +
-              "property to define contextType instead.",
+            "property to define contextType instead.",
             name
           );
         }
@@ -13110,7 +13117,7 @@ to return true:wantsResponderID|                            |
           if (ctor.childContextTypes) {
             error(
               "%s uses the legacy childContextTypes API which is no longer supported. " +
-                "Use React.createContext() instead.",
+              "Use React.createContext() instead.",
               name
             );
           }
@@ -13118,7 +13125,7 @@ to return true:wantsResponderID|                            |
           if (ctor.contextTypes) {
             error(
               "%s uses the legacy contextTypes API which is no longer supported. " +
-                "Use React.createContext() with static contextType instead.",
+              "Use React.createContext() with static contextType instead.",
               name
             );
           }
@@ -13127,9 +13134,9 @@ to return true:wantsResponderID|                            |
         if (typeof instance.componentShouldUpdate === "function") {
           error(
             "%s has a method called " +
-              "componentShouldUpdate(). Did you mean shouldComponentUpdate()? " +
-              "The name is phrased as a question because the function is " +
-              "expected to return a value.",
+            "componentShouldUpdate(). Did you mean shouldComponentUpdate()? " +
+            "The name is phrased as a question because the function is " +
+            "expected to return a value.",
             name
           );
         }
@@ -13141,8 +13148,8 @@ to return true:wantsResponderID|                            |
         ) {
           error(
             "%s has a method called shouldComponentUpdate(). " +
-              "shouldComponentUpdate should not be used when extending React.PureComponent. " +
-              "Please extend React.Component if shouldComponentUpdate is used.",
+            "shouldComponentUpdate should not be used when extending React.PureComponent. " +
+            "Please extend React.Component if shouldComponentUpdate is used.",
             getComponentNameFromType(ctor) || "A pure component"
           );
         }
@@ -13150,8 +13157,8 @@ to return true:wantsResponderID|                            |
         if (typeof instance.componentDidUnmount === "function") {
           error(
             "%s has a method called " +
-              "componentDidUnmount(). But there is no such lifecycle method. " +
-              "Did you mean componentWillUnmount()?",
+            "componentDidUnmount(). But there is no such lifecycle method. " +
+            "Did you mean componentWillUnmount()?",
             name
           );
         }
@@ -13159,10 +13166,10 @@ to return true:wantsResponderID|                            |
         if (typeof instance.componentDidReceiveProps === "function") {
           error(
             "%s has a method called " +
-              "componentDidReceiveProps(). But there is no such lifecycle method. " +
-              "If you meant to update the state in response to changing props, " +
-              "use componentWillReceiveProps(). If you meant to fetch data or " +
-              "run side-effects or mutations after React has updated the UI, use componentDidUpdate().",
+            "componentDidReceiveProps(). But there is no such lifecycle method. " +
+            "If you meant to update the state in response to changing props, " +
+            "use componentWillReceiveProps(). If you meant to fetch data or " +
+            "run side-effects or mutations after React has updated the UI, use componentDidUpdate().",
             name
           );
         }
@@ -13170,7 +13177,7 @@ to return true:wantsResponderID|                            |
         if (typeof instance.componentWillRecieveProps === "function") {
           error(
             "%s has a method called " +
-              "componentWillRecieveProps(). Did you mean componentWillReceiveProps()?",
+            "componentWillRecieveProps(). Did you mean componentWillReceiveProps()?",
             name
           );
         }
@@ -13178,7 +13185,7 @@ to return true:wantsResponderID|                            |
         if (typeof instance.UNSAFE_componentWillRecieveProps === "function") {
           error(
             "%s has a method called " +
-              "UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?",
+            "UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?",
             name
           );
         }
@@ -13188,7 +13195,7 @@ to return true:wantsResponderID|                            |
         if (instance.props !== undefined && hasMutatedProps) {
           error(
             "When calling super() in `%s`, make sure to pass " +
-              "up the same props that your component's constructor was passed.",
+            "up the same props that your component's constructor was passed.",
             name
           );
         }
@@ -13196,7 +13203,7 @@ to return true:wantsResponderID|                            |
         if (instance.defaultProps) {
           error(
             "Setting defaultProps as an instance property on %s is not supported and will be ignored." +
-              " Instead, define defaultProps as a static property on %s.",
+            " Instead, define defaultProps as a static property on %s.",
             name,
             name
           );
@@ -13211,7 +13218,7 @@ to return true:wantsResponderID|                            |
 
           error(
             "%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). " +
-              "This component defines getSnapshotBeforeUpdate() only.",
+            "This component defines getSnapshotBeforeUpdate() only.",
             getComponentNameFromType(ctor)
           );
         }
@@ -13219,7 +13226,7 @@ to return true:wantsResponderID|                            |
         if (typeof instance.getDerivedStateFromProps === "function") {
           error(
             "%s: getDerivedStateFromProps() is defined as an instance method " +
-              "and will be ignored. Instead, declare it as a static method.",
+            "and will be ignored. Instead, declare it as a static method.",
             name
           );
         }
@@ -13227,7 +13234,7 @@ to return true:wantsResponderID|                            |
         if (typeof instance.getDerivedStateFromError === "function") {
           error(
             "%s: getDerivedStateFromError() is defined as an instance method " +
-              "and will be ignored. Instead, declare it as a static method.",
+            "and will be ignored. Instead, declare it as a static method.",
             name
           );
         }
@@ -13235,7 +13242,7 @@ to return true:wantsResponderID|                            |
         if (typeof ctor.getSnapshotBeforeUpdate === "function") {
           error(
             "%s: getSnapshotBeforeUpdate() is defined as a static method " +
-              "and will be ignored. Instead, declare it as an instance method.",
+            "and will be ignored. Instead, declare it as an instance method.",
             name
           );
         }
@@ -13252,7 +13259,7 @@ to return true:wantsResponderID|                            |
         ) {
           error(
             "%s.getChildContext(): childContextTypes must be defined in order to " +
-              "use getChildContext().",
+            "use getChildContext().",
             name
           );
         }
@@ -13305,7 +13312,7 @@ to return true:wantsResponderID|                            |
 
             error(
               "%s defines an invalid contextType. " +
-                "contextType should point to the Context object returned by React.createContext().%s",
+              "contextType should point to the Context object returned by React.createContext().%s",
               getComponentNameFromType(ctor) || "Component",
               addendum
             );
@@ -13349,9 +13356,9 @@ to return true:wantsResponderID|                            |
 
             error(
               "`%s` uses `getDerivedStateFromProps` but its initial state is " +
-                "%s. This is not recommended. Instead, define the initial state by " +
-                "assigning an object to `this.state` in the constructor of `%s`. " +
-                "This ensures that `getDerivedStateFromProps` arguments have a consistent shape.",
+              "%s. This is not recommended. Instead, define the initial state by " +
+              "assigning an object to `this.state` in the constructor of `%s`. " +
+              "This ensures that `getDerivedStateFromProps` arguments have a consistent shape.",
               componentName,
               instance.state === null ? "null" : "undefined",
               componentName
@@ -13381,7 +13388,7 @@ to return true:wantsResponderID|                            |
           if (
             typeof instance.componentWillReceiveProps === "function" &&
             instance.componentWillReceiveProps.__suppressDeprecationWarning !==
-              true
+            true
           ) {
             foundWillReceivePropsName = "componentWillReceiveProps";
           } else if (
@@ -13420,9 +13427,9 @@ to return true:wantsResponderID|                            |
 
               error(
                 "Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n" +
-                  "%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\n" +
-                  "The above lifecycles should be removed. Learn more about this warning here:\n" +
-                  "https://react.dev/link/unsafe-component-lifecycles",
+                "%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\n" +
+                "The above lifecycles should be removed. Learn more about this warning here:\n" +
+                "https://react.dev/link/unsafe-component-lifecycles",
                 _componentName,
                 newApiName,
                 foundWillMountName !== null ? "\n  " + foundWillMountName : "",
@@ -13454,8 +13461,8 @@ to return true:wantsResponderID|                            |
         {
           error(
             "%s.componentWillMount(): Assigning directly to this.state is " +
-              "deprecated (except inside a component's " +
-              "constructor). Use setState instead.",
+            "deprecated (except inside a component's " +
+            "constructor). Use setState instead.",
             getComponentNameFromFiber(workInProgress) || "Component"
           );
         }
@@ -13494,8 +13501,8 @@ to return true:wantsResponderID|                            |
 
             error(
               "%s.componentWillReceiveProps(): Assigning directly to " +
-                "this.state is deprecated (except inside a component's " +
-                "constructor). Use setState instead.",
+              "this.state is deprecated (except inside a component's " +
+              "constructor). Use setState instead.",
               componentName
             );
           }
@@ -13536,8 +13543,8 @@ to return true:wantsResponderID|                            |
 
             error(
               "%s: It is not recommended to assign props directly to state " +
-                "because updates to props won't be reflected in state. " +
-                "In most cases, it is better to use props directly.",
+              "because updates to props won't be reflected in state. " +
+              "In most cases, it is better to use props directly.",
               componentName
             );
           }
@@ -13986,8 +13993,8 @@ to return true:wantsResponderID|                            |
           var componentName = source ? getComponentNameFromFiber(source) : null;
           var componentNameMessage = componentName
             ? "The above error occurred in the <" +
-              componentName +
-              "> component:"
+            componentName +
+            "> component:"
             : "The above error occurred in one of your React components:";
           var errorBoundaryMessage;
 
@@ -14100,7 +14107,7 @@ to return true:wantsResponderID|                            |
               if (!includesSomeLane(fiber.lanes, SyncLane)) {
                 error(
                   "%s: Error boundaries should implement getDerivedStateFromError(). " +
-                    "In that method, return a state update to display an error message or fallback UI.",
+                  "In that method, return a state update to display an error message or fallback UI.",
                   getComponentNameFromFiber(fiber) || "Unknown"
                 );
               }
@@ -14401,9 +14408,9 @@ to return true:wantsResponderID|                            |
 
             throw new Error(
               "Unexpected Suspense handler tag (" +
-                suspenseBoundary.tag +
-                "). This " +
-                "is a bug in React."
+              suspenseBoundary.tag +
+              "). This " +
+              "is a bug in React."
             );
           } else {
             // No boundary was found. Unless this is a sync update, this is OK.
@@ -14422,9 +14429,9 @@ to return true:wantsResponderID|                            |
               // In a legacy root, suspending without a boundary is always an error.
               var uncaughtSuspenseError = new Error(
                 "A component suspended while responding to synchronous input. This " +
-                  "will cause the UI to be replaced with a loading indicator. To " +
-                  "fix, updates that suspend should be wrapped " +
-                  "with startTransition."
+                "will cause the UI to be replaced with a loading indicator. To " +
+                "fix, updates that suspend should be wrapped " +
+                "with startTransition."
               );
               value = uncaughtSuspenseError;
             }
@@ -14504,8 +14511,8 @@ to return true:wantsResponderID|                            |
 
     var SelectiveHydrationException = new Error(
       "This is not a real error. It's an implementation detail of React's " +
-        "selective hydration feature. If this leaks into userspace, it's a bug in " +
-        "React. Please file an issue."
+      "selective hydration feature. If this leaks into userspace, it's a bug in " +
+      "React. Please file an issue."
     );
     var didReceiveUpdate = false;
     var didWarnAboutBadClass;
@@ -14689,7 +14696,7 @@ to return true:wantsResponderID|                            |
             if (!didWarnAboutDefaultPropsOnFunctionComponent[componentName]) {
               error(
                 "%s: Support for defaultProps will be removed from memo components " +
-                  "in a future major release. Use JavaScript default parameters instead.",
+                "in a future major release. Use JavaScript default parameters instead.",
                 componentName
               );
 
@@ -15191,7 +15198,7 @@ to return true:wantsResponderID|                            |
           if (!didWarnAboutReassigningProps) {
             error(
               "It looks like %s is reassigning its own `this.props` while rendering. " +
-                "This is not supported and can lead to confusing bugs.",
+              "This is not supported and can lead to confusing bugs.",
               getComponentNameFromFiber(workInProgress) || "a component"
             );
           }
@@ -15446,9 +15453,9 @@ to return true:wantsResponderID|                            |
 
       throw new Error(
         "Element type is invalid. Received a promise that resolves to: " +
-          Component +
-          ". " +
-          ("Lazy element type must resolve to a class or function." + hint)
+        Component +
+        ". " +
+        ("Lazy element type must resolve to a class or function." + hint)
       );
     }
 
@@ -15510,7 +15517,7 @@ to return true:wantsResponderID|                            |
           if (!didWarnAboutBadClass[componentName]) {
             error(
               "The <%s /> component appears to have a render method, but doesn't extend React.Component. " +
-                "This is likely to cause errors. Change %s to extend React.Component instead.",
+              "This is likely to cause errors. Change %s to extend React.Component instead.",
               componentName,
               componentName
             );
@@ -15555,10 +15562,10 @@ to return true:wantsResponderID|                            |
           if (!didWarnAboutModulePatternComponent[_componentName]) {
             error(
               "The <%s /> component appears to be a function component that returns a class instance. " +
-                "Change %s to a class that extends React.Component instead. " +
-                "If you can't use a class try assigning the prototype on the function as a workaround. " +
-                "`%s.prototype = React.Component.prototype`. Don't use an arrow function since it " +
-                "cannot be called with `new` by React.",
+              "Change %s to a class that extends React.Component instead. " +
+              "If you can't use a class try assigning the prototype on the function as a workaround. " +
+              "`%s.prototype = React.Component.prototype`. Don't use an arrow function since it " +
+              "cannot be called with `new` by React.",
               _componentName,
               _componentName,
               _componentName
@@ -15584,10 +15591,10 @@ to return true:wantsResponderID|                            |
           if (!didWarnAboutModulePatternComponent[_componentName2]) {
             error(
               "The <%s /> component appears to be a function component that returns a class instance. " +
-                "Change %s to a class that extends React.Component instead. " +
-                "If you can't use a class try assigning the prototype on the function as a workaround. " +
-                "`%s.prototype = React.Component.prototype`. Don't use an arrow function since it " +
-                "cannot be called with `new` by React.",
+              "Change %s to a class that extends React.Component instead. " +
+              "If you can't use a class try assigning the prototype on the function as a workaround. " +
+              "`%s.prototype = React.Component.prototype`. Don't use an arrow function since it " +
+              "cannot be called with `new` by React.",
               _componentName2,
               _componentName2,
               _componentName2
@@ -15635,7 +15642,7 @@ to return true:wantsResponderID|                            |
           if (Component.contextTypes) {
             error(
               "%s uses the legacy contextTypes API which is no longer supported. " +
-                "Use React.createContext() with React.useContext() instead.",
+              "Use React.createContext() with React.useContext() instead.",
               getComponentNameFromType(Component) || "Unknown"
             );
           }
@@ -15657,7 +15664,7 @@ to return true:wantsResponderID|                            |
           if (Component.childContextTypes) {
             error(
               "childContextTypes cannot be defined on a function component.\n" +
-                "  %s.childContextTypes = ...",
+              "  %s.childContextTypes = ...",
               Component.displayName || Component.name || "Component"
             );
           }
@@ -15679,8 +15686,8 @@ to return true:wantsResponderID|                            |
 
             error(
               "Function components cannot be given refs. " +
-                "Attempts to access this ref will fail. " +
-                "Did you mean to use React.forwardRef()?%s",
+              "Attempts to access this ref will fail. " +
+              "Did you mean to use React.forwardRef()?%s",
               info
             );
           }
@@ -15693,7 +15700,7 @@ to return true:wantsResponderID|                            |
           if (!didWarnAboutDefaultPropsOnFunctionComponent[_componentName3]) {
             error(
               "%s: Support for defaultProps will be removed from function components " +
-                "in a future major release. Use JavaScript default parameters instead.",
+              "in a future major release. Use JavaScript default parameters instead.",
               _componentName3
             );
 
@@ -16285,8 +16292,8 @@ to return true:wantsResponderID|                            |
             } else {
               error = new Error(
                 "The server could not finish this Suspense boundary, likely " +
-                  "due to an error during server rendering. Switched to " +
-                  "client rendering."
+                "due to an error during server rendering. Switched to " +
+                "client rendering."
               );
             }
 
@@ -16404,7 +16411,7 @@ to return true:wantsResponderID|                            |
           var _capturedValue = createCapturedValueFromError(
             new Error(
               "There was an error while hydrating this Suspense boundary. " +
-                "Switched to client rendering."
+              "Switched to client rendering."
             )
           );
 
@@ -16557,7 +16564,7 @@ to return true:wantsResponderID|                            |
               case "backwards": {
                 error(
                   '"%s" is not a valid value for revealOrder on <SuspenseList />. ' +
-                    'Use lowercase "%s" instead.',
+                  'Use lowercase "%s" instead.',
                   revealOrder,
                   revealOrder.toLowerCase()
                 );
@@ -16569,7 +16576,7 @@ to return true:wantsResponderID|                            |
               case "backward": {
                 error(
                   '"%s" is not a valid value for revealOrder on <SuspenseList />. ' +
-                    'React uses the -s suffix in the spelling. Use "%ss" instead.',
+                  'React uses the -s suffix in the spelling. Use "%ss" instead.',
                   revealOrder,
                   revealOrder.toLowerCase()
                 );
@@ -16580,7 +16587,7 @@ to return true:wantsResponderID|                            |
               default:
                 error(
                   '"%s" is not a supported revealOrder on <SuspenseList />. ' +
-                    'Did you mean "together", "forwards" or "backwards"?',
+                  'Did you mean "together", "forwards" or "backwards"?',
                   revealOrder
                 );
 
@@ -16589,7 +16596,7 @@ to return true:wantsResponderID|                            |
           } else {
             error(
               "%s is not a supported value for revealOrder on <SuspenseList />. " +
-                'Did you mean "together", "forwards" or "backwards"?',
+              'Did you mean "together", "forwards" or "backwards"?',
               revealOrder
             );
           }
@@ -16605,7 +16612,7 @@ to return true:wantsResponderID|                            |
 
             error(
               '"%s" is not a supported value for tail on <SuspenseList />. ' +
-                'Did you mean "collapsed" or "hidden"?',
+              'Did you mean "collapsed" or "hidden"?',
               tailMode
             );
           } else if (
@@ -16616,8 +16623,8 @@ to return true:wantsResponderID|                            |
 
             error(
               '<SuspenseList tail="%s" /> is only valid if revealOrder is ' +
-                '"forwards" or "backwards". ' +
-                'Did you mean to specify revealOrder="forwards"?',
+              '"forwards" or "backwards". ' +
+              'Did you mean to specify revealOrder="forwards"?',
               tailMode
             );
           }
@@ -16636,10 +16643,10 @@ to return true:wantsResponderID|                            |
 
           error(
             "A nested %s was passed to row #%s in <SuspenseList />. Wrap it in " +
-              "an additional SuspenseList to configure its revealOrder: " +
-              "<SuspenseList revealOrder=...> ... " +
-              "<SuspenseList revealOrder=...>{%s}</SuspenseList> ... " +
-              "</SuspenseList>",
+            "an additional SuspenseList to configure its revealOrder: " +
+            "<SuspenseList revealOrder=...> ... " +
+            "<SuspenseList revealOrder=...>{%s}</SuspenseList> ... " +
+            "</SuspenseList>",
             type,
             index,
             type
@@ -16687,8 +16694,8 @@ to return true:wantsResponderID|                            |
             } else {
               error(
                 'A single row was passed to a <SuspenseList revealOrder="%s" />. ' +
-                  "This is not useful since it needs multiple rows. " +
-                  "Did you mean to pass multiple children or an array?",
+                "This is not useful since it needs multiple rows. " +
+                "Did you mean to pass multiple children or an array?",
                 revealOrder
               );
             }
@@ -16963,9 +16970,9 @@ to return true:wantsResponderID|                            |
         if (typeof render !== "function") {
           error(
             "A context consumer was rendered with multiple children, or a child " +
-              "that isn't a function. A context consumer expects a single child " +
-              "that is a function. If you did pass a function, make sure there " +
-              "is no trailing or leading whitespace around it."
+            "that isn't a function. A context consumer expects a single child " +
+            "that is a function. If you did pass a function, make sure there " +
+            "is no trailing or leading whitespace around it."
           );
         }
       }
@@ -17552,9 +17559,9 @@ to return true:wantsResponderID|                            |
 
       throw new Error(
         "Unknown unit of work tag (" +
-          workInProgress.tag +
-          "). This error is likely caused by a bug in " +
-          "React. Please file an issue."
+        workInProgress.tag +
+        "). This error is likely caused by a bug in " +
+        "React. Please file an issue."
       );
     }
 
@@ -17613,7 +17620,7 @@ to return true:wantsResponderID|                            |
           ) {
             error(
               "Detected multiple renderers concurrently rendering the " +
-                "same context provider. This is currently unsupported."
+              "same context provider. This is currently unsupported."
             );
           }
 
@@ -17674,7 +17681,7 @@ to return true:wantsResponderID|                            |
         if (node !== propagationRoot) {
           error(
             "Expected to find the propagation root when scheduling context work. " +
-              "This error is likely caused by a bug in React. Please file an issue."
+            "This error is likely caused by a bug in React. Please file an issue."
           );
         }
       }
@@ -17854,9 +17861,9 @@ to return true:wantsResponderID|                            |
         if (isDisallowedContextReadInDEV) {
           error(
             "Context can only be read while React is rendering. " +
-              "In classes, you can read it in the render method or getDerivedStateFromProps. " +
-              "In function components, you can read it directly in the function body, but not " +
-              "inside Hooks like useReducer() or useMemo()."
+            "In classes, you can read it in the render method or getDerivedStateFromProps. " +
+            "In function components, you can read it directly in the function body, but not " +
+            "inside Hooks like useReducer() or useMemo()."
           );
         }
       }
@@ -17886,9 +17893,9 @@ to return true:wantsResponderID|                            |
           if (consumer === null) {
             throw new Error(
               "Context can only be read while React is rendering. " +
-                "In classes, you can read it in the render method or getDerivedStateFromProps. " +
-                "In function components, you can read it directly in the function body, but not " +
-                "inside Hooks like useReducer() or useMemo()."
+              "In classes, you can read it in the render method or getDerivedStateFromProps. " +
+              "In function components, you can read it directly in the function body, but not " +
+              "inside Hooks like useReducer() or useMemo()."
             );
           } // This is the first dependency for this component. Create a new list.
 
@@ -17920,7 +17927,7 @@ to return true:wantsResponderID|                            |
       return transition;
     }
 
-    function handleAsyncAction(transition, thenable) {}
+    function handleAsyncAction(transition, thenable) { }
 
     function notifyTransitionCallbacks(transition, returnValue) {
       var callbacks = transition._callbacks;
@@ -18495,7 +18502,7 @@ to return true:wantsResponderID|                            |
           if (!wasHydrated) {
             throw new Error(
               "A dehydrated suspense component was completed without a hydrated node. " +
-                "This is probably a bug in React."
+              "This is probably a bug in React."
             );
           }
 
@@ -18565,7 +18572,12 @@ to return true:wantsResponderID|                            |
 
     function completeWork(current, workInProgress, renderLanes) {
       var newProps = workInProgress.pendingProps; // Note: This intentionally doesn't check if we're hydrating because comparing
-
+      if (workInProgress.flags & 1 && (workInProgress.type?.displayName || workInProgress.type?.name) !== "View")
+        insertUpdateComponents(
+          defrost.getComponentNameFromFiber(workInProgress),
+          workInProgress.flags,
+          workInProgress.key,
+        );
       switch (workInProgress.tag) {
         case IndeterminateComponent:
         case LazyComponent:
@@ -18649,7 +18661,7 @@ to return true:wantsResponderID|                            |
               if (workInProgress.stateNode === null) {
                 throw new Error(
                   "We must have new props for new mounts. This error is likely " +
-                    "caused by a bug in React. Please file an issue."
+                  "caused by a bug in React. Please file an issue."
                 );
               } // This can happen when we abort work.
 
@@ -18707,7 +18719,7 @@ to return true:wantsResponderID|                            |
               if (workInProgress.stateNode === null) {
                 throw new Error(
                   "We must have new props for new mounts. This error is likely " +
-                    "caused by a bug in React. Please file an issue."
+                  "caused by a bug in React. Please file an issue."
                 );
               } // This can happen when we abort work.
             }
@@ -18986,7 +18998,7 @@ to return true:wantsResponderID|                            |
                 // time we have to render. So rendering one more row would likely
                 // exceed it.
                 now$1() * 2 - renderState.renderingStartTime >
-                  getRenderTargetTime() &&
+                getRenderTargetTime() &&
                 renderLanes !== OffscreenLane
               ) {
                 // We have now passed our CPU deadline and we'll just give up further
@@ -19131,9 +19143,9 @@ to return true:wantsResponderID|                            |
 
       throw new Error(
         "Unknown unit of work tag (" +
-          workInProgress.tag +
-          "). This error is likely caused by a bug in " +
-          "React. Please file an issue."
+        workInProgress.tag +
+        "). This error is likely caused by a bug in " +
+        "React. Please file an issue."
       );
     }
 
@@ -19188,7 +19200,7 @@ to return true:wantsResponderID|                            |
             if (workInProgress.alternate === null) {
               throw new Error(
                 "Threw in newly mounted dehydrated component. This is likely a bug in " +
-                  "React. Please file an issue."
+                "React. Please file an issue."
               );
             }
           }
@@ -19415,7 +19427,7 @@ to return true:wantsResponderID|                            |
             if (typeof retVal === "function") {
               error(
                 "Unexpected return value from a callback ref in %s. " +
-                  "A callback ref should not return a function.",
+                "A callback ref should not return a function.",
                 getComponentNameFromFiber(current)
               );
             }
@@ -19521,10 +19533,10 @@ to return true:wantsResponderID|                            |
                   if (instance.props !== finishedWork.memoizedProps) {
                     error(
                       "Expected %s props to match memoized props before " +
-                        "getSnapshotBeforeUpdate. " +
-                        "This might either be because of a bug in React, or because " +
-                        "a component reassigns its own `this.props`. " +
-                        "Please file an issue.",
+                      "getSnapshotBeforeUpdate. " +
+                      "This might either be because of a bug in React, or because " +
+                      "a component reassigns its own `this.props`. " +
+                      "Please file an issue.",
                       getComponentNameFromFiber(finishedWork) || "instance"
                     );
                   }
@@ -19532,10 +19544,10 @@ to return true:wantsResponderID|                            |
                   if (instance.state !== finishedWork.memoizedState) {
                     error(
                       "Expected %s state to match memoized state before " +
-                        "getSnapshotBeforeUpdate. " +
-                        "This might either be because of a bug in React, or because " +
-                        "a component reassigns its own `this.state`. " +
-                        "Please file an issue.",
+                      "getSnapshotBeforeUpdate. " +
+                      "This might either be because of a bug in React, or because " +
+                      "a component reassigns its own `this.state`. " +
+                      "Please file an issue.",
                       getComponentNameFromFiber(finishedWork) || "instance"
                     );
                   }
@@ -19560,7 +19572,7 @@ to return true:wantsResponderID|                            |
 
                   error(
                     "%s.getSnapshotBeforeUpdate(): A snapshot value (or null) " +
-                      "must be returned. You have returned undefined.",
+                    "must be returned. You have returned undefined.",
                     getComponentNameFromFiber(finishedWork)
                   );
                 }
@@ -19590,7 +19602,7 @@ to return true:wantsResponderID|                            |
           if ((flags & Snapshot) !== NoFlags$1) {
             throw new Error(
               "This unit of work tag should not have side-effects. This error is " +
-                "likely caused by a bug in React. Please file an issue."
+              "likely caused by a bug in React. Please file an issue."
             );
           }
         }
@@ -19712,7 +19724,7 @@ to return true:wantsResponderID|                            |
 
                 error(
                   "%s must not return anything besides a function, " +
-                    "which is used for clean-up.%s",
+                  "which is used for clean-up.%s",
                   hookName,
                   addendum
                 );
@@ -19816,10 +19828,10 @@ to return true:wantsResponderID|                            |
             if (instance.props !== finishedWork.memoizedProps) {
               error(
                 "Expected %s props to match memoized props before " +
-                  "componentDidMount. " +
-                  "This might either be because of a bug in React, or because " +
-                  "a component reassigns its own `this.props`. " +
-                  "Please file an issue.",
+                "componentDidMount. " +
+                "This might either be because of a bug in React, or because " +
+                "a component reassigns its own `this.props`. " +
+                "Please file an issue.",
                 getComponentNameFromFiber(finishedWork) || "instance"
               );
             }
@@ -19827,10 +19839,10 @@ to return true:wantsResponderID|                            |
             if (instance.state !== finishedWork.memoizedState) {
               error(
                 "Expected %s state to match memoized state before " +
-                  "componentDidMount. " +
-                  "This might either be because of a bug in React, or because " +
-                  "a component reassigns its own `this.state`. " +
-                  "Please file an issue.",
+                "componentDidMount. " +
+                "This might either be because of a bug in React, or because " +
+                "a component reassigns its own `this.state`. " +
+                "Please file an issue.",
                 getComponentNameFromFiber(finishedWork) || "instance"
               );
             }
@@ -19870,10 +19882,10 @@ to return true:wantsResponderID|                            |
             if (instance.props !== finishedWork.memoizedProps) {
               error(
                 "Expected %s props to match memoized props before " +
-                  "componentDidUpdate. " +
-                  "This might either be because of a bug in React, or because " +
-                  "a component reassigns its own `this.props`. " +
-                  "Please file an issue.",
+                "componentDidUpdate. " +
+                "This might either be because of a bug in React, or because " +
+                "a component reassigns its own `this.props`. " +
+                "Please file an issue.",
                 getComponentNameFromFiber(finishedWork) || "instance"
               );
             }
@@ -19881,10 +19893,10 @@ to return true:wantsResponderID|                            |
             if (instance.state !== finishedWork.memoizedState) {
               error(
                 "Expected %s state to match memoized state before " +
-                  "componentDidUpdate. " +
-                  "This might either be because of a bug in React, or because " +
-                  "a component reassigns its own `this.state`. " +
-                  "Please file an issue.",
+                "componentDidUpdate. " +
+                "This might either be because of a bug in React, or because " +
+                "a component reassigns its own `this.state`. " +
+                "Please file an issue.",
                 getComponentNameFromFiber(finishedWork) || "instance"
               );
             }
@@ -19934,10 +19946,10 @@ to return true:wantsResponderID|                            |
             if (instance.props !== finishedWork.memoizedProps) {
               error(
                 "Expected %s props to match memoized props before " +
-                  "processing the update queue. " +
-                  "This might either be because of a bug in React, or because " +
-                  "a component reassigns its own `this.props`. " +
-                  "Please file an issue.",
+                "processing the update queue. " +
+                "This might either be because of a bug in React, or because " +
+                "a component reassigns its own `this.props`. " +
+                "Please file an issue.",
                 getComponentNameFromFiber(finishedWork) || "instance"
               );
             }
@@ -19945,10 +19957,10 @@ to return true:wantsResponderID|                            |
             if (instance.state !== finishedWork.memoizedState) {
               error(
                 "Expected %s state to match memoized state before " +
-                  "processing the update queue. " +
-                  "This might either be because of a bug in React, or because " +
-                  "a component reassigns its own `this.state`. " +
-                  "Please file an issue.",
+                "processing the update queue. " +
+                "This might either be because of a bug in React, or because " +
+                "a component reassigns its own `this.state`. " +
+                "Please file an issue.",
                 getComponentNameFromFiber(finishedWork) || "instance"
               );
             }
@@ -20259,7 +20271,7 @@ to return true:wantsResponderID|                            |
             if (!ref.hasOwnProperty("current")) {
               error(
                 "Unexpected ref object provided for %s. " +
-                  "Use either a ref-setter function or React.createRef().",
+                "Use either a ref-setter function or React.createRef().",
                 getComponentNameFromFiber(finishedWork)
               );
             }
@@ -20558,7 +20570,7 @@ to return true:wantsResponderID|                            |
       }
     }
 
-    function commitSuspenseCallback(finishedWork) {}
+    function commitSuspenseCallback(finishedWork) { }
 
     function getRetryCache(finishedWork) {
       // TODO: Unify the interface for the retry cache so we don't have to switch
@@ -20589,9 +20601,9 @@ to return true:wantsResponderID|                            |
         default: {
           throw new Error(
             "Unexpected Suspense handler tag (" +
-              finishedWork.tag +
-              "). This is a " +
-              "bug in React."
+            finishedWork.tag +
+            "). This is a " +
+            "bug in React."
           );
         }
       }
@@ -22111,7 +22123,7 @@ to return true:wantsResponderID|                            |
           // TODO: Include link to relevant documentation page.
           error(
             "The current testing environment is not configured to support " +
-              "act(...)"
+            "act(...)"
           );
         }
 
@@ -22285,8 +22297,8 @@ to return true:wantsResponderID|                            |
         return actionScopeLane !== NoLane // We're inside an async action scope. Reuse the same lane.
           ? actionScopeLane // We may or may not be inside an async action scope. If we are, this
           : // is the first update in that scope. Either way, we need to get a
-            // fresh transition lane.
-            requestTransitionLane();
+          // fresh transition lane.
+          requestTransitionLane();
       } // Updates originating inside certain React methods, like flushSync, have
       // their priority set by tracking it with a context variable.
       //
@@ -22376,7 +22388,10 @@ to return true:wantsResponderID|                            |
         }
       } // Check if the work loop is currently suspended and waiting for data to
       // finish loading.
-
+      updatedComponentForProfiler = {
+        name: getComponentNameFromFiber(fiber),
+        key: fiber.key,
+      };
       if (
         // Suspended render phase
         (root === workInProgressRoot &&
@@ -23178,16 +23193,16 @@ to return true:wantsResponderID|                            |
         thrownValue = getSuspendedThenable();
         workInProgressSuspendedReason =
           shouldRemainOnPreviousScreen() && // Check if there are other pending updates that might possibly unblock this
-          // component from suspending. This mirrors the check in
-          // renderDidSuspendDelayIfPossible. We should attempt to unify them somehow.
-          // TODO: Consider unwinding immediately, using the
-          // SuspendedOnHydration mechanism.
-          !includesNonIdleWork(workInProgressRootSkippedLanes) &&
-          !includesNonIdleWork(workInProgressRootInterleavedUpdatedLanes) // Suspend work loop until data resolves
+            // component from suspending. This mirrors the check in
+            // renderDidSuspendDelayIfPossible. We should attempt to unify them somehow.
+            // TODO: Consider unwinding immediately, using the
+            // SuspendedOnHydration mechanism.
+            !includesNonIdleWork(workInProgressRootSkippedLanes) &&
+            !includesNonIdleWork(workInProgressRootInterleavedUpdatedLanes) // Suspend work loop until data resolves
             ? SuspendedOnData // Don't suspend work loop, except to check if the data has
             : // immediately resolved (i.e. in a microtask). Otherwise, trigger the
-              // nearest Suspense fallback.
-              SuspendedOnImmediate;
+            // nearest Suspense fallback.
+            SuspendedOnImmediate;
       } else if (thrownValue === SuspenseyCommitException) {
         thrownValue = getSuspendedThenable();
         workInProgressSuspendedReason = SuspendedOnInstance;
@@ -23210,9 +23225,9 @@ to return true:wantsResponderID|                            |
           typeof thrownValue.then === "function";
         workInProgressSuspendedReason = isWakeable // A wakeable object was thrown by a legacy Suspense implementation.
           ? // This has slightly different behavior than suspending with `use`.
-            SuspendedOnDeprecatedThrowPromise // This is a regular error. If something earlier in the component already
+          SuspendedOnDeprecatedThrowPromise // This is a regular error. If something earlier in the component already
           : // suspended, we must clear the thenable state to unblock the work loop.
-            SuspendedOnError;
+          SuspendedOnError;
       }
 
       workInProgressThrownValue = thrownValue;
@@ -23465,7 +23480,7 @@ to return true:wantsResponderID|                            |
         // This is a sync render, so we should have finished the whole tree.
         throw new Error(
           "Cannot commit an incomplete root. This error is likely caused by a " +
-            "bug in React. Please file an issue."
+          "bug in React. Please file an issue."
         );
       }
 
@@ -23652,7 +23667,7 @@ to return true:wantsResponderID|                            |
                     if (true) {
                       error(
                         "Unexpected type of fiber triggered a suspensey commit. " +
-                          "This is a bug in React."
+                        "This is a bug in React."
                       );
                     }
 
@@ -23965,7 +23980,7 @@ to return true:wantsResponderID|                            |
             // is where we would switch to the unwinding path.
             error(
               "Internal React error: Expected this fiber to be complete, but " +
-                "it isn't. It should have been unwound. This is a bug in React."
+              "it isn't. It should have been unwound. This is a bug in React."
             );
           }
         } // The current, flushed, state of this fiber is the alternate. Ideally
@@ -24089,6 +24104,9 @@ to return true:wantsResponderID|                            |
     ) {
       // TODO: This no longer makes any sense. We already wrap the mutation and
       // layout phases. Should be able to remove.
+      defrost.writeInLogFiles(Date.now() + "", { list: updatedComponents, change: updatedComponentForProfiler })
+      updatedComponents = []
+      updatedComponentForProfiler = null
       var previousUpdateLanePriority = getCurrentUpdatePriority();
       var prevTransition = ReactCurrentBatchConfig.transition;
 
@@ -24145,7 +24163,7 @@ to return true:wantsResponderID|                            |
           if (lanes === NoLanes) {
             error(
               "root.finishedLanes should not be empty during a commit. This is a " +
-                "bug in React."
+              "bug in React."
             );
           }
         }
@@ -24157,7 +24175,7 @@ to return true:wantsResponderID|                            |
       if (finishedWork === root.current) {
         throw new Error(
           "Cannot commit the same tree as before. This error is likely caused by " +
-            "a bug in React. Please file an issue."
+          "a bug in React. Please file an issue."
         );
       } // commitRoot never returns a continuation; it always finishes synchronously.
       // So we can clear these now to allow a new callback to be scheduled.
@@ -24396,8 +24414,8 @@ to return true:wantsResponderID|                            |
           get: function () {
             error(
               'You are accessing "digest" from the errorInfo object passed to onRecoverableError.' +
-                " This property is deprecated and will be removed in a future version of React." +
-                " To access the digest of an Error look for this property on the Error instance itself."
+              " This property is deprecated and will be removed in a future version of React." +
+              " To access the digest of an Error look for this property on the Error instance itself."
             );
 
             return digest;
@@ -24603,10 +24621,10 @@ to return true:wantsResponderID|                            |
       {
         error(
           "Internal React error: Attempted to capture a commit phase error " +
-            "inside a detached tree. This indicates a bug in React. Potential " +
-            "causes include deleting the same fiber more than once, committing an " +
-            "already-finished tree, or an inconsistent return pointer.\n\n" +
-            "Error message:\n\n%s",
+          "inside a detached tree. This indicates a bug in React. Potential " +
+          "causes include deleting the same fiber more than once, committing an " +
+          "already-finished tree, or an inconsistent return pointer.\n\n" +
+          "Error message:\n\n%s",
           error$1
         );
       }
@@ -24762,7 +24780,7 @@ to return true:wantsResponderID|                            |
         default:
           throw new Error(
             "Pinged unknown suspense boundary type. " +
-              "This is probably a bug in React."
+            "This is probably a bug in React."
           );
       }
 
@@ -24783,9 +24801,9 @@ to return true:wantsResponderID|                            |
 
         throw new Error(
           "Maximum update depth exceeded. This can happen when a component " +
-            "repeatedly calls setState inside componentWillUpdate or " +
-            "componentDidUpdate. React limits the number of nested updates to " +
-            "prevent infinite loops."
+          "repeatedly calls setState inside componentWillUpdate or " +
+          "componentDidUpdate. React limits the number of nested updates to " +
+          "prevent infinite loops."
         );
       }
 
@@ -24796,9 +24814,9 @@ to return true:wantsResponderID|                            |
 
           error(
             "Maximum update depth exceeded. This can happen when a component " +
-              "calls setState inside useEffect, but useEffect either doesn't " +
-              "have a dependency array, or one of the dependencies changes on " +
-              "every render."
+            "calls setState inside useEffect, but useEffect either doesn't " +
+            "have a dependency array, or one of the dependencies changes on " +
+            "every render."
           );
         }
       }
@@ -24924,9 +24942,9 @@ to return true:wantsResponderID|                            |
 
           error(
             "Can't perform a React state update on a component that hasn't mounted yet. " +
-              "This indicates that you have a side-effect in your render function that " +
-              "asynchronously later calls tries to update the component. Move this work to " +
-              "useEffect instead."
+            "This indicates that you have a side-effect in your render function that " +
+            "asynchronously later calls tries to update the component. Move this work to " +
+            "useEffect instead."
           );
         } finally {
           if (previousFiber) {
@@ -24966,8 +24984,8 @@ to return true:wantsResponderID|                            |
 
                 error(
                   "Cannot update a component (`%s`) while rendering a " +
-                    "different component (`%s`). To locate the bad setState() call inside `%s`, " +
-                    "follow the stack trace as described in https://react.dev/link/setstate-in-render",
+                  "different component (`%s`). To locate the bad setState() call inside `%s`, " +
+                  "follow the stack trace as described in https://react.dev/link/setstate-in-render",
                   setStateComponentName,
                   renderingComponentName,
                   renderingComponentName
@@ -24981,8 +24999,8 @@ to return true:wantsResponderID|                            |
               if (!didWarnAboutUpdateInRender) {
                 error(
                   "Cannot update during an existing state transition (such as " +
-                    "within `render`). Render methods should be a pure " +
-                    "function of props and state."
+                  "within `render`). Render methods should be a pure " +
+                  "function of props and state."
                 );
 
                 didWarnAboutUpdateInRender = true;
@@ -25068,15 +25086,15 @@ to return true:wantsResponderID|                            |
 
             error(
               "An update to %s inside a test was not wrapped in act(...).\n\n" +
-                "When testing, code that causes React state updates should be " +
-                "wrapped into act(...):\n\n" +
-                "act(() => {\n" +
-                "  /* fire events that update state */\n" +
-                "});\n" +
-                "/* assert on the output */\n\n" +
-                "This ensures that you're testing the behavior the user would see " +
-                "in the browser." +
-                " Learn more at https://react.dev/link/wrap-tests-with-act",
+              "When testing, code that causes React state updates should be " +
+              "wrapped into act(...):\n\n" +
+              "act(() => {\n" +
+              "  /* fire events that update state */\n" +
+              "});\n" +
+              "/* assert on the output */\n\n" +
+              "This ensures that you're testing the behavior the user would see " +
+              "in the browser." +
+              " Learn more at https://react.dev/link/wrap-tests-with-act",
               getComponentNameFromFiber(fiber)
             );
           } finally {
@@ -25099,16 +25117,16 @@ to return true:wantsResponderID|                            |
         ) {
           error(
             "A suspended resource finished loading inside a test, but the event " +
-              "was not wrapped in act(...).\n\n" +
-              "When testing, code that resolves suspended data should be wrapped " +
-              "into act(...):\n\n" +
-              "act(() => {\n" +
-              "  /* finish loading suspended data */\n" +
-              "});\n" +
-              "/* assert on the output */\n\n" +
-              "This ensures that you're testing the behavior the user would see " +
-              "in the browser." +
-              " Learn more at https://react.dev/link/wrap-tests-with-act"
+            "was not wrapped in act(...).\n\n" +
+            "When testing, code that resolves suspended data should be wrapped " +
+            "into act(...):\n\n" +
+            "act(() => {\n" +
+            "  /* finish loading suspended data */\n" +
+            "});\n" +
+            "/* assert on the output */\n\n" +
+            "This ensures that you're testing the behavior the user would see " +
+            "in the browser." +
+            " Learn more at https://react.dev/link/wrap-tests-with-act"
           );
         }
       }
@@ -25769,9 +25787,9 @@ to return true:wantsResponderID|                            |
         currentDependencies === null
           ? null
           : {
-              lanes: currentDependencies.lanes,
-              firstContext: currentDependencies.firstContext
-            }; // These will be overridden during the parent's reconciliation
+            lanes: currentDependencies.lanes,
+            firstContext: currentDependencies.firstContext
+          }; // These will be overridden during the parent's reconciliation
 
       workInProgress.sibling = current.sibling;
       workInProgress.index = current.index;
@@ -25859,9 +25877,9 @@ to return true:wantsResponderID|                            |
           currentDependencies === null
             ? null
             : {
-                lanes: currentDependencies.lanes,
-                firstContext: currentDependencies.firstContext
-              };
+              lanes: currentDependencies.lanes,
+              firstContext: currentDependencies.firstContext
+            };
 
         {
           // Note: We don't reset the actualTime counts. It's useful to accumulate
@@ -26044,8 +26062,8 @@ to return true:wantsResponderID|                            |
 
             throw new Error(
               "Element type is invalid: expected a string (for built-in " +
-                "components) or a class/function (for composite components) " +
-                ("but got: " + (type == null ? type : typeof type) + "." + info)
+              "components) or a class/function (for composite components) " +
+              ("but got: " + (type == null ? type : typeof type) + "." + info)
             );
           }
         }
@@ -26366,10 +26384,10 @@ to return true:wantsResponderID|                            |
               if (fiber.mode & StrictLegacyMode) {
                 error(
                   "%s is deprecated in StrictMode. " +
-                    "%s was passed an instance of %s which is inside StrictMode. " +
-                    "Instead, add a ref directly to the element you want to reference. " +
-                    "Learn more about using refs safely here: " +
-                    "https://react.dev/link/strict-mode-find-node",
+                  "%s was passed an instance of %s which is inside StrictMode. " +
+                  "Instead, add a ref directly to the element you want to reference. " +
+                  "Learn more about using refs safely here: " +
+                  "https://react.dev/link/strict-mode-find-node",
                   methodName,
                   methodName,
                   componentName
@@ -26377,10 +26395,10 @@ to return true:wantsResponderID|                            |
               } else {
                 error(
                   "%s is deprecated in StrictMode. " +
-                    "%s was passed an instance of %s which renders StrictMode children. " +
-                    "Instead, add a ref directly to the element you want to reference. " +
-                    "Learn more about using refs safely here: " +
-                    "https://react.dev/link/strict-mode-find-node",
+                  "%s was passed an instance of %s which renders StrictMode children. " +
+                  "Instead, add a ref directly to the element you want to reference. " +
+                  "Learn more about using refs safely here: " +
+                  "https://react.dev/link/strict-mode-find-node",
                   methodName,
                   methodName,
                   componentName
@@ -26450,9 +26468,9 @@ to return true:wantsResponderID|                            |
 
           error(
             "Render methods should be a pure function of props and state; " +
-              "triggering nested component updates from render is not allowed. " +
-              "If necessary, trigger nested updates in componentDidUpdate.\n\n" +
-              "Check the render method of %s.",
+            "triggering nested component updates from render is not allowed. " +
+            "If necessary, trigger nested updates in componentDidUpdate.\n\n" +
+            "Check the render method of %s.",
             getComponentNameFromFiber(current) || "Unknown"
           );
         }
@@ -26471,7 +26489,7 @@ to return true:wantsResponderID|                            |
           if (typeof callback !== "function") {
             error(
               "Expected the last optional `callback` argument to be a " +
-                "function. Instead received: %s.",
+              "function. Instead received: %s.",
               callback
             );
           }
@@ -26824,10 +26842,10 @@ to return true:wantsResponderID|                            |
           if (!owner.stateNode._warnedAboutRefsInRender) {
             error(
               "%s is accessing findNodeHandle inside its render(). " +
-                "render() should be a pure function of props and state. It should " +
-                "never access something that requires stale data from the previous " +
-                "render, such as refs. Move this logic to componentDidMount and " +
-                "componentDidUpdate instead.",
+              "render() should be a pure function of props and state. It should " +
+              "never access something that requires stale data from the previous " +
+              "render, such as refs. Move this logic to componentDidMount and " +
+              "componentDidUpdate instead.",
               getComponentNameFromType(owner.type) || "A component"
             );
           }
@@ -26875,10 +26893,10 @@ to return true:wantsResponderID|                            |
           if (!owner.stateNode._warnedAboutRefsInRender) {
             error(
               "%s is accessing findNodeHandle inside its render(). " +
-                "render() should be a pure function of props and state. It should " +
-                "never access something that requires stale data from the previous " +
-                "render, such as refs. Move this logic to componentDidMount and " +
-                "componentDidUpdate instead.",
+              "render() should be a pure function of props and state. It should " +
+              "never access something that requires stale data from the previous " +
+              "render, such as refs. Move this logic to componentDidMount and " +
+              "componentDidUpdate instead.",
               getComponentNameFromType(owner.type) || "A component"
             );
           }
@@ -26949,7 +26967,7 @@ to return true:wantsResponderID|                            |
         {
           error(
             "dispatchCommand was called with a ref that isn't a " +
-              "native component. Use React.forwardRef to get access to the underlying native component"
+            "native component. Use React.forwardRef to get access to the underlying native component"
           );
         }
 
@@ -26978,7 +26996,7 @@ to return true:wantsResponderID|                            |
         {
           error(
             "sendAccessibilityEvent was called with a ref that isn't a " +
-              "native component. Use React.forwardRef to get access to the underlying native component"
+            "native component. Use React.forwardRef to get access to the underlying native component"
           );
         }
 
@@ -27368,7 +27386,7 @@ to return true:wantsResponderID|                            |
     if (
       typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" &&
       typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===
-        "function"
+      "function"
     ) {
       __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
     }
diff --git a/node_modules/react-native/Libraries/Renderer/implementations/ReactFabric-prod.js b/node_modules/react-native/Libraries/Renderer/implementations/ReactFabric-prod.js
index 3e5cf86..f34c22e 100644
--- a/node_modules/react-native/Libraries/Renderer/implementations/ReactFabric-prod.js
+++ b/node_modules/react-native/Libraries/Renderer/implementations/ReactFabric-prod.js
@@ -12,7 +12,16 @@
  */
 
 "use strict";
+
+import defrost from '@d11/de-frost'
+
 require("react-native/Libraries/ReactPrivate/ReactNativePrivateInitializeCore");
+var updatedComponents = [];
+var updatedComponentForProfiler = null;
+function insertUpdateComponents(componentName, flags, key) {
+  updatedComponents.push({ componentName, flags, key });
+}
+
 var ReactNativePrivateInterface = require("react-native/Libraries/ReactPrivate/ReactNativePrivateInterface"),
   React = require("react"),
   Scheduler = require("scheduler"),
@@ -67,8 +76,8 @@ function SyntheticEvent(
       ((targetInst = dispatchConfig[propName])
         ? (this[propName] = targetInst(nativeEvent))
         : "target" === propName
-        ? (this.target = nativeEventTarget)
-        : (this[propName] = nativeEvent[propName]));
+          ? (this.target = nativeEventTarget)
+          : (this[propName] = nativeEvent[propName]));
   this.isDefaultPrevented = (
     null != nativeEvent.defaultPrevented
       ? nativeEvent.defaultPrevented
@@ -87,7 +96,7 @@ assign(SyntheticEvent.prototype, {
       (event.preventDefault
         ? event.preventDefault()
         : "unknown" !== typeof event.returnValue && (event.returnValue = !1),
-      (this.isDefaultPrevented = functionThatReturnsTrue));
+        (this.isDefaultPrevented = functionThatReturnsTrue));
   },
   stopPropagation: function () {
     var event = this.nativeEvent;
@@ -95,7 +104,7 @@ assign(SyntheticEvent.prototype, {
       (event.stopPropagation
         ? event.stopPropagation()
         : "unknown" !== typeof event.cancelBubble && (event.cancelBubble = !0),
-      (this.isPropagationStopped = functionThatReturnsTrue));
+        (this.isPropagationStopped = functionThatReturnsTrue));
   },
   persist: function () {
     this.isPersistent = functionThatReturnsTrue;
@@ -127,7 +136,7 @@ SyntheticEvent.Interface = {
   isTrusted: null
 };
 SyntheticEvent.extend = function (Interface) {
-  function E() {}
+  function E() { }
   function Class() {
     return Super.apply(this, arguments);
   }
@@ -213,17 +222,17 @@ function recordTouchStart(touch) {
       (touchRecord.previousPageY = touch.pageY),
       (touchRecord.previousTimeStamp = timestampForTouch(touch)))
     : ((touchRecord = {
-        touchActive: !0,
-        startPageX: touch.pageX,
-        startPageY: touch.pageY,
-        startTimeStamp: timestampForTouch(touch),
-        currentPageX: touch.pageX,
-        currentPageY: touch.pageY,
-        currentTimeStamp: timestampForTouch(touch),
-        previousPageX: touch.pageX,
-        previousPageY: touch.pageY,
-        previousTimeStamp: timestampForTouch(touch)
-      }),
+      touchActive: !0,
+      startPageX: touch.pageX,
+      startPageY: touch.pageY,
+      startTimeStamp: timestampForTouch(touch),
+      currentPageX: touch.pageX,
+      currentPageY: touch.pageY,
+      currentTimeStamp: timestampForTouch(touch),
+      previousPageX: touch.pageX,
+      previousPageY: touch.pageY,
+      previousTimeStamp: timestampForTouch(touch)
+    }),
       (touchBank[identifier] = touchRecord));
   touchHistory.mostRecentTimeStamp = timestampForTouch(touch);
 }
@@ -231,25 +240,25 @@ function recordTouchMove(touch) {
   var touchRecord = touchBank[getTouchIdentifier(touch)];
   touchRecord &&
     ((touchRecord.touchActive = !0),
-    (touchRecord.previousPageX = touchRecord.currentPageX),
-    (touchRecord.previousPageY = touchRecord.currentPageY),
-    (touchRecord.previousTimeStamp = touchRecord.currentTimeStamp),
-    (touchRecord.currentPageX = touch.pageX),
-    (touchRecord.currentPageY = touch.pageY),
-    (touchRecord.currentTimeStamp = timestampForTouch(touch)),
-    (touchHistory.mostRecentTimeStamp = timestampForTouch(touch)));
+      (touchRecord.previousPageX = touchRecord.currentPageX),
+      (touchRecord.previousPageY = touchRecord.currentPageY),
+      (touchRecord.previousTimeStamp = touchRecord.currentTimeStamp),
+      (touchRecord.currentPageX = touch.pageX),
+      (touchRecord.currentPageY = touch.pageY),
+      (touchRecord.currentTimeStamp = timestampForTouch(touch)),
+      (touchHistory.mostRecentTimeStamp = timestampForTouch(touch)));
 }
 function recordTouchEnd(touch) {
   var touchRecord = touchBank[getTouchIdentifier(touch)];
   touchRecord &&
     ((touchRecord.touchActive = !1),
-    (touchRecord.previousPageX = touchRecord.currentPageX),
-    (touchRecord.previousPageY = touchRecord.currentPageY),
-    (touchRecord.previousTimeStamp = touchRecord.currentTimeStamp),
-    (touchRecord.currentPageX = touch.pageX),
-    (touchRecord.currentPageY = touch.pageY),
-    (touchRecord.currentTimeStamp = timestampForTouch(touch)),
-    (touchHistory.mostRecentTimeStamp = timestampForTouch(touch)));
+      (touchRecord.previousPageX = touchRecord.currentPageX),
+      (touchRecord.previousPageY = touchRecord.currentPageY),
+      (touchRecord.previousTimeStamp = touchRecord.currentTimeStamp),
+      (touchRecord.currentPageX = touch.pageX),
+      (touchRecord.currentPageY = touch.pageY),
+      (touchRecord.currentTimeStamp = timestampForTouch(touch)),
+      (touchHistory.mostRecentTimeStamp = timestampForTouch(touch)));
 }
 var instrumentationCallback,
   ResponderTouchHistoryStore = {
@@ -265,16 +274,16 @@ var instrumentationCallback,
         nativeEvent.changedTouches.forEach(recordTouchStart),
           (touchHistory.numberActiveTouches = nativeEvent.touches.length),
           1 === touchHistory.numberActiveTouches &&
-            (touchHistory.indexOfSingleActiveTouch =
-              nativeEvent.touches[0].identifier);
+          (touchHistory.indexOfSingleActiveTouch =
+            nativeEvent.touches[0].identifier);
       else if (
         "topTouchEnd" === topLevelType ||
         "topTouchCancel" === topLevelType
       )
         if (
           (nativeEvent.changedTouches.forEach(recordTouchEnd),
-          (touchHistory.numberActiveTouches = nativeEvent.touches.length),
-          1 === touchHistory.numberActiveTouches)
+            (touchHistory.numberActiveTouches = nativeEvent.touches.length),
+            1 === touchHistory.numberActiveTouches)
         )
           for (
             topLevelType = 0;
@@ -283,7 +292,7 @@ var instrumentationCallback,
           )
             if (
               ((nativeEvent = touchBank[topLevelType]),
-              null != nativeEvent && nativeEvent.touchActive)
+                null != nativeEvent && nativeEvent.touchActive)
             ) {
               touchHistory.indexOfSingleActiveTouch = topLevelType;
               break;
@@ -297,10 +306,10 @@ function accumulate(current, next) {
   return null == current
     ? next
     : isArrayImpl(current)
-    ? current.concat(next)
-    : isArrayImpl(next)
-    ? [current].concat(next)
-    : [current, next];
+      ? current.concat(next)
+      : isArrayImpl(next)
+        ? [current].concat(next)
+        : [current, next];
 }
 function accumulateInto(current, next) {
   if (null == next)
@@ -390,8 +399,8 @@ function getParent$1(inst) {
   return inst ? inst : null;
 }
 function traverseTwoPhase$1(inst, fn, arg) {
-  for (var path = []; inst; ) path.push(inst), (inst = getParent$1(inst));
-  for (inst = path.length; 0 < inst--; ) fn(path[inst], "captured", arg);
+  for (var path = []; inst;) path.push(inst), (inst = getParent$1(inst));
+  for (inst = path.length; 0 < inst--;) fn(path[inst], "captured", arg);
   for (inst = 0; inst < path.length; inst++) fn(path[inst], "bubbled", arg);
 }
 function getListener$1(inst, registrationName) {
@@ -402,10 +411,10 @@ function getListener$1(inst, registrationName) {
   if ((inst = inst[registrationName]) && "function" !== typeof inst)
     throw Error(
       "Expected `" +
-        registrationName +
-        "` listener to be a function, instead got a value of `" +
-        typeof inst +
-        "` type."
+      registrationName +
+      "` listener to be a function, instead got a value of `" +
+      typeof inst +
+      "` type."
     );
   return inst;
 }
@@ -435,10 +444,10 @@ function accumulateDirectDispatchesSingle$1(event) {
           event._dispatchListeners,
           listener
         )),
-        (event._dispatchInstances = accumulateInto(
-          event._dispatchInstances,
-          inst
-        )));
+          (event._dispatchInstances = accumulateInto(
+            event._dispatchInstances,
+            inst
+          )));
     }
   }
 }
@@ -459,123 +468,123 @@ function accumulateTwoPhaseDispatchesSingle$1(event) {
     );
 }
 var ResponderEventPlugin = {
-    _getResponder: function () {
-      return responderInst;
-    },
-    eventTypes: eventTypes,
-    extractEvents: function (
-      topLevelType,
-      targetInst,
-      nativeEvent,
-      nativeEventTarget
+  _getResponder: function () {
+    return responderInst;
+  },
+  eventTypes: eventTypes,
+  extractEvents: function (
+    topLevelType,
+    targetInst,
+    nativeEvent,
+    nativeEventTarget
+  ) {
+    if (isStartish(topLevelType)) trackedTouchCount += 1;
+    else if (
+      "topTouchEnd" === topLevelType ||
+      "topTouchCancel" === topLevelType
+    )
+      if (0 <= trackedTouchCount) --trackedTouchCount;
+      else return null;
+    ResponderTouchHistoryStore.recordTouchTrack(topLevelType, nativeEvent);
+    if (
+      targetInst &&
+      (("topScroll" === topLevelType && !nativeEvent.responderIgnoreScroll) ||
+        (0 < trackedTouchCount && "topSelectionChange" === topLevelType) ||
+        isStartish(topLevelType) ||
+        isMoveish(topLevelType))
     ) {
-      if (isStartish(topLevelType)) trackedTouchCount += 1;
-      else if (
-        "topTouchEnd" === topLevelType ||
-        "topTouchCancel" === topLevelType
-      )
-        if (0 <= trackedTouchCount) --trackedTouchCount;
-        else return null;
-      ResponderTouchHistoryStore.recordTouchTrack(topLevelType, nativeEvent);
-      if (
-        targetInst &&
-        (("topScroll" === topLevelType && !nativeEvent.responderIgnoreScroll) ||
-          (0 < trackedTouchCount && "topSelectionChange" === topLevelType) ||
-          isStartish(topLevelType) ||
-          isMoveish(topLevelType))
-      ) {
-        var shouldSetEventType = isStartish(topLevelType)
-          ? eventTypes.startShouldSetResponder
-          : isMoveish(topLevelType)
+      var shouldSetEventType = isStartish(topLevelType)
+        ? eventTypes.startShouldSetResponder
+        : isMoveish(topLevelType)
           ? eventTypes.moveShouldSetResponder
           : "topSelectionChange" === topLevelType
-          ? eventTypes.selectionChangeShouldSetResponder
-          : eventTypes.scrollShouldSetResponder;
-        if (responderInst)
-          b: {
-            var JSCompiler_temp = responderInst;
-            for (
-              var depthA = 0, tempA = JSCompiler_temp;
-              tempA;
-              tempA = getParent$1(tempA)
+            ? eventTypes.selectionChangeShouldSetResponder
+            : eventTypes.scrollShouldSetResponder;
+      if (responderInst)
+        b: {
+          var JSCompiler_temp = responderInst;
+          for (
+            var depthA = 0, tempA = JSCompiler_temp;
+            tempA;
+            tempA = getParent$1(tempA)
+          )
+            depthA++;
+          tempA = 0;
+          for (var tempB = targetInst; tempB; tempB = getParent$1(tempB))
+            tempA++;
+          for (; 0 < depthA - tempA;)
+            (JSCompiler_temp = getParent$1(JSCompiler_temp)), depthA--;
+          for (; 0 < tempA - depthA;)
+            (targetInst = getParent$1(targetInst)), tempA--;
+          for (; depthA--;) {
+            if (
+              JSCompiler_temp === targetInst ||
+              JSCompiler_temp === targetInst.alternate
             )
-              depthA++;
-            tempA = 0;
-            for (var tempB = targetInst; tempB; tempB = getParent$1(tempB))
-              tempA++;
-            for (; 0 < depthA - tempA; )
-              (JSCompiler_temp = getParent$1(JSCompiler_temp)), depthA--;
-            for (; 0 < tempA - depthA; )
-              (targetInst = getParent$1(targetInst)), tempA--;
-            for (; depthA--; ) {
-              if (
-                JSCompiler_temp === targetInst ||
-                JSCompiler_temp === targetInst.alternate
-              )
-                break b;
-              JSCompiler_temp = getParent$1(JSCompiler_temp);
-              targetInst = getParent$1(targetInst);
-            }
-            JSCompiler_temp = null;
+              break b;
+            JSCompiler_temp = getParent$1(JSCompiler_temp);
+            targetInst = getParent$1(targetInst);
           }
-        else JSCompiler_temp = targetInst;
-        targetInst = JSCompiler_temp;
-        JSCompiler_temp = targetInst === responderInst;
-        shouldSetEventType = ResponderSyntheticEvent.getPooled(
+          JSCompiler_temp = null;
+        }
+      else JSCompiler_temp = targetInst;
+      targetInst = JSCompiler_temp;
+      JSCompiler_temp = targetInst === responderInst;
+      shouldSetEventType = ResponderSyntheticEvent.getPooled(
+        shouldSetEventType,
+        targetInst,
+        nativeEvent,
+        nativeEventTarget
+      );
+      shouldSetEventType.touchHistory =
+        ResponderTouchHistoryStore.touchHistory;
+      JSCompiler_temp
+        ? forEachAccumulated(
           shouldSetEventType,
-          targetInst,
-          nativeEvent,
-          nativeEventTarget
+          accumulateTwoPhaseDispatchesSingleSkipTarget
+        )
+        : forEachAccumulated(
+          shouldSetEventType,
+          accumulateTwoPhaseDispatchesSingle$1
         );
-        shouldSetEventType.touchHistory =
-          ResponderTouchHistoryStore.touchHistory;
-        JSCompiler_temp
-          ? forEachAccumulated(
-              shouldSetEventType,
-              accumulateTwoPhaseDispatchesSingleSkipTarget
-            )
-          : forEachAccumulated(
-              shouldSetEventType,
-              accumulateTwoPhaseDispatchesSingle$1
-            );
-        b: {
-          JSCompiler_temp = shouldSetEventType._dispatchListeners;
-          targetInst = shouldSetEventType._dispatchInstances;
-          if (isArrayImpl(JSCompiler_temp))
-            for (
-              depthA = 0;
-              depthA < JSCompiler_temp.length &&
-              !shouldSetEventType.isPropagationStopped();
-              depthA++
+      b: {
+        JSCompiler_temp = shouldSetEventType._dispatchListeners;
+        targetInst = shouldSetEventType._dispatchInstances;
+        if (isArrayImpl(JSCompiler_temp))
+          for (
+            depthA = 0;
+            depthA < JSCompiler_temp.length &&
+            !shouldSetEventType.isPropagationStopped();
+            depthA++
+          ) {
+            if (
+              JSCompiler_temp[depthA](shouldSetEventType, targetInst[depthA])
             ) {
-              if (
-                JSCompiler_temp[depthA](shouldSetEventType, targetInst[depthA])
-              ) {
-                JSCompiler_temp = targetInst[depthA];
-                break b;
-              }
+              JSCompiler_temp = targetInst[depthA];
+              break b;
             }
-          else if (
-            JSCompiler_temp &&
-            JSCompiler_temp(shouldSetEventType, targetInst)
-          ) {
-            JSCompiler_temp = targetInst;
-            break b;
           }
-          JSCompiler_temp = null;
+        else if (
+          JSCompiler_temp &&
+          JSCompiler_temp(shouldSetEventType, targetInst)
+        ) {
+          JSCompiler_temp = targetInst;
+          break b;
         }
-        shouldSetEventType._dispatchInstances = null;
-        shouldSetEventType._dispatchListeners = null;
-        shouldSetEventType.isPersistent() ||
-          shouldSetEventType.constructor.release(shouldSetEventType);
-        if (JSCompiler_temp && JSCompiler_temp !== responderInst)
-          if (
-            ((shouldSetEventType = ResponderSyntheticEvent.getPooled(
-              eventTypes.responderGrant,
-              JSCompiler_temp,
-              nativeEvent,
-              nativeEventTarget
-            )),
+        JSCompiler_temp = null;
+      }
+      shouldSetEventType._dispatchInstances = null;
+      shouldSetEventType._dispatchListeners = null;
+      shouldSetEventType.isPersistent() ||
+        shouldSetEventType.constructor.release(shouldSetEventType);
+      if (JSCompiler_temp && JSCompiler_temp !== responderInst)
+        if (
+          ((shouldSetEventType = ResponderSyntheticEvent.getPooled(
+            eventTypes.responderGrant,
+            JSCompiler_temp,
+            nativeEvent,
+            nativeEventTarget
+          )),
             (shouldSetEventType.touchHistory =
               ResponderTouchHistoryStore.touchHistory),
             forEachAccumulated(
@@ -584,159 +593,159 @@ var ResponderEventPlugin = {
             ),
             (targetInst = !0 === executeDirectDispatch(shouldSetEventType)),
             responderInst)
-          )
-            if (
-              ((depthA = ResponderSyntheticEvent.getPooled(
-                eventTypes.responderTerminationRequest,
-                responderInst,
-                nativeEvent,
-                nativeEventTarget
-              )),
+        )
+          if (
+            ((depthA = ResponderSyntheticEvent.getPooled(
+              eventTypes.responderTerminationRequest,
+              responderInst,
+              nativeEvent,
+              nativeEventTarget
+            )),
               (depthA.touchHistory = ResponderTouchHistoryStore.touchHistory),
               forEachAccumulated(depthA, accumulateDirectDispatchesSingle$1),
               (tempA =
                 !depthA._dispatchListeners || executeDirectDispatch(depthA)),
               depthA.isPersistent() || depthA.constructor.release(depthA),
               tempA)
-            ) {
-              depthA = ResponderSyntheticEvent.getPooled(
-                eventTypes.responderTerminate,
-                responderInst,
-                nativeEvent,
-                nativeEventTarget
-              );
-              depthA.touchHistory = ResponderTouchHistoryStore.touchHistory;
-              forEachAccumulated(depthA, accumulateDirectDispatchesSingle$1);
-              var JSCompiler_temp$jscomp$0 = accumulate(
-                JSCompiler_temp$jscomp$0,
-                [shouldSetEventType, depthA]
-              );
-              changeResponder(JSCompiler_temp, targetInst);
-            } else
-              (shouldSetEventType = ResponderSyntheticEvent.getPooled(
-                eventTypes.responderReject,
-                JSCompiler_temp,
-                nativeEvent,
-                nativeEventTarget
-              )),
-                (shouldSetEventType.touchHistory =
-                  ResponderTouchHistoryStore.touchHistory),
-                forEachAccumulated(
-                  shouldSetEventType,
-                  accumulateDirectDispatchesSingle$1
-                ),
-                (JSCompiler_temp$jscomp$0 = accumulate(
-                  JSCompiler_temp$jscomp$0,
-                  shouldSetEventType
-                ));
-          else
-            (JSCompiler_temp$jscomp$0 = accumulate(
+          ) {
+            depthA = ResponderSyntheticEvent.getPooled(
+              eventTypes.responderTerminate,
+              responderInst,
+              nativeEvent,
+              nativeEventTarget
+            );
+            depthA.touchHistory = ResponderTouchHistoryStore.touchHistory;
+            forEachAccumulated(depthA, accumulateDirectDispatchesSingle$1);
+            var JSCompiler_temp$jscomp$0 = accumulate(
               JSCompiler_temp$jscomp$0,
-              shouldSetEventType
+              [shouldSetEventType, depthA]
+            );
+            changeResponder(JSCompiler_temp, targetInst);
+          } else
+            (shouldSetEventType = ResponderSyntheticEvent.getPooled(
+              eventTypes.responderReject,
+              JSCompiler_temp,
+              nativeEvent,
+              nativeEventTarget
             )),
-              changeResponder(JSCompiler_temp, targetInst);
-        else JSCompiler_temp$jscomp$0 = null;
-      } else JSCompiler_temp$jscomp$0 = null;
-      shouldSetEventType = responderInst && isStartish(topLevelType);
-      JSCompiler_temp = responderInst && isMoveish(topLevelType);
-      targetInst =
-        responderInst &&
-        ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType);
-      if (
-        (shouldSetEventType = shouldSetEventType
-          ? eventTypes.responderStart
-          : JSCompiler_temp
-          ? eventTypes.responderMove
-          : targetInst
-          ? eventTypes.responderEnd
-          : null)
-      )
-        (shouldSetEventType = ResponderSyntheticEvent.getPooled(
-          shouldSetEventType,
-          responderInst,
-          nativeEvent,
-          nativeEventTarget
-        )),
-          (shouldSetEventType.touchHistory =
-            ResponderTouchHistoryStore.touchHistory),
-          forEachAccumulated(
-            shouldSetEventType,
-            accumulateDirectDispatchesSingle$1
-          ),
+              (shouldSetEventType.touchHistory =
+                ResponderTouchHistoryStore.touchHistory),
+              forEachAccumulated(
+                shouldSetEventType,
+                accumulateDirectDispatchesSingle$1
+              ),
+              (JSCompiler_temp$jscomp$0 = accumulate(
+                JSCompiler_temp$jscomp$0,
+                shouldSetEventType
+              ));
+        else
           (JSCompiler_temp$jscomp$0 = accumulate(
             JSCompiler_temp$jscomp$0,
             shouldSetEventType
-          ));
-      shouldSetEventType = responderInst && "topTouchCancel" === topLevelType;
-      if (
-        (topLevelType =
-          responderInst &&
-          !shouldSetEventType &&
-          ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType))
-      )
-        a: {
-          if ((topLevelType = nativeEvent.touches) && 0 !== topLevelType.length)
-            for (
-              JSCompiler_temp = 0;
-              JSCompiler_temp < topLevelType.length;
-              JSCompiler_temp++
-            )
-              if (
-                ((targetInst = topLevelType[JSCompiler_temp].target),
+          )),
+            changeResponder(JSCompiler_temp, targetInst);
+      else JSCompiler_temp$jscomp$0 = null;
+    } else JSCompiler_temp$jscomp$0 = null;
+    shouldSetEventType = responderInst && isStartish(topLevelType);
+    JSCompiler_temp = responderInst && isMoveish(topLevelType);
+    targetInst =
+      responderInst &&
+      ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType);
+    if (
+      (shouldSetEventType = shouldSetEventType
+        ? eventTypes.responderStart
+        : JSCompiler_temp
+          ? eventTypes.responderMove
+          : targetInst
+            ? eventTypes.responderEnd
+            : null)
+    )
+      (shouldSetEventType = ResponderSyntheticEvent.getPooled(
+        shouldSetEventType,
+        responderInst,
+        nativeEvent,
+        nativeEventTarget
+      )),
+        (shouldSetEventType.touchHistory =
+          ResponderTouchHistoryStore.touchHistory),
+        forEachAccumulated(
+          shouldSetEventType,
+          accumulateDirectDispatchesSingle$1
+        ),
+        (JSCompiler_temp$jscomp$0 = accumulate(
+          JSCompiler_temp$jscomp$0,
+          shouldSetEventType
+        ));
+    shouldSetEventType = responderInst && "topTouchCancel" === topLevelType;
+    if (
+      (topLevelType =
+        responderInst &&
+        !shouldSetEventType &&
+        ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType))
+    )
+      a: {
+        if ((topLevelType = nativeEvent.touches) && 0 !== topLevelType.length)
+          for (
+            JSCompiler_temp = 0;
+            JSCompiler_temp < topLevelType.length;
+            JSCompiler_temp++
+          )
+            if (
+              ((targetInst = topLevelType[JSCompiler_temp].target),
                 null !== targetInst &&
-                  void 0 !== targetInst &&
-                  0 !== targetInst)
-              ) {
-                depthA = getInstanceFromNode$1(targetInst);
-                b: {
-                  for (targetInst = responderInst; depthA; ) {
-                    if (
-                      targetInst === depthA ||
-                      targetInst === depthA.alternate
-                    ) {
-                      targetInst = !0;
-                      break b;
-                    }
-                    depthA = getParent$1(depthA);
+                void 0 !== targetInst &&
+                0 !== targetInst)
+            ) {
+              depthA = getInstanceFromNode$1(targetInst);
+              b: {
+                for (targetInst = responderInst; depthA;) {
+                  if (
+                    targetInst === depthA ||
+                    targetInst === depthA.alternate
+                  ) {
+                    targetInst = !0;
+                    break b;
                   }
-                  targetInst = !1;
-                }
-                if (targetInst) {
-                  topLevelType = !1;
-                  break a;
+                  depthA = getParent$1(depthA);
                 }
+                targetInst = !1;
               }
-          topLevelType = !0;
-        }
-      if (
-        (topLevelType = shouldSetEventType
-          ? eventTypes.responderTerminate
-          : topLevelType
+              if (targetInst) {
+                topLevelType = !1;
+                break a;
+              }
+            }
+        topLevelType = !0;
+      }
+    if (
+      (topLevelType = shouldSetEventType
+        ? eventTypes.responderTerminate
+        : topLevelType
           ? eventTypes.responderRelease
           : null)
-      )
-        (nativeEvent = ResponderSyntheticEvent.getPooled(
-          topLevelType,
-          responderInst,
-          nativeEvent,
-          nativeEventTarget
+    )
+      (nativeEvent = ResponderSyntheticEvent.getPooled(
+        topLevelType,
+        responderInst,
+        nativeEvent,
+        nativeEventTarget
+      )),
+        (nativeEvent.touchHistory = ResponderTouchHistoryStore.touchHistory),
+        forEachAccumulated(nativeEvent, accumulateDirectDispatchesSingle$1),
+        (JSCompiler_temp$jscomp$0 = accumulate(
+          JSCompiler_temp$jscomp$0,
+          nativeEvent
         )),
-          (nativeEvent.touchHistory = ResponderTouchHistoryStore.touchHistory),
-          forEachAccumulated(nativeEvent, accumulateDirectDispatchesSingle$1),
-          (JSCompiler_temp$jscomp$0 = accumulate(
-            JSCompiler_temp$jscomp$0,
-            nativeEvent
-          )),
-          changeResponder(null);
-      return JSCompiler_temp$jscomp$0;
-    },
-    GlobalResponderHandler: null,
-    injection: {
-      injectGlobalResponderHandler: function (GlobalResponderHandler) {
-        ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;
-      }
-    }
+        changeResponder(null);
+    return JSCompiler_temp$jscomp$0;
   },
+  GlobalResponderHandler: null,
+  injection: {
+    injectGlobalResponderHandler: function (GlobalResponderHandler) {
+      ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;
+    }
+  }
+},
   eventPluginOrder = null,
   namesToPlugins = {};
 function recomputePluginOrdering() {
@@ -747,13 +756,13 @@ function recomputePluginOrdering() {
       if (-1 >= pluginIndex)
         throw Error(
           "EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `" +
-            (pluginName + "`.")
+          (pluginName + "`.")
         );
       if (!plugins[pluginIndex]) {
         if (!pluginModule.extractEvents)
           throw Error(
             "EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `" +
-              (pluginName + "` does not.")
+            (pluginName + "` does not.")
           );
         plugins[pluginIndex] = pluginModule;
         pluginIndex = pluginModule.eventTypes;
@@ -763,7 +772,7 @@ function recomputePluginOrdering() {
           if (eventNameDispatchConfigs.hasOwnProperty(eventName))
             throw Error(
               "EventPluginRegistry: More than one plugin attempted to publish the same event name, `" +
-                (eventName + "`.")
+              (eventName + "`.")
             );
           eventNameDispatchConfigs[eventName] = dispatchConfig;
           var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
@@ -780,18 +789,18 @@ function recomputePluginOrdering() {
           } else
             dispatchConfig.registrationName
               ? (publishRegistrationName(
-                  dispatchConfig.registrationName,
-                  pluginModule
-                ),
+                dispatchConfig.registrationName,
+                pluginModule
+              ),
                 (JSCompiler_inline_result = !0))
               : (JSCompiler_inline_result = !1);
           if (!JSCompiler_inline_result)
             throw Error(
               "EventPluginRegistry: Failed to publish event `" +
-                eventName +
-                "` for plugin `" +
-                pluginName +
-                "`."
+              eventName +
+              "` for plugin `" +
+              pluginName +
+              "`."
             );
         }
       }
@@ -801,7 +810,7 @@ function publishRegistrationName(registrationName, pluginModule) {
   if (registrationNameModules[registrationName])
     throw Error(
       "EventPluginRegistry: More than one plugin attempted to publish the same registration name, `" +
-        (registrationName + "`.")
+      (registrationName + "`.")
     );
   registrationNameModules[registrationName] = pluginModule;
 }
@@ -816,16 +825,16 @@ function getListener(inst, registrationName) {
   if ((inst = inst[registrationName]) && "function" !== typeof inst)
     throw Error(
       "Expected `" +
-        registrationName +
-        "` listener to be a function, instead got a value of `" +
-        typeof inst +
-        "` type."
+      registrationName +
+      "` listener to be a function, instead got a value of `" +
+      typeof inst +
+      "` type."
     );
   return inst;
 }
 var customBubblingEventTypes =
-    ReactNativePrivateInterface.ReactNativeViewConfigRegistry
-      .customBubblingEventTypes,
+  ReactNativePrivateInterface.ReactNativeViewConfigRegistry
+    .customBubblingEventTypes,
   customDirectEventTypes =
     ReactNativePrivateInterface.ReactNativeViewConfigRegistry
       .customDirectEventTypes;
@@ -846,13 +855,13 @@ function accumulateDirectionalDispatches(inst, phase, event) {
       ));
 }
 function traverseTwoPhase(inst, fn, arg, skipBubbling) {
-  for (var path = []; inst; ) {
+  for (var path = []; inst;) {
     path.push(inst);
     do inst = inst.return;
     while (inst && 5 !== inst.tag);
     inst = inst ? inst : null;
   }
-  for (inst = path.length; 0 < inst--; ) fn(path[inst], "captured", arg);
+  for (inst = path.length; 0 < inst--;) fn(path[inst], "captured", arg);
   if (skipBubbling) fn(path[0], "bubbled", arg);
   else
     for (inst = 0; inst < path.length; inst++) fn(path[inst], "bubbled", arg);
@@ -877,10 +886,10 @@ function accumulateDirectDispatchesSingle(event) {
           event._dispatchListeners,
           listener
         )),
-        (event._dispatchInstances = accumulateInto(
-          event._dispatchInstances,
-          inst
-        )));
+          (event._dispatchInstances = accumulateInto(
+            event._dispatchInstances,
+            inst
+          )));
     }
   }
 }
@@ -894,51 +903,51 @@ eventPluginOrder = Array.prototype.slice.call([
 ]);
 recomputePluginOrdering();
 var injectedNamesToPlugins$jscomp$inline_227 = {
-    ResponderEventPlugin: ResponderEventPlugin,
-    ReactNativeBridgeEventPlugin: {
-      eventTypes: {},
-      extractEvents: function (
-        topLevelType,
+  ResponderEventPlugin: ResponderEventPlugin,
+  ReactNativeBridgeEventPlugin: {
+    eventTypes: {},
+    extractEvents: function (
+      topLevelType,
+      targetInst,
+      nativeEvent,
+      nativeEventTarget
+    ) {
+      if (null == targetInst) return null;
+      var bubbleDispatchConfig = customBubblingEventTypes[topLevelType],
+        directDispatchConfig = customDirectEventTypes[topLevelType];
+      if (!bubbleDispatchConfig && !directDispatchConfig)
+        throw Error(
+          'Unsupported top level event type "' + topLevelType + '" dispatched'
+        );
+      topLevelType = SyntheticEvent.getPooled(
+        bubbleDispatchConfig || directDispatchConfig,
         targetInst,
         nativeEvent,
         nativeEventTarget
-      ) {
-        if (null == targetInst) return null;
-        var bubbleDispatchConfig = customBubblingEventTypes[topLevelType],
-          directDispatchConfig = customDirectEventTypes[topLevelType];
-        if (!bubbleDispatchConfig && !directDispatchConfig)
-          throw Error(
-            'Unsupported top level event type "' + topLevelType + '" dispatched'
-          );
-        topLevelType = SyntheticEvent.getPooled(
-          bubbleDispatchConfig || directDispatchConfig,
-          targetInst,
-          nativeEvent,
-          nativeEventTarget
-        );
-        if (bubbleDispatchConfig)
-          null != topLevelType &&
+      );
+      if (bubbleDispatchConfig)
+        null != topLevelType &&
           null != topLevelType.dispatchConfig.phasedRegistrationNames &&
           topLevelType.dispatchConfig.phasedRegistrationNames.skipBubbling
-            ? topLevelType &&
-              topLevelType.dispatchConfig.phasedRegistrationNames &&
-              traverseTwoPhase(
-                topLevelType._targetInst,
-                accumulateDirectionalDispatches,
-                topLevelType,
-                !0
-              )
-            : forEachAccumulated(
-                topLevelType,
-                accumulateTwoPhaseDispatchesSingle
-              );
-        else if (directDispatchConfig)
-          forEachAccumulated(topLevelType, accumulateDirectDispatchesSingle);
-        else return null;
-        return topLevelType;
-      }
+          ? topLevelType &&
+          topLevelType.dispatchConfig.phasedRegistrationNames &&
+          traverseTwoPhase(
+            topLevelType._targetInst,
+            accumulateDirectionalDispatches,
+            topLevelType,
+            !0
+          )
+          : forEachAccumulated(
+            topLevelType,
+            accumulateTwoPhaseDispatchesSingle
+          );
+      else if (directDispatchConfig)
+        forEachAccumulated(topLevelType, accumulateDirectDispatchesSingle);
+      else return null;
+      return topLevelType;
     }
-  },
+  }
+},
   isOrderingDirty$jscomp$inline_228 = !1,
   pluginName$jscomp$inline_229;
 for (pluginName$jscomp$inline_229 in injectedNamesToPlugins$jscomp$inline_227)
@@ -952,12 +961,12 @@ for (pluginName$jscomp$inline_229 in injectedNamesToPlugins$jscomp$inline_227)
     if (
       !namesToPlugins.hasOwnProperty(pluginName$jscomp$inline_229) ||
       namesToPlugins[pluginName$jscomp$inline_229] !==
-        pluginModule$jscomp$inline_230
+      pluginModule$jscomp$inline_230
     ) {
       if (namesToPlugins[pluginName$jscomp$inline_229])
         throw Error(
           "EventPluginRegistry: Cannot inject two different event plugins using the same name, `" +
-            (pluginName$jscomp$inline_229 + "`.")
+          (pluginName$jscomp$inline_229 + "`.")
         );
       namesToPlugins[pluginName$jscomp$inline_229] =
         pluginModule$jscomp$inline_230;
@@ -973,10 +982,10 @@ function defaultDiffer(prevProp, nextProp) {
   return "object" !== typeof nextProp || null === nextProp
     ? !0
     : ReactNativePrivateInterface.deepDiffer(
-        prevProp,
-        nextProp,
-        deepDifferOptions
-      );
+      prevProp,
+      nextProp,
+      deepDifferOptions
+    );
 }
 function restoreDeletedValuesInNestedArray(
   updatePayload,
@@ -984,7 +993,7 @@ function restoreDeletedValuesInNestedArray(
   validAttributes
 ) {
   if (isArrayImpl(node))
-    for (var i = node.length; i-- && 0 < removedKeyCount; )
+    for (var i = node.length; i-- && 0 < removedKeyCount;)
       restoreDeletedValuesInNestedArray(
         updatePayload,
         node[i],
@@ -1027,13 +1036,13 @@ function diffNestedProperty(
     return nextProp
       ? addNestedProperty(updatePayload, nextProp, validAttributes)
       : prevProp
-      ? clearNestedProperty(updatePayload, prevProp, validAttributes)
-      : updatePayload;
+        ? clearNestedProperty(updatePayload, prevProp, validAttributes)
+        : updatePayload;
   if (!isArrayImpl(prevProp) && !isArrayImpl(nextProp))
     return diffProperties(updatePayload, prevProp, nextProp, validAttributes);
   if (isArrayImpl(prevProp) && isArrayImpl(nextProp)) {
     var minLength =
-        prevProp.length < nextProp.length ? prevProp.length : nextProp.length,
+      prevProp.length < nextProp.length ? prevProp.length : nextProp.length,
       i;
     for (i = 0; i < minLength; i++)
       updatePayload = diffNestedProperty(
@@ -1058,17 +1067,17 @@ function diffNestedProperty(
   }
   return isArrayImpl(prevProp)
     ? diffProperties(
-        updatePayload,
-        ReactNativePrivateInterface.flattenStyle(prevProp),
-        nextProp,
-        validAttributes
-      )
+      updatePayload,
+      ReactNativePrivateInterface.flattenStyle(prevProp),
+      nextProp,
+      validAttributes
+    )
     : diffProperties(
-        updatePayload,
-        prevProp,
-        ReactNativePrivateInterface.flattenStyle(nextProp),
-        validAttributes
-      );
+      updatePayload,
+      prevProp,
+      ReactNativePrivateInterface.flattenStyle(nextProp),
+      validAttributes
+    );
 }
 function addNestedProperty(updatePayload, nextProp, validAttributes) {
   if (!nextProp) return updatePayload;
@@ -1114,7 +1123,7 @@ function diffProperties(updatePayload, prevProps, nextProps, validAttributes) {
         ((nextProp = !0), "function" === typeof prevProp && (prevProp = !0));
       "undefined" === typeof nextProp &&
         ((nextProp = null),
-        "undefined" === typeof prevProp && (prevProp = null));
+          "undefined" === typeof prevProp && (prevProp = null));
       removedKeys && (removedKeys[propKey] = !1);
       if (updatePayload && void 0 !== updatePayload[propKey])
         if ("object" !== typeof attributeConfig)
@@ -1160,12 +1169,12 @@ function diffProperties(updatePayload, prevProps, nextProps, validAttributes) {
               attributeConfig
             )),
             0 < removedKeyCount &&
-              updatePayload &&
-              (restoreDeletedValuesInNestedArray(
-                updatePayload,
-                nextProp,
-                attributeConfig
-              ),
+            updatePayload &&
+            (restoreDeletedValuesInNestedArray(
+              updatePayload,
+              nextProp,
+              attributeConfig
+            ),
               (removedKeys = null));
     }
   for (var propKey$1 in prevProps)
@@ -1173,19 +1182,19 @@ function diffProperties(updatePayload, prevProps, nextProps, validAttributes) {
       (!(attributeConfig = validAttributes[propKey$1]) ||
         (updatePayload && void 0 !== updatePayload[propKey$1]) ||
         ((prevProp = prevProps[propKey$1]),
-        void 0 !== prevProp &&
+          void 0 !== prevProp &&
           ("object" !== typeof attributeConfig ||
-          "function" === typeof attributeConfig.diff ||
-          "function" === typeof attributeConfig.process
+            "function" === typeof attributeConfig.diff ||
+            "function" === typeof attributeConfig.process
             ? (((updatePayload || (updatePayload = {}))[propKey$1] = null),
               removedKeys || (removedKeys = {}),
               removedKeys[propKey$1] ||
-                ((removedKeys[propKey$1] = !0), removedKeyCount++))
+              ((removedKeys[propKey$1] = !0), removedKeyCount++))
             : (updatePayload = clearNestedProperty(
-                updatePayload,
-                prevProp,
-                attributeConfig
-              )))));
+              updatePayload,
+              prevProp,
+              attributeConfig
+            )))));
   return updatePayload;
 }
 function batchedUpdatesImpl(fn, bookkeeping) {
@@ -1286,7 +1295,7 @@ function onCommitRoot(root) {
         void 0,
         128 === (root.current.flags & 128)
       );
-    } catch (err) {}
+    } catch (err) { }
 }
 var clz32 = Math.clz32 ? Math.clz32 : clz32Fallback,
   log = Math.log,
@@ -1373,11 +1382,11 @@ function getNextLanes(root, wipLanes) {
       wipLanes !== nextLanes &&
       0 === (wipLanes & suspendedLanes) &&
       ((suspendedLanes = nextLanes & -nextLanes),
-      (root = wipLanes & -wipLanes),
-      suspendedLanes >= root ||
+        (root = wipLanes & -wipLanes),
+        suspendedLanes >= root ||
         (32 === suspendedLanes && 0 !== (root & 4194176)))
-    ? wipLanes
-    : nextLanes;
+      ? wipLanes
+      : nextLanes;
 }
 function computeExpirationTime(lane, currentTime) {
   switch (lane) {
@@ -1458,7 +1467,7 @@ function markRootFinished(root, remainingLanes, spawnedLane) {
   remainingLanes = root.entanglements;
   for (
     var expirationTimes = root.expirationTimes,
-      hiddenUpdates = root.hiddenUpdates;
+    hiddenUpdates = root.hiddenUpdates;
     0 < noLongerPendingLanes;
 
   ) {
@@ -1492,7 +1501,7 @@ function markSpawnedDeferredLane(root, spawnedLane, entangledLanes) {
 }
 function markRootEntangled(root, entangledLanes) {
   var rootEntangledLanes = (root.entangledLanes |= entangledLanes);
-  for (root = root.entanglements; rootEntangledLanes; ) {
+  for (root = root.entanglements; rootEntangledLanes;) {
     var index$6 = 31 - clz32(rootEntangledLanes),
       lane = 1 << index$6;
     (lane & entangledLanes) | (root[index$6] & entangledLanes) &&
@@ -1556,8 +1565,8 @@ function getPublicInstance(instance) {
   return null != instance.canonical && null != instance.canonical.publicInstance
     ? instance.canonical.publicInstance
     : null != instance._nativeTag
-    ? instance
-    : null;
+      ? instance
+      : null;
 }
 var scheduleTimeout = setTimeout,
   cancelTimeout = clearTimeout;
@@ -1575,8 +1584,8 @@ function cloneHiddenInstance(instance) {
   };
 }
 var supportsMicrotasks =
-    "undefined" !== typeof RN$enableMicrotasksInReact &&
-    !!RN$enableMicrotasksInReact,
+  "undefined" !== typeof RN$enableMicrotasksInReact &&
+  !!RN$enableMicrotasksInReact,
   scheduleMicrotask =
     "function" === typeof queueMicrotask ? queueMicrotask : scheduleTimeout;
 function getInstanceFromNode(node) {
@@ -1642,7 +1651,7 @@ Symbol.for("react.client.reference");
 function getNearestMountedFiber(fiber) {
   var node = fiber,
     nearestMounted = fiber;
-  if (fiber.alternate) for (; node.return; ) node = node.return;
+  if (fiber.alternate) for (; node.return;) node = node.return;
   else {
     fiber = node;
     do
@@ -1665,7 +1674,7 @@ function findCurrentFiberUsingSlowPath(fiber) {
       throw Error("Unable to find node on an unmounted component.");
     return alternate !== fiber ? null : fiber;
   }
-  for (var a = fiber, b = alternate; ; ) {
+  for (var a = fiber, b = alternate; ;) {
     var parentA = a.return;
     if (null === parentA) break;
     var parentB = parentA.alternate;
@@ -1678,7 +1687,7 @@ function findCurrentFiberUsingSlowPath(fiber) {
       break;
     }
     if (parentA.child === parentB.child) {
-      for (parentB = parentA.child; parentB; ) {
+      for (parentB = parentA.child; parentB;) {
         if (parentB === a) return assertIsMounted(parentA), fiber;
         if (parentB === b) return assertIsMounted(parentA), alternate;
         parentB = parentB.sibling;
@@ -1687,7 +1696,7 @@ function findCurrentFiberUsingSlowPath(fiber) {
     }
     if (a.return !== b.return) (a = parentA), (b = parentB);
     else {
-      for (var didFindChild = !1, child$7 = parentA.child; child$7; ) {
+      for (var didFindChild = !1, child$7 = parentA.child; child$7;) {
         if (child$7 === a) {
           didFindChild = !0;
           a = parentA;
@@ -1703,7 +1712,7 @@ function findCurrentFiberUsingSlowPath(fiber) {
         child$7 = child$7.sibling;
       }
       if (!didFindChild) {
-        for (child$7 = parentB.child; child$7; ) {
+        for (child$7 = parentB.child; child$7;) {
           if (child$7 === a) {
             didFindChild = !0;
             a = parentB;
@@ -1740,7 +1749,7 @@ function findCurrentHostFiber(parent) {
 function findCurrentHostFiberImpl(node) {
   var tag = node.tag;
   if (5 === tag || 26 === tag || 27 === tag || 6 === tag) return node;
-  for (node = node.child; null !== node; ) {
+  for (node = node.child; null !== node;) {
     tag = findCurrentHostFiberImpl(node);
     if (null !== tag) return tag;
     node = node.sibling;
@@ -1796,7 +1805,7 @@ function pushHostContext(fiber) {
       : context;
   context !== JSCompiler_inline_result &&
     (push(contextFiberStackCursor, fiber),
-    push(contextStackCursor, JSCompiler_inline_result));
+      push(contextStackCursor, JSCompiler_inline_result));
 }
 function popHostContext(fiber) {
   contextFiberStackCursor.current === fiber &&
@@ -1809,7 +1818,7 @@ var hydrationErrors = null,
 function finishQueueingConcurrentUpdates() {
   for (
     var endIndex = concurrentQueuesIndex,
-      i = (concurrentlyUpdatedLanes = concurrentQueuesIndex = 0);
+    i = (concurrentlyUpdatedLanes = concurrentQueuesIndex = 0);
     i < endIndex;
 
   ) {
@@ -1849,12 +1858,12 @@ function markUpdateLaneFromFiberToRoot(sourceFiber, update, lane) {
   sourceFiber.lanes |= lane;
   var alternate = sourceFiber.alternate;
   null !== alternate && (alternate.lanes |= lane);
-  for (var isHidden = !1, parent = sourceFiber.return; null !== parent; )
+  for (var isHidden = !1, parent = sourceFiber.return; null !== parent;)
     (parent.childLanes |= lane),
       (alternate = parent.alternate),
       null !== alternate && (alternate.childLanes |= lane),
       22 === parent.tag &&
-        ((sourceFiber = parent.stateNode),
+      ((sourceFiber = parent.stateNode),
         null === sourceFiber || sourceFiber._visibility & 1 || (isHidden = !0)),
       (sourceFiber = parent),
       (parent = parent.return);
@@ -1862,24 +1871,24 @@ function markUpdateLaneFromFiberToRoot(sourceFiber, update, lane) {
     null !== update &&
     3 === sourceFiber.tag &&
     ((parent = sourceFiber.stateNode),
-    (isHidden = 31 - clz32(lane)),
-    (parent = parent.hiddenUpdates),
-    (sourceFiber = parent[isHidden]),
-    null === sourceFiber
-      ? (parent[isHidden] = [update])
-      : sourceFiber.push(update),
-    (update.lane = lane | 536870912));
+      (isHidden = 31 - clz32(lane)),
+      (parent = parent.hiddenUpdates),
+      (sourceFiber = parent[isHidden]),
+      null === sourceFiber
+        ? (parent[isHidden] = [update])
+        : sourceFiber.push(update),
+      (update.lane = lane | 536870912));
 }
 function getRootForUpdatedFiber(sourceFiber) {
   if (50 < nestedUpdateCount)
     throw (
       ((nestedUpdateCount = 0),
-      (rootWithNestedUpdates = null),
-      Error(
-        "Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops."
-      ))
+        (rootWithNestedUpdates = null),
+        Error(
+          "Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops."
+        ))
     );
-  for (var parent = sourceFiber.return; null !== parent; )
+  for (var parent = sourceFiber.return; null !== parent;)
     (sourceFiber = parent), (parent = sourceFiber.return);
   return 3 === sourceFiber.tag ? sourceFiber.stateNode : null;
 }
@@ -1898,7 +1907,7 @@ function ensureRootIsScheduled(root) {
   mightHavePendingSyncWork = !0;
   didScheduleMicrotask ||
     ((didScheduleMicrotask = !0),
-    scheduleImmediateTask(processRootScheduleInMicrotask));
+      scheduleImmediateTask(processRootScheduleInMicrotask));
   scheduleTaskForRootDuringMicrotask(root, now());
 }
 function flushSyncWorkAcrossRoots_impl(onlyLegacy) {
@@ -1907,7 +1916,7 @@ function flushSyncWorkAcrossRoots_impl(onlyLegacy) {
     isFlushingWork = !0;
     do {
       var didPerformSomeWork = !1;
-      for (var root = firstScheduledRoot; null !== root; ) {
+      for (var root = firstScheduledRoot; null !== root;) {
         if (!onlyLegacy || 0 === root.tag) {
           var workInProgressRootRenderLanes$9 = workInProgressRootRenderLanes,
             nextLanes = getNextLanes(
@@ -1936,32 +1945,32 @@ function flushSyncWorkAcrossRoots_impl(onlyLegacy) {
                     );
                   0 !== errorRetryLanes &&
                     ((nextLanes = errorRetryLanes),
-                    (exitStatus = recoverFromConcurrentError(
-                      workInProgressRootRenderLanes$9,
-                      originallyAttemptedLanes,
-                      errorRetryLanes
-                    )));
+                      (exitStatus = recoverFromConcurrentError(
+                        workInProgressRootRenderLanes$9,
+                        originallyAttemptedLanes,
+                        errorRetryLanes
+                      )));
                 }
                 if (1 === exitStatus)
                   throw (
                     ((originallyAttemptedLanes = workInProgressRootFatalError),
-                    prepareFreshStack(workInProgressRootRenderLanes$9, 0),
-                    markRootSuspended(
-                      workInProgressRootRenderLanes$9,
-                      nextLanes,
-                      0
-                    ),
-                    ensureRootIsScheduled(workInProgressRootRenderLanes$9),
-                    originallyAttemptedLanes)
+                      prepareFreshStack(workInProgressRootRenderLanes$9, 0),
+                      markRootSuspended(
+                        workInProgressRootRenderLanes$9,
+                        nextLanes,
+                        0
+                      ),
+                      ensureRootIsScheduled(workInProgressRootRenderLanes$9),
+                      originallyAttemptedLanes)
                   );
                 6 === exitStatus
                   ? markRootSuspended(
-                      workInProgressRootRenderLanes$9,
-                      nextLanes,
-                      workInProgressDeferredLane
-                    )
+                    workInProgressRootRenderLanes$9,
+                    nextLanes,
+                    workInProgressDeferredLane
+                  )
                   : ((workInProgressRootRenderLanes$9.finishedWork =
-                      workInProgressRootRenderLanes$9.current.alternate),
+                    workInProgressRootRenderLanes$9.current.alternate),
                     (workInProgressRootRenderLanes$9.finishedLanes = nextLanes),
                     commitRoot(
                       workInProgressRootRenderLanes$9,
@@ -2017,9 +2026,9 @@ function processRootScheduleInMicrotask() {
 function scheduleTaskForRootDuringMicrotask(root, currentTime) {
   for (
     var suspendedLanes = root.suspendedLanes,
-      pingedLanes = root.pingedLanes,
-      expirationTimes = root.expirationTimes,
-      lanes = root.pendingLanes & -62914561;
+    pingedLanes = root.pingedLanes,
+    expirationTimes = root.expirationTimes,
+    lanes = root.pendingLanes & -62914561;
     0 < lanes;
 
   ) {
@@ -2046,16 +2055,16 @@ function scheduleTaskForRootDuringMicrotask(root, currentTime) {
   )
     return (
       null !== pingedLanes &&
-        null !== pingedLanes &&
-        cancelCallback$1(pingedLanes),
+      null !== pingedLanes &&
+      cancelCallback$1(pingedLanes),
       (root.callbackNode = null),
       (root.callbackPriority = 0)
     );
   if (0 !== (suspendedLanes & 3))
     return (
       null !== pingedLanes &&
-        null !== pingedLanes &&
-        cancelCallback$1(pingedLanes),
+      null !== pingedLanes &&
+      cancelCallback$1(pingedLanes),
       (root.callbackPriority = 2),
       (root.callbackNode = null),
       2
@@ -2088,10 +2097,10 @@ function scheduleTaskForRootDuringMicrotask(root, currentTime) {
 function scheduleImmediateTask(cb) {
   supportsMicrotasks
     ? scheduleMicrotask(function () {
-        0 !== (executionContext & 6)
-          ? scheduleCallback$2(ImmediatePriority, cb)
-          : cb();
-      })
+      0 !== (executionContext & 6)
+        ? scheduleCallback$2(ImmediatePriority, cb)
+        : cb();
+    })
     : scheduleCallback$2(ImmediatePriority, cb);
 }
 var hasForceUpdate = !1;
@@ -2212,12 +2221,12 @@ function processUpdateQueue(
     var current = workInProgress$jscomp$0.alternate;
     null !== current &&
       ((current = current.updateQueue),
-      (pendingQueue = current.lastBaseUpdate),
-      pendingQueue !== lastBaseUpdate &&
+        (pendingQueue = current.lastBaseUpdate),
+        pendingQueue !== lastBaseUpdate &&
         (null === pendingQueue
           ? (current.firstBaseUpdate = firstPendingUpdate)
           : (pendingQueue.next = firstPendingUpdate),
-        (current.lastBaseUpdate = lastPendingUpdate)));
+          (current.lastBaseUpdate = lastPendingUpdate)));
   }
   if (null !== firstBaseUpdate) {
     var newState = queue.baseState;
@@ -2234,13 +2243,13 @@ function processUpdateQueue(
       ) {
         null !== current &&
           (current = current.next =
-            {
-              lane: 0,
-              tag: pendingQueue.tag,
-              payload: pendingQueue.payload,
-              callback: null,
-              next: null
-            });
+          {
+            lane: 0,
+            tag: pendingQueue.tag,
+            payload: pendingQueue.payload,
+            callback: null,
+            next: null
+          });
         a: {
           var workInProgress = workInProgress$jscomp$0,
             update = pendingQueue;
@@ -2273,11 +2282,11 @@ function processUpdateQueue(
         updateLane = pendingQueue.callback;
         null !== updateLane &&
           ((workInProgress$jscomp$0.flags |= 64),
-          isHiddenUpdate && (workInProgress$jscomp$0.flags |= 8192),
-          (isHiddenUpdate = queue.callbacks),
-          null === isHiddenUpdate
-            ? (queue.callbacks = [updateLane])
-            : isHiddenUpdate.push(updateLane));
+            isHiddenUpdate && (workInProgress$jscomp$0.flags |= 8192),
+            (isHiddenUpdate = queue.callbacks),
+            null === isHiddenUpdate
+              ? (queue.callbacks = [updateLane])
+              : isHiddenUpdate.push(updateLane));
       } else
         (isHiddenUpdate = {
           lane: updateLane,
@@ -2316,7 +2325,7 @@ function callCallback(callback, context) {
   if ("function" !== typeof callback)
     throw Error(
       "Invalid argument passed as callback. Expected a function. Instead received: " +
-        callback
+      callback
     );
   callback.call(context);
 }
@@ -2400,17 +2409,17 @@ function getStackByFiberInDevAndProd(workInProgress) {
   }
 }
 var SuspenseException = Error(
-    "Suspense Exception: This is not a real error! It's an implementation detail of `use` to interrupt the current render. You must either rethrow it immediately, or move the `use` call outside of the `try/catch` block. Capturing without rethrowing will lead to unexpected behavior.\n\nTo handle async errors, wrap your component in an error boundary, or call the promise's `.catch` method and pass the result to `use`"
-  ),
+  "Suspense Exception: This is not a real error! It's an implementation detail of `use` to interrupt the current render. You must either rethrow it immediately, or move the `use` call outside of the `try/catch` block. Capturing without rethrowing will lead to unexpected behavior.\n\nTo handle async errors, wrap your component in an error boundary, or call the promise's `.catch` method and pass the result to `use`"
+),
   SuspenseyCommitException = Error(
     "Suspense Exception: This is not a real error, and should not leak into userspace. If you're seeing this, it's likely a bug in React."
   ),
-  noopSuspenseyCommitThenable = { then: function () {} };
+  noopSuspenseyCommitThenable = { then: function () { } };
 function isThenableResolved(thenable) {
   thenable = thenable.status;
   return "fulfilled" === thenable || "rejected" === thenable;
 }
-function noop() {}
+function noop() { }
 function trackUsedThenable(thenableState, thenable, index) {
   index = thenableState[index];
   void 0 === index
@@ -2422,8 +2431,8 @@ function trackUsedThenable(thenableState, thenable, index) {
     case "rejected":
       throw (
         ((thenableState = thenable.reason),
-        checkIfUseWrappedInAsyncCatch(thenableState),
-        thenableState)
+          checkIfUseWrappedInAsyncCatch(thenableState),
+          thenableState)
       );
     default:
       if ("string" === typeof thenable.status) thenable.then(noop, noop);
@@ -2458,8 +2467,8 @@ function trackUsedThenable(thenableState, thenable, index) {
         case "rejected":
           throw (
             ((thenableState = thenable.reason),
-            checkIfUseWrappedInAsyncCatch(thenableState),
-            thenableState)
+              checkIfUseWrappedInAsyncCatch(thenableState),
+              thenableState)
           );
       }
       suspendedThenable = thenable;
@@ -2505,8 +2514,8 @@ function convertStringRefToCallbackRef(
   if (!returnFiber)
     throw Error(
       "Element ref was specified as a string (" +
-        stringRef +
-        ") but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a function component\n2. You may be adding a ref to a component that was not created inside a component's render method\n3. You have multiple copies of React loaded\nSee https://react.dev/link/refs-must-have-owner for more information."
+      stringRef +
+      ") but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a function component\n2. You may be adding a ref to a component that was not created inside a component's render method\n3. You have multiple copies of React loaded\nSee https://react.dev/link/refs-must-have-owner for more information."
     );
   if (1 !== returnFiber.tag)
     throw Error(
@@ -2516,8 +2525,8 @@ function convertStringRefToCallbackRef(
   if (!inst)
     throw Error(
       "Missing owner for string ref " +
-        stringRef +
-        ". This error is likely caused by a bug in React. Please file an issue."
+      stringRef +
+      ". This error is likely caused by a bug in React. Please file an issue."
     );
   if (
     null !== current &&
@@ -2533,8 +2542,8 @@ function coerceRef(returnFiber, current, workInProgress, element) {
   var mixedRef = element.ref;
   returnFiber =
     "string" === typeof mixedRef ||
-    "number" === typeof mixedRef ||
-    "boolean" === typeof mixedRef
+      "number" === typeof mixedRef ||
+      "boolean" === typeof mixedRef
       ? convertStringRefToCallbackRef(returnFiber, current, element, mixedRef)
       : mixedRef;
   workInProgress.ref = returnFiber;
@@ -2543,10 +2552,10 @@ function throwOnInvalidObjectType(returnFiber, newChild) {
   returnFiber = Object.prototype.toString.call(newChild);
   throw Error(
     "Objects are not valid as a React child (found: " +
-      ("[object Object]" === returnFiber
-        ? "object with keys {" + Object.keys(newChild).join(", ") + "}"
-        : returnFiber) +
-      "). If you meant to render a collection of children, use an array instead."
+    ("[object Object]" === returnFiber
+      ? "object with keys {" + Object.keys(newChild).join(", ") + "}"
+      : returnFiber) +
+    "). If you meant to render a collection of children, use an array instead."
   );
 }
 function resolveLazy(lazyType) {
@@ -2564,13 +2573,13 @@ function createChildReconciler(shouldTrackSideEffects) {
   }
   function deleteRemainingChildren(returnFiber, currentFirstChild) {
     if (!shouldTrackSideEffects) return null;
-    for (; null !== currentFirstChild; )
+    for (; null !== currentFirstChild;)
       deleteChild(returnFiber, currentFirstChild),
         (currentFirstChild = currentFirstChild.sibling);
     return null;
   }
   function mapRemainingChildren(currentFirstChild) {
-    for (var existingChildren = new Map(); null !== currentFirstChild; )
+    for (var existingChildren = new Map(); null !== currentFirstChild;)
       null !== currentFirstChild.key
         ? existingChildren.set(currentFirstChild.key, currentFirstChild)
         : existingChildren.set(currentFirstChild.index, currentFirstChild),
@@ -2873,10 +2882,10 @@ function createChildReconciler(shouldTrackSideEffects) {
   ) {
     for (
       var resultingFirstChild = null,
-        previousNewFiber = null,
-        oldFiber = currentFirstChild,
-        newIdx = (currentFirstChild = 0),
-        nextOldFiber = null;
+      previousNewFiber = null,
+      oldFiber = currentFirstChild,
+      newIdx = (currentFirstChild = 0),
+      nextOldFiber = null;
       null !== oldFiber && newIdx < newChildren.length;
       newIdx++
     ) {
@@ -2912,11 +2921,11 @@ function createChildReconciler(shouldTrackSideEffects) {
       for (; newIdx < newChildren.length; newIdx++)
         (oldFiber = createChild(returnFiber, newChildren[newIdx], lanes)),
           null !== oldFiber &&
-            ((currentFirstChild = placeChild(
-              oldFiber,
-              currentFirstChild,
-              newIdx
-            )),
+          ((currentFirstChild = placeChild(
+            oldFiber,
+            currentFirstChild,
+            newIdx
+          )),
             null === previousNewFiber
               ? (resultingFirstChild = oldFiber)
               : (previousNewFiber.sibling = oldFiber),
@@ -2936,11 +2945,11 @@ function createChildReconciler(shouldTrackSideEffects) {
         lanes
       )),
         null !== nextOldFiber &&
-          (shouldTrackSideEffects &&
-            null !== nextOldFiber.alternate &&
-            oldFiber.delete(
-              null === nextOldFiber.key ? newIdx : nextOldFiber.key
-            ),
+        (shouldTrackSideEffects &&
+          null !== nextOldFiber.alternate &&
+          oldFiber.delete(
+            null === nextOldFiber.key ? newIdx : nextOldFiber.key
+          ),
           (currentFirstChild = placeChild(
             nextOldFiber,
             currentFirstChild,
@@ -2972,10 +2981,10 @@ function createChildReconciler(shouldTrackSideEffects) {
       throw Error("An iterable object provided no iterator.");
     for (
       var previousNewFiber = (iteratorFn = null),
-        oldFiber = currentFirstChild,
-        newIdx = (currentFirstChild = 0),
-        nextOldFiber = null,
-        step = newChildrenIterable.next();
+      oldFiber = currentFirstChild,
+      newIdx = (currentFirstChild = 0),
+      nextOldFiber = null,
+      step = newChildrenIterable.next();
       null !== oldFiber && !step.done;
       newIdx++, step = newChildrenIterable.next()
     ) {
@@ -3004,7 +3013,7 @@ function createChildReconciler(shouldTrackSideEffects) {
       for (; !step.done; newIdx++, step = newChildrenIterable.next())
         (step = createChild(returnFiber, step.value, lanes)),
           null !== step &&
-            ((currentFirstChild = placeChild(step, currentFirstChild, newIdx)),
+          ((currentFirstChild = placeChild(step, currentFirstChild, newIdx)),
             null === previousNewFiber
               ? (iteratorFn = step)
               : (previousNewFiber.sibling = step),
@@ -3018,9 +3027,9 @@ function createChildReconciler(shouldTrackSideEffects) {
     )
       (step = updateFromMap(oldFiber, returnFiber, newIdx, step.value, lanes)),
         null !== step &&
-          (shouldTrackSideEffects &&
-            null !== step.alternate &&
-            oldFiber.delete(null === step.key ? newIdx : step.key),
+        (shouldTrackSideEffects &&
+          null !== step.alternate &&
+          oldFiber.delete(null === step.key ? newIdx : step.key),
           (currentFirstChild = placeChild(step, currentFirstChild, newIdx)),
           null === previousNewFiber
             ? (iteratorFn = step)
@@ -3086,21 +3095,21 @@ function createChildReconciler(shouldTrackSideEffects) {
             }
             newChild.type === REACT_FRAGMENT_TYPE
               ? ((currentFirstChild = createFiberFromFragment(
-                  newChild.props.children,
-                  returnFiber.mode,
-                  lanes,
-                  newChild.key
-                )),
+                newChild.props.children,
+                returnFiber.mode,
+                lanes,
+                newChild.key
+              )),
                 (currentFirstChild.return = returnFiber),
                 (returnFiber = currentFirstChild))
               : ((lanes = createFiberFromTypeAndProps(
-                  newChild.type,
-                  newChild.key,
-                  newChild.props,
-                  null,
-                  returnFiber.mode,
-                  lanes
-                )),
+                newChild.type,
+                newChild.key,
+                newChild.props,
+                null,
+                returnFiber.mode,
+                lanes
+              )),
                 coerceRef(returnFiber, currentFirstChild, lanes, newChild),
                 (lanes.return = returnFiber),
                 (returnFiber = lanes));
@@ -3108,14 +3117,14 @@ function createChildReconciler(shouldTrackSideEffects) {
           return placeSingleChild(returnFiber);
         case REACT_PORTAL_TYPE:
           a: {
-            for (child = newChild.key; null !== currentFirstChild; ) {
+            for (child = newChild.key; null !== currentFirstChild;) {
               if (currentFirstChild.key === child)
                 if (
                   4 === currentFirstChild.tag &&
                   currentFirstChild.stateNode.containerInfo ===
-                    newChild.containerInfo &&
+                  newChild.containerInfo &&
                   currentFirstChild.stateNode.implementation ===
-                    newChild.implementation
+                  newChild.implementation
                 ) {
                   deleteRemainingChildren(
                     returnFiber,
@@ -3250,8 +3259,8 @@ function pushOffscreenSuspenseHandler(fiber) {
   if (22 === fiber.tag) {
     if (
       (push(suspenseStackCursor, suspenseStackCursor.current),
-      push(suspenseHandlerStackCursor, fiber),
-      null === shellBoundary)
+        push(suspenseHandlerStackCursor, fiber),
+        null === shellBoundary)
     ) {
       var current = fiber.alternate;
       null !== current &&
@@ -3271,7 +3280,7 @@ function popSuspenseHandler(fiber) {
 }
 var suspenseStackCursor = createCursor(0);
 function findFirstSuspended(row) {
-  for (var node = row; null !== node; ) {
+  for (var node = row; null !== node;) {
     if (13 === node.tag) {
       var state = node.memoizedState;
       if (null !== state && (null === state.dehydrated || shim$1() || shim$1()))
@@ -3284,7 +3293,7 @@ function findFirstSuspended(row) {
       continue;
     }
     if (node === row) break;
-    for (; null === node.sibling; ) {
+    for (; null === node.sibling;) {
       if (null === node.return || node.return === row) return null;
       node = node.return;
     }
@@ -3446,7 +3455,7 @@ function updateWorkInProgressHook() {
     };
     null === workInProgressHook
       ? (currentlyRenderingFiber$1.memoizedState = workInProgressHook =
-          nextCurrentHook)
+        nextCurrentHook)
       : (workInProgressHook = workInProgressHook.next = nextCurrentHook);
   }
   return workInProgressHook;
@@ -3513,17 +3522,17 @@ function updateReducer(reducer) {
       )
         null !== newBaseQueueLast &&
           (newBaseQueueLast = newBaseQueueLast.next =
-            {
-              lane: 0,
-              revertLane: 0,
-              action: update.action,
-              hasEagerState: update.hasEagerState,
-              eagerState: update.eagerState,
-              next: null
-            }),
+          {
+            lane: 0,
+            revertLane: 0,
+            action: update.action,
+            hasEagerState: update.hasEagerState,
+            eagerState: update.eagerState,
+            next: null
+          }),
           (updateLane = update.action),
           shouldDoubleInvokeUserFnsInHooksDEV &&
-            reducer(pendingQueue, updateLane),
+          reducer(pendingQueue, updateLane),
           (pendingQueue = update.hasEagerState
             ? update.eagerState
             : reducer(pendingQueue, updateLane));
@@ -3703,8 +3712,8 @@ function updateEffectImpl(fiberFlags, hookFlags, create, deps) {
   deps = void 0 === deps ? null : deps;
   var inst = hook.memoizedState.inst;
   null !== currentHook &&
-  null !== deps &&
-  areHookInputsEqual(deps, currentHook.memoizedState.deps)
+    null !== deps &&
+    areHookInputsEqual(deps, currentHook.memoizedState.deps)
     ? (hook.memoizedState = pushEffect(hookFlags, create, inst, deps))
     : ((currentlyRenderingFiber$1.flags |= fiberFlags),
       (hook.memoizedState = pushEffect(1 | hookFlags, create, inst, deps)));
@@ -3743,7 +3752,7 @@ function updateImperativeHandle(ref, create, deps) {
   deps = null !== deps && void 0 !== deps ? deps.concat([ref]) : null;
   updateEffectImpl(4, 4, imperativeHandleEffect.bind(null, create, ref), deps);
 }
-function mountDebugValue() {}
+function mountDebugValue() { }
 function updateCallback(callback, deps) {
   var hook = updateWorkInProgressHook();
   deps = void 0 === deps ? null : deps;
@@ -3824,7 +3833,7 @@ function dispatchReducerAction(fiber, queue, action) {
     : (enqueueUpdate$1(fiber, queue, action, lane),
       (action = getRootForUpdatedFiber(fiber)),
       null !== action &&
-        (scheduleUpdateOnFiber(action, fiber, lane),
+      (scheduleUpdateOnFiber(action, fiber, lane),
         entangleTransitionUpdate(action, queue, lane)));
 }
 function dispatchSetState(fiber, queue, action) {
@@ -3862,7 +3871,7 @@ function dispatchSetState(fiber, queue, action) {
     action = getRootForUpdatedFiber(fiber);
     null !== action &&
       (scheduleUpdateOnFiber(action, fiber, lane),
-      entangleTransitionUpdate(action, queue, lane));
+        entangleTransitionUpdate(action, queue, lane));
   }
 }
 function isRenderPhaseUpdate(fiber) {
@@ -3891,24 +3900,24 @@ function entangleTransitionUpdate(root, queue, lane) {
   }
 }
 var ContextOnlyDispatcher = {
-    readContext: readContext,
-    use: use,
-    useCallback: throwInvalidHookError,
-    useContext: throwInvalidHookError,
-    useEffect: throwInvalidHookError,
-    useImperativeHandle: throwInvalidHookError,
-    useInsertionEffect: throwInvalidHookError,
-    useLayoutEffect: throwInvalidHookError,
-    useMemo: throwInvalidHookError,
-    useReducer: throwInvalidHookError,
-    useRef: throwInvalidHookError,
-    useState: throwInvalidHookError,
-    useDebugValue: throwInvalidHookError,
-    useDeferredValue: throwInvalidHookError,
-    useTransition: throwInvalidHookError,
-    useSyncExternalStore: throwInvalidHookError,
-    useId: throwInvalidHookError
-  },
+  readContext: readContext,
+  use: use,
+  useCallback: throwInvalidHookError,
+  useContext: throwInvalidHookError,
+  useEffect: throwInvalidHookError,
+  useImperativeHandle: throwInvalidHookError,
+  useInsertionEffect: throwInvalidHookError,
+  useLayoutEffect: throwInvalidHookError,
+  useMemo: throwInvalidHookError,
+  useReducer: throwInvalidHookError,
+  useRef: throwInvalidHookError,
+  useState: throwInvalidHookError,
+  useDebugValue: throwInvalidHookError,
+  useDeferredValue: throwInvalidHookError,
+  useTransition: throwInvalidHookError,
+  useSyncExternalStore: throwInvalidHookError,
+  useId: throwInvalidHookError
+},
   HooksDispatcherOnMount = {
     readContext: readContext,
     use: use,
@@ -4092,11 +4101,11 @@ var ContextOnlyDispatcher = {
       return null === currentHook
         ? mountDeferredValueImpl(hook, value, initialValue)
         : updateDeferredValueImpl(
-            hook,
-            currentHook.memoizedState,
-            value,
-            initialValue
-          );
+          hook,
+          currentHook.memoizedState,
+          value,
+          initialValue
+        );
     },
     useTransition: function () {
       var booleanOrThenable = rerenderReducer(basicStateReducer)[0],
@@ -4153,7 +4162,7 @@ var classComponentUpdater = {
     payload = enqueueUpdate(inst, update, lane);
     null !== payload &&
       (scheduleUpdateOnFiber(payload, inst, lane),
-      entangleTransitions(payload, inst, lane));
+        entangleTransitions(payload, inst, lane));
   },
   enqueueReplaceState: function (inst, payload, callback) {
     inst = inst._reactInternals;
@@ -4165,7 +4174,7 @@ var classComponentUpdater = {
     payload = enqueueUpdate(inst, update, lane);
     null !== payload &&
       (scheduleUpdateOnFiber(payload, inst, lane),
-      entangleTransitions(payload, inst, lane));
+        entangleTransitions(payload, inst, lane));
   },
   enqueueForceUpdate: function (inst, callback) {
     inst = inst._reactInternals;
@@ -4176,7 +4185,7 @@ var classComponentUpdater = {
     callback = enqueueUpdate(inst, update, lane);
     null !== callback &&
       (scheduleUpdateOnFiber(callback, inst, lane),
-      entangleTransitions(callback, inst, lane));
+        entangleTransitions(callback, inst, lane));
   }
 };
 function checkShouldComponentUpdate(
@@ -4192,8 +4201,8 @@ function checkShouldComponentUpdate(
   return "function" === typeof workInProgress.shouldComponentUpdate
     ? workInProgress.shouldComponentUpdate(newProps, newState, nextContext)
     : ctor.prototype && ctor.prototype.isPureReactComponent
-    ? !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState)
-    : !0;
+      ? !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState)
+      : !0;
 }
 function constructClassInstance(workInProgress, ctor, props) {
   var context = emptyContextObject,
@@ -4238,20 +4247,20 @@ function mountClassInstance(workInProgress, ctor, newProps, renderLanes) {
   contextType = ctor.getDerivedStateFromProps;
   "function" === typeof contextType &&
     (applyDerivedStateFromProps(workInProgress, ctor, contextType, newProps),
-    (instance.state = workInProgress.memoizedState));
+      (instance.state = workInProgress.memoizedState));
   "function" === typeof ctor.getDerivedStateFromProps ||
     "function" === typeof instance.getSnapshotBeforeUpdate ||
     ("function" !== typeof instance.UNSAFE_componentWillMount &&
       "function" !== typeof instance.componentWillMount) ||
     ((ctor = instance.state),
-    "function" === typeof instance.componentWillMount &&
+      "function" === typeof instance.componentWillMount &&
       instance.componentWillMount(),
-    "function" === typeof instance.UNSAFE_componentWillMount &&
+      "function" === typeof instance.UNSAFE_componentWillMount &&
       instance.UNSAFE_componentWillMount(),
-    ctor !== instance.state &&
+      ctor !== instance.state &&
       classComponentUpdater.enqueueReplaceState(instance, instance.state, null),
-    processUpdateQueue(workInProgress, newProps, instance, renderLanes),
-    (instance.state = workInProgress.memoizedState));
+      processUpdateQueue(workInProgress, newProps, instance, renderLanes),
+      (instance.state = workInProgress.memoizedState));
   "function" === typeof instance.componentDidMount &&
     (workInProgress.flags |= 4194308);
 }
@@ -4261,7 +4270,7 @@ function createCapturedValueAtFiber(value, source) {
     var stack = CapturedStacks.get(value);
     "string" !== typeof stack &&
       ((stack = getStackByFiberInDevAndProd(source)),
-      CapturedStacks.set(value, stack));
+        CapturedStacks.set(value, stack));
   } else stack = getStackByFiberInDevAndProd(source);
   return { value: value, source: source, stack: stack, digest: null };
 }
@@ -4364,11 +4373,11 @@ function throwException(
         case 13:
           return (
             sourceFiber.mode & 1 &&
-              (null === shellBoundary
-                ? renderDidSuspendDelayIfPossible()
-                : null === tag.alternate &&
-                  0 === workInProgressRootExitStatus &&
-                  (workInProgressRootExitStatus = 3)),
+            (null === shellBoundary
+              ? renderDidSuspendDelayIfPossible()
+              : null === tag.alternate &&
+              0 === workInProgressRootExitStatus &&
+              (workInProgressRootExitStatus = 3)),
             (tag.flags &= -257),
             0 === (tag.mode & 1)
               ? tag === returnFiber
@@ -4377,11 +4386,11 @@ function throwException(
                   (sourceFiber.flags |= 131072),
                   (sourceFiber.flags &= -52805),
                   1 === sourceFiber.tag &&
-                    (null === sourceFiber.alternate
-                      ? (sourceFiber.tag = 17)
-                      : ((returnFiber = createUpdate(2)),
-                        (returnFiber.tag = 2),
-                        enqueueUpdate(sourceFiber, returnFiber, 2))),
+                  (null === sourceFiber.alternate
+                    ? (sourceFiber.tag = 17)
+                    : ((returnFiber = createUpdate(2)),
+                      (returnFiber.tag = 2),
+                      enqueueUpdate(sourceFiber, returnFiber, 2))),
                   (sourceFiber.lanes |= 2))
               : ((tag.flags |= 65536), (tag.lanes = rootRenderLanes)),
             value === noopSuspenseyCommitThenable
@@ -4391,7 +4400,7 @@ function throwException(
                   ? (tag.updateQueue = new Set([value]))
                   : returnFiber.add(value),
                 tag.mode & 1 &&
-                  attachPingListener(root, value, rootRenderLanes)),
+                attachPingListener(root, value, rootRenderLanes)),
             !1
           );
         case 22:
@@ -4403,10 +4412,10 @@ function throwException(
                 : ((returnFiber = tag.updateQueue),
                   null === returnFiber
                     ? ((returnFiber = {
-                        transitions: null,
-                        markerInstances: null,
-                        retryQueue: new Set([value])
-                      }),
+                      transitions: null,
+                      markerInstances: null,
+                      retryQueue: new Set([value])
+                    }),
                       (tag.updateQueue = returnFiber))
                     : ((sourceFiber = returnFiber.retryQueue),
                       null === sourceFiber
@@ -4418,8 +4427,8 @@ function throwException(
       }
       throw Error(
         "Unexpected Suspense handler tag (" +
-          tag.tag +
-          "). This is a bug in React."
+        tag.tag +
+        "). This is a bug in React."
       );
     }
     if (1 === root.tag)
@@ -4457,9 +4466,9 @@ function throwException(
       case 1:
         if (
           ((returnFiber = value),
-          (sourceFiber = root.type),
-          (tag = root.stateNode),
-          0 === (root.flags & 128) &&
+            (sourceFiber = root.type),
+            (tag = root.stateNode),
+            0 === (root.flags & 128) &&
             ("function" === typeof sourceFiber.getDerivedStateFromError ||
               (null !== tag &&
                 "function" === typeof tag.componentDidCatch &&
@@ -4493,11 +4502,11 @@ function reconcileChildren(current, workInProgress, nextChildren, renderLanes) {
     null === current
       ? mountChildFibers(workInProgress, null, nextChildren, renderLanes)
       : reconcileChildFibers(
-          workInProgress,
-          current.child,
-          nextChildren,
-          renderLanes
-        );
+        workInProgress,
+        current.child,
+        nextChildren,
+        renderLanes
+      );
 }
 function updateForwardRef(
   current,
@@ -4594,8 +4603,8 @@ function updateSimpleMemoComponent(
     )
       if (
         ((didReceiveUpdate = !1),
-        (workInProgress.pendingProps = nextProps = prevProps),
-        0 !== (current.lanes & renderLanes))
+          (workInProgress.pendingProps = nextProps = prevProps),
+          0 !== (current.lanes & renderLanes))
       )
         0 !== (current.flags & 131072) && (didReceiveUpdate = !0);
       else
@@ -4624,7 +4633,7 @@ function updateOffscreenComponent(current, workInProgress, renderLanes) {
         null !== prevState ? prevState.baseLanes | renderLanes : renderLanes;
       if (null !== current) {
         nextProps = workInProgress.child = current.child;
-        for (nextChildren = 0; null !== nextProps; )
+        for (nextChildren = 0; null !== nextProps;)
           (nextChildren =
             nextChildren | nextProps.lanes | nextProps.childLanes),
             (nextProps = nextProps.sibling);
@@ -4779,12 +4788,12 @@ function updateClassComponent(
     oldContext = workInProgress.memoizedState;
     oldProps !== nextProps || oldState !== oldContext || hasForceUpdate
       ? ("function" === typeof getDerivedStateFromProps &&
-          (applyDerivedStateFromProps(
-            workInProgress,
-            Component,
-            getDerivedStateFromProps,
-            nextProps
-          ),
+        (applyDerivedStateFromProps(
+          workInProgress,
+          Component,
+          getDerivedStateFromProps,
+          nextProps
+        ),
           (oldContext = workInProgress.memoizedState)),
         (oldProps =
           hasForceUpdate ||
@@ -4798,16 +4807,16 @@ function updateClassComponent(
             nextContext
           ))
           ? (contextType ||
-              ("function" !== typeof instance.UNSAFE_componentWillMount &&
-                "function" !== typeof instance.componentWillMount) ||
-              ("function" === typeof instance.componentWillMount &&
-                instance.componentWillMount(),
+            ("function" !== typeof instance.UNSAFE_componentWillMount &&
+              "function" !== typeof instance.componentWillMount) ||
+            ("function" === typeof instance.componentWillMount &&
+              instance.componentWillMount(),
               "function" === typeof instance.UNSAFE_componentWillMount &&
-                instance.UNSAFE_componentWillMount()),
+              instance.UNSAFE_componentWillMount()),
             "function" === typeof instance.componentDidMount &&
-              (workInProgress.flags |= 4194308))
+            (workInProgress.flags |= 4194308))
           : ("function" === typeof instance.componentDidMount &&
-              (workInProgress.flags |= 4194308),
+            (workInProgress.flags |= 4194308),
             (workInProgress.memoizedProps = nextProps),
             (workInProgress.memoizedState = oldContext)),
         (instance.props = nextProps),
@@ -4815,7 +4824,7 @@ function updateClassComponent(
         (instance.context = nextContext),
         (nextProps = oldProps))
       : ("function" === typeof instance.componentDidMount &&
-          (workInProgress.flags |= 4194308),
+        (workInProgress.flags |= 4194308),
         (nextProps = !1));
   } else {
     instance = workInProgress.stateNode;
@@ -4853,15 +4862,15 @@ function updateClassComponent(
     processUpdateQueue(workInProgress, nextProps, instance, renderLanes);
     var newState = workInProgress.memoizedState;
     nextContext !== getDerivedStateFromProps ||
-    oldContext$jscomp$0 !== newState ||
-    hasForceUpdate
+      oldContext$jscomp$0 !== newState ||
+      hasForceUpdate
       ? ("function" === typeof oldState &&
-          (applyDerivedStateFromProps(
-            workInProgress,
-            Component,
-            oldState,
-            nextProps
-          ),
+        (applyDerivedStateFromProps(
+          workInProgress,
+          Component,
+          oldState,
+          nextProps
+        ),
           (newState = workInProgress.memoizedState)),
         (contextType =
           hasForceUpdate ||
@@ -4876,28 +4885,28 @@ function updateClassComponent(
           ) ||
           !1)
           ? (oldContext ||
-              ("function" !== typeof instance.UNSAFE_componentWillUpdate &&
-                "function" !== typeof instance.componentWillUpdate) ||
-              ("function" === typeof instance.componentWillUpdate &&
-                instance.componentWillUpdate(nextProps, newState, oldProps),
+            ("function" !== typeof instance.UNSAFE_componentWillUpdate &&
+              "function" !== typeof instance.componentWillUpdate) ||
+            ("function" === typeof instance.componentWillUpdate &&
+              instance.componentWillUpdate(nextProps, newState, oldProps),
               "function" === typeof instance.UNSAFE_componentWillUpdate &&
-                instance.UNSAFE_componentWillUpdate(
-                  nextProps,
-                  newState,
-                  oldProps
-                )),
+              instance.UNSAFE_componentWillUpdate(
+                nextProps,
+                newState,
+                oldProps
+              )),
             "function" === typeof instance.componentDidUpdate &&
-              (workInProgress.flags |= 4),
+            (workInProgress.flags |= 4),
             "function" === typeof instance.getSnapshotBeforeUpdate &&
-              (workInProgress.flags |= 1024))
+            (workInProgress.flags |= 1024))
           : ("function" !== typeof instance.componentDidUpdate ||
-              (nextContext === current.memoizedProps &&
-                oldContext$jscomp$0 === current.memoizedState) ||
-              (workInProgress.flags |= 4),
+            (nextContext === current.memoizedProps &&
+              oldContext$jscomp$0 === current.memoizedState) ||
+            (workInProgress.flags |= 4),
             "function" !== typeof instance.getSnapshotBeforeUpdate ||
-              (nextContext === current.memoizedProps &&
-                oldContext$jscomp$0 === current.memoizedState) ||
-              (workInProgress.flags |= 1024),
+            (nextContext === current.memoizedProps &&
+              oldContext$jscomp$0 === current.memoizedState) ||
+            (workInProgress.flags |= 1024),
             (workInProgress.memoizedProps = nextProps),
             (workInProgress.memoizedState = newState)),
         (instance.props = nextProps),
@@ -4905,13 +4914,13 @@ function updateClassComponent(
         (instance.context = oldProps),
         (nextProps = contextType))
       : ("function" !== typeof instance.componentDidUpdate ||
-          (nextContext === current.memoizedProps &&
-            oldContext$jscomp$0 === current.memoizedState) ||
-          (workInProgress.flags |= 4),
+        (nextContext === current.memoizedProps &&
+          oldContext$jscomp$0 === current.memoizedState) ||
+        (workInProgress.flags |= 4),
         "function" !== typeof instance.getSnapshotBeforeUpdate ||
-          (nextContext === current.memoizedProps &&
-            oldContext$jscomp$0 === current.memoizedState) ||
-          (workInProgress.flags |= 1024),
+        (nextContext === current.memoizedProps &&
+          oldContext$jscomp$0 === current.memoizedState) ||
+        (workInProgress.flags |= 1024),
         (nextProps = !1));
   }
   return finishClassComponent(
@@ -4944,11 +4953,11 @@ function finishClassComponent(
   workInProgress.flags |= 1;
   null !== current && hasContext
     ? ((workInProgress.child = reconcileChildFibers(
-        workInProgress,
-        current.child,
-        null,
-        renderLanes
-      )),
+      workInProgress,
+      current.child,
+      null,
+      renderLanes
+    )),
       (workInProgress.child = reconcileChildFibers(
         workInProgress,
         null,
@@ -4997,11 +5006,11 @@ function updateSuspenseComponent(current, workInProgress, renderLanes) {
         ? ((progressedPrimaryFragment.childLanes = 0),
           (progressedPrimaryFragment.pendingProps = didSuspend))
         : (progressedPrimaryFragment = createFiberFromOffscreen(
-            didSuspend,
-            showFallback,
-            0,
-            null
-          ));
+          didSuspend,
+          showFallback,
+          0,
+          null
+        ));
       nextProps = createFiberFromFragment(
         nextProps,
         showFallback,
@@ -5053,19 +5062,19 @@ function updateSuspenseComponent(current, workInProgress, renderLanes) {
         (nextProps.pendingProps = primaryChildProps),
         (workInProgress.deletions = null))
       : ((nextProps = createWorkInProgress(
-          progressedPrimaryFragment,
-          primaryChildProps
-        )),
+        progressedPrimaryFragment,
+        primaryChildProps
+      )),
         (nextProps.subtreeFlags =
           progressedPrimaryFragment.subtreeFlags & 31457280));
     null !== dehydrated
       ? (showFallback = createWorkInProgress(dehydrated, showFallback))
       : ((showFallback = createFiberFromFragment(
-          showFallback,
-          didSuspend,
-          renderLanes,
-          null
-        )),
+        showFallback,
+        didSuspend,
+        renderLanes,
+        null
+      )),
         (showFallback.flags |= 2));
     showFallback.return = workInProgress;
     nextProps.return = workInProgress;
@@ -5099,9 +5108,9 @@ function updateSuspenseComponent(current, workInProgress, renderLanes) {
   JSCompiler_temp.sibling = null;
   null !== current &&
     ((renderLanes = workInProgress.deletions),
-    null === renderLanes
-      ? ((workInProgress.deletions = [current]), (workInProgress.flags |= 16))
-      : renderLanes.push(current));
+      null === renderLanes
+        ? ((workInProgress.deletions = [current]), (workInProgress.flags |= 16))
+        : renderLanes.push(current));
   workInProgress.child = JSCompiler_temp;
   workInProgress.memoizedState = null;
   return JSCompiler_temp;
@@ -5274,15 +5283,15 @@ function updateDehydratedSuspenseComponent(
         }
       nextProps =
         0 !==
-        (nextProps & (didPrimaryChildrenDefer.suspendedLanes | renderLanes))
+          (nextProps & (didPrimaryChildrenDefer.suspendedLanes | renderLanes))
           ? 0
           : nextProps;
       if (0 !== nextProps && nextProps !== suspenseState.retryLane)
         throw (
           ((suspenseState.retryLane = nextProps),
-          enqueueConcurrentRenderForLane(current, nextProps),
-          scheduleUpdateOnFiber(didPrimaryChildrenDefer, current, nextProps),
-          SelectiveHydrationException)
+            enqueueConcurrentRenderForLane(current, nextProps),
+            scheduleUpdateOnFiber(didPrimaryChildrenDefer, current, nextProps),
+            SelectiveHydrationException)
         );
     }
     shim$1() || renderDidSuspendDelayIfPossible();
@@ -5321,13 +5330,13 @@ function initSuspenseListRenderState(
   var renderState = workInProgress.memoizedState;
   null === renderState
     ? (workInProgress.memoizedState = {
-        isBackwards: isBackwards,
-        rendering: null,
-        renderingStartTime: 0,
-        last: lastContentRow,
-        tail: tail,
-        tailMode: tailMode
-      })
+      isBackwards: isBackwards,
+      rendering: null,
+      renderingStartTime: 0,
+      last: lastContentRow,
+      tail: tail,
+      tailMode: tailMode
+    })
     : ((renderState.isBackwards = isBackwards),
       (renderState.rendering = null),
       (renderState.renderingStartTime = 0),
@@ -5345,7 +5354,7 @@ function updateSuspenseListComponent(current, workInProgress, renderLanes) {
     (nextProps = (nextProps & 1) | 2), (workInProgress.flags |= 128);
   else {
     if (null !== current && 0 !== (current.flags & 128))
-      a: for (current = workInProgress.child; null !== current; ) {
+      a: for (current = workInProgress.child; null !== current;) {
         if (13 === current.tag)
           null !== current.memoizedState &&
             scheduleSuspenseWorkOnFiber(current, renderLanes, workInProgress);
@@ -5357,7 +5366,7 @@ function updateSuspenseListComponent(current, workInProgress, renderLanes) {
           continue;
         }
         if (current === workInProgress) break a;
-        for (; null === current.sibling; ) {
+        for (; null === current.sibling;) {
           if (null === current.return || current.return === workInProgress)
             break a;
           current = current.return;
@@ -5373,11 +5382,11 @@ function updateSuspenseListComponent(current, workInProgress, renderLanes) {
     switch (revealOrder) {
       case "forwards":
         renderLanes = workInProgress.child;
-        for (revealOrder = null; null !== renderLanes; )
+        for (revealOrder = null; null !== renderLanes;)
           (current = renderLanes.alternate),
             null !== current &&
-              null === findFirstSuspended(current) &&
-              (revealOrder = renderLanes),
+            null === findFirstSuspended(current) &&
+            (revealOrder = renderLanes),
             (renderLanes = renderLanes.sibling);
         renderLanes = revealOrder;
         null === renderLanes
@@ -5395,7 +5404,7 @@ function updateSuspenseListComponent(current, workInProgress, renderLanes) {
       case "backwards":
         renderLanes = null;
         revealOrder = workInProgress.child;
-        for (workInProgress.child = null; null !== revealOrder; ) {
+        for (workInProgress.child = null; null !== revealOrder;) {
           current = revealOrder.alternate;
           if (null !== current && null === findFirstSuspended(current)) {
             workInProgress.child = revealOrder;
@@ -5426,8 +5435,8 @@ function resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress) {
   0 === (workInProgress.mode & 1) &&
     null !== current &&
     ((current.alternate = null),
-    (workInProgress.alternate = null),
-    (workInProgress.flags |= 2));
+      (workInProgress.alternate = null),
+      (workInProgress.flags |= 2));
 }
 function bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes) {
   null !== current && (workInProgress.dependencies = current.dependencies);
@@ -5439,7 +5448,7 @@ function bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes) {
     current = workInProgress.child;
     renderLanes = createWorkInProgress(current, current.pendingProps);
     workInProgress.child = renderLanes;
-    for (renderLanes.return = workInProgress; null !== current.sibling; )
+    for (renderLanes.return = workInProgress; null !== current.sibling;)
       (current = current.sibling),
         (renderLanes = renderLanes.sibling =
           createWorkInProgress(current, current.pendingProps)),
@@ -5505,8 +5514,8 @@ function attemptEarlyBailoutIfNoScheduledUpdate(
       context = workInProgress.memoizedState;
       null !== context &&
         ((context.rendering = null),
-        (context.tail = null),
-        (context.lastEffect = null));
+          (context.tail = null),
+          (context.lastEffect = null));
       push(suspenseStackCursor, suspenseStackCursor.current);
       if (newValue) break;
       else return null;
@@ -5556,9 +5565,9 @@ function beginWork(current, workInProgress, renderLanes) {
       );
       workInProgress.flags |= 1;
       "object" === typeof value &&
-      null !== value &&
-      "function" === typeof value.render &&
-      void 0 === value.$$typeof
+        null !== value &&
+        "function" === typeof value.render &&
+        void 0 === value.$$typeof
         ? ((workInProgress.tag = 1),
           (workInProgress.memoizedState = null),
           (workInProgress.updateQueue = null),
@@ -5633,8 +5642,8 @@ function beginWork(current, workInProgress, renderLanes) {
         }
         throw Error(
           "Element type is invalid. Received a promise that resolves to: " +
-            Component +
-            ". Lazy element type must resolve to a class or function."
+          Component +
+          ". Lazy element type must resolve to a class or function."
         );
       }
       return workInProgress;
@@ -5681,10 +5690,10 @@ function beginWork(current, workInProgress, renderLanes) {
       value = workInProgress.memoizedState.element;
       value === Component
         ? (workInProgress = bailoutOnAlreadyFinishedWork(
-            current,
-            workInProgress,
-            renderLanes
-          ))
+          current,
+          workInProgress,
+          renderLanes
+        ))
         : (reconcileChildren(current, workInProgress, value, renderLanes),
           (workInProgress = workInProgress.child));
       return workInProgress;
@@ -5711,11 +5720,11 @@ function beginWork(current, workInProgress, renderLanes) {
         (Component = workInProgress.pendingProps),
         null === current
           ? (workInProgress.child = reconcileChildFibers(
-              workInProgress,
-              null,
-              Component,
-              renderLanes
-            ))
+            workInProgress,
+            null,
+            Component,
+            renderLanes
+          ))
           : reconcileChildren(current, workInProgress, Component, renderLanes),
         workInProgress.child
       );
@@ -5780,7 +5789,7 @@ function beginWork(current, workInProgress, renderLanes) {
           } else
             for (
               oldProps = workInProgress.child,
-                null !== oldProps && (oldProps.return = workInProgress);
+              null !== oldProps && (oldProps.return = workInProgress);
               null !== oldProps;
 
             ) {
@@ -5841,7 +5850,7 @@ function beginWork(current, workInProgress, renderLanes) {
               } else newValue = oldProps.child;
               if (null !== newValue) newValue.return = oldProps;
               else
-                for (newValue = oldProps; null !== newValue; ) {
+                for (newValue = oldProps; null !== newValue;) {
                   if (newValue === workInProgress) {
                     newValue = null;
                     break;
@@ -5921,8 +5930,8 @@ function beginWork(current, workInProgress, renderLanes) {
   }
   throw Error(
     "Unknown unit of work tag (" +
-      workInProgress.tag +
-      "). This error is likely caused by a bug in React. Please file an issue."
+    workInProgress.tag +
+    "). This error is likely caused by a bug in React. Please file an issue."
   );
 }
 var valueCursor = createCursor(null),
@@ -5933,21 +5942,21 @@ function resetContextDependencies() {
   lastFullyObservedContext =
     lastContextDependency =
     currentlyRenderingFiber =
-      null;
+    null;
 }
 function popProvider(context) {
   context._currentValue2 = valueCursor.current;
   pop(valueCursor);
 }
 function scheduleContextWorkOnParentPath(parent, renderLanes, propagationRoot) {
-  for (; null !== parent; ) {
+  for (; null !== parent;) {
     var alternate = parent.alternate;
     (parent.childLanes & renderLanes) !== renderLanes
       ? ((parent.childLanes |= renderLanes),
         null !== alternate && (alternate.childLanes |= renderLanes))
       : null !== alternate &&
-        (alternate.childLanes & renderLanes) !== renderLanes &&
-        (alternate.childLanes |= renderLanes);
+      (alternate.childLanes & renderLanes) !== renderLanes &&
+      (alternate.childLanes |= renderLanes);
     if (parent === propagationRoot) break;
     parent = parent.return;
   }
@@ -5959,7 +5968,7 @@ function prepareToReadContext(workInProgress, renderLanes) {
   null !== workInProgress &&
     null !== workInProgress.firstContext &&
     (0 !== (workInProgress.lanes & renderLanes) && (didReceiveUpdate = !0),
-    (workInProgress.firstContext = null));
+      (workInProgress.firstContext = null));
 }
 function readContext(context) {
   return readContextForConsumer(currentlyRenderingFiber, context);
@@ -5974,7 +5983,7 @@ function readContextForConsumer(consumer, context) {
   if (lastFullyObservedContext !== context)
     if (
       ((context = { context: context, memoizedValue: value, next: null }),
-      null === lastContextDependency)
+        null === lastContextDependency)
     ) {
       if (null === consumer)
         throw Error(
@@ -5986,11 +5995,11 @@ function readContextForConsumer(consumer, context) {
   return value;
 }
 var ReactCurrentBatchConfig$1 = ReactSharedInternals.ReactCurrentBatchConfig;
-function handleAsyncAction() {}
+function handleAsyncAction() { }
 function doesRequireClone(current, completedWork) {
   if (null !== current && current.child === completedWork.child) return !1;
   if (0 !== (completedWork.flags & 16)) return !0;
-  for (current = completedWork.child; null !== current; ) {
+  for (current = completedWork.child; null !== current;) {
     if (0 !== (current.flags & 12854) || 0 !== (current.subtreeFlags & 12854))
       return !0;
     current = current.sibling;
@@ -6003,7 +6012,7 @@ function appendAllChildren(
   needsVisibilityToggle,
   isHidden
 ) {
-  for (var node = workInProgress.child; null !== node; ) {
+  for (var node = workInProgress.child; null !== node;) {
     if (5 === node.tag) {
       var instance = node.stateNode;
       needsVisibilityToggle &&
@@ -6026,7 +6035,7 @@ function appendAllChildren(
         continue;
       }
     if (node === workInProgress) break;
-    for (; null === node.sibling; ) {
+    for (; null === node.sibling;) {
       if (null === node.return || node.return === workInProgress) return;
       node = node.return;
     }
@@ -6040,7 +6049,7 @@ function appendAllChildrenToContainer(
   needsVisibilityToggle,
   isHidden
 ) {
-  for (var node = workInProgress.child; null !== node; ) {
+  for (var node = workInProgress.child; null !== node;) {
     if (5 === node.tag) {
       var instance = node.stateNode;
       needsVisibilityToggle &&
@@ -6071,7 +6080,7 @@ function appendAllChildrenToContainer(
         continue;
       }
     if (node === workInProgress) break;
-    for (; null === node.sibling; ) {
+    for (; null === node.sibling;) {
       if (null === node.return || node.return === workInProgress) return;
       node = node.return;
     }
@@ -6094,15 +6103,15 @@ function scheduleRetryEffect(workInProgress, retryQueue) {
   null !== retryQueue
     ? (workInProgress.flags |= 4)
     : workInProgress.flags & 16384 &&
-      ((retryQueue =
-        22 !== workInProgress.tag ? claimNextRetryLane() : 536870912),
+    ((retryQueue =
+      22 !== workInProgress.tag ? claimNextRetryLane() : 536870912),
       (workInProgress.lanes |= retryQueue));
 }
 function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
   switch (renderState.tailMode) {
     case "hidden":
       hasRenderedATailFallback = renderState.tail;
-      for (var lastTailNode = null; null !== hasRenderedATailFallback; )
+      for (var lastTailNode = null; null !== hasRenderedATailFallback;)
         null !== hasRenderedATailFallback.alternate &&
           (lastTailNode = hasRenderedATailFallback),
           (hasRenderedATailFallback = hasRenderedATailFallback.sibling);
@@ -6112,7 +6121,7 @@ function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
       break;
     case "collapsed":
       lastTailNode = renderState.tail;
-      for (var lastTailNode$61 = null; null !== lastTailNode; )
+      for (var lastTailNode$61 = null; null !== lastTailNode;)
         null !== lastTailNode.alternate && (lastTailNode$61 = lastTailNode),
           (lastTailNode = lastTailNode.sibling);
       null === lastTailNode$61
@@ -6124,19 +6133,19 @@ function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
 }
 function bubbleProperties(completedWork) {
   var didBailout =
-      null !== completedWork.alternate &&
-      completedWork.alternate.child === completedWork.child,
+    null !== completedWork.alternate &&
+    completedWork.alternate.child === completedWork.child,
     newChildLanes = 0,
     subtreeFlags = 0;
   if (didBailout)
-    for (var child$62 = completedWork.child; null !== child$62; )
+    for (var child$62 = completedWork.child; null !== child$62;)
       (newChildLanes |= child$62.lanes | child$62.childLanes),
         (subtreeFlags |= child$62.subtreeFlags & 31457280),
         (subtreeFlags |= child$62.flags & 31457280),
         (child$62.return = completedWork),
         (child$62 = child$62.sibling);
   else
-    for (child$62 = completedWork.child; null !== child$62; )
+    for (child$62 = completedWork.child; null !== child$62;)
       (newChildLanes |= child$62.lanes | child$62.childLanes),
         (subtreeFlags |= child$62.subtreeFlags),
         (subtreeFlags |= child$62.flags),
@@ -6148,6 +6157,12 @@ function bubbleProperties(completedWork) {
 }
 function completeWork(current, workInProgress, renderLanes) {
   var newProps = workInProgress.pendingProps;
+  if (workInProgress.flags & 1 && (workInProgress.type?.displayName || workInProgress.type?.name) !== "View")
+    insertUpdateComponents(
+      defrost.getComponentNameFromFiber(workInProgress),
+      workInProgress.flags,
+      workInProgress.key,
+    );
   switch (workInProgress.tag) {
     case 2:
     case 16:
@@ -6167,15 +6182,15 @@ function completeWork(current, workInProgress, renderLanes) {
         (newProps = workInProgress.stateNode),
         popHostContainer(),
         newProps.pendingContext &&
-          ((newProps.context = newProps.pendingContext),
+        ((newProps.context = newProps.pendingContext),
           (newProps.pendingContext = null)),
         (null !== current && null !== current.child) ||
-          null === current ||
-          (current.memoizedState.isDehydrated &&
-            0 === (workInProgress.flags & 256)) ||
-          ((workInProgress.flags |= 1024),
+        null === current ||
+        (current.memoizedState.isDehydrated &&
+          0 === (workInProgress.flags & 256)) ||
+        ((workInProgress.flags |= 1024),
           null !== hydrationErrors &&
-            (queueRecoverableErrors(hydrationErrors),
+          (queueRecoverableErrors(hydrationErrors),
             (hydrationErrors = null))),
         updateHostContainer(current, workInProgress),
         bubbleProperties(workInProgress),
@@ -6273,11 +6288,11 @@ function completeWork(current, workInProgress, renderLanes) {
       if (current && null != workInProgress.stateNode)
         current.memoizedProps !== newProps
           ? ((workInProgress.stateNode = createTextInstance(
-              newProps,
-              rootInstanceStackCursor.current,
-              contextStackCursor.current,
-              workInProgress
-            )),
+            newProps,
+            rootInstanceStackCursor.current,
+            contextStackCursor.current,
+            workInProgress
+          )),
             (workInProgress.flags |= 4))
           : (workInProgress.stateNode = current.stateNode);
       else {
@@ -6364,7 +6379,7 @@ function completeWork(current, workInProgress, renderLanes) {
             0 !== workInProgressRootExitStatus ||
             (null !== current && 0 !== (current.flags & 128))
           )
-            for (current = workInProgress.child; null !== current; ) {
+            for (current = workInProgress.child; null !== current;) {
               updatePayload = findFirstSuspended(current);
               if (null !== updatePayload) {
                 workInProgress.flags |= 128;
@@ -6374,7 +6389,7 @@ function completeWork(current, workInProgress, renderLanes) {
                 scheduleRetryEffect(workInProgress, current);
                 workInProgress.subtreeFlags = 0;
                 current = renderLanes;
-                for (newProps = workInProgress.child; null !== newProps; )
+                for (newProps = workInProgress.child; null !== newProps;)
                   resetWorkInProgress(newProps, current),
                     (newProps = newProps.sibling);
                 push(
@@ -6388,9 +6403,9 @@ function completeWork(current, workInProgress, renderLanes) {
           null !== oldProps.tail &&
             now() > workInProgressRootRenderTargetTime &&
             ((workInProgress.flags |= 128),
-            (newProps = !0),
-            cutOffTailIfNeeded(oldProps, !1),
-            (workInProgress.lanes = 4194304));
+              (newProps = !0),
+              cutOffTailIfNeeded(oldProps, !1),
+              (workInProgress.lanes = 4194304));
         }
       else {
         if (!newProps)
@@ -6399,12 +6414,12 @@ function completeWork(current, workInProgress, renderLanes) {
           ) {
             if (
               ((workInProgress.flags |= 128),
-              (newProps = !0),
-              (current = current.updateQueue),
-              (workInProgress.updateQueue = current),
-              scheduleRetryEffect(workInProgress, current),
-              cutOffTailIfNeeded(oldProps, !0),
-              null === oldProps.tail &&
+                (newProps = !0),
+                (current = current.updateQueue),
+                (workInProgress.updateQueue = current),
+                scheduleRetryEffect(workInProgress, current),
+                cutOffTailIfNeeded(oldProps, !0),
+                null === oldProps.tail &&
                 "hidden" === oldProps.tailMode &&
                 !updatePayload.alternate)
             )
@@ -6414,9 +6429,9 @@ function completeWork(current, workInProgress, renderLanes) {
               workInProgressRootRenderTargetTime &&
               536870912 !== renderLanes &&
               ((workInProgress.flags |= 128),
-              (newProps = !0),
-              cutOffTailIfNeeded(oldProps, !1),
-              (workInProgress.lanes = 4194304));
+                (newProps = !0),
+                cutOffTailIfNeeded(oldProps, !1),
+                (workInProgress.lanes = 4194304));
         oldProps.isBackwards
           ? ((updatePayload.sibling = workInProgress.child),
             (workInProgress.child = updatePayload))
@@ -6447,17 +6462,17 @@ function completeWork(current, workInProgress, renderLanes) {
         (newProps = null !== workInProgress.memoizedState),
         null !== current
           ? (null !== current.memoizedState) !== newProps &&
-            (workInProgress.flags |= 8192)
+          (workInProgress.flags |= 8192)
           : newProps && (workInProgress.flags |= 8192),
         newProps && 0 !== (workInProgress.mode & 1)
           ? 0 !== (renderLanes & 536870912) &&
-            0 === (workInProgress.flags & 128) &&
-            (bubbleProperties(workInProgress),
+          0 === (workInProgress.flags & 128) &&
+          (bubbleProperties(workInProgress),
             workInProgress.subtreeFlags & 6 && (workInProgress.flags |= 8192))
           : bubbleProperties(workInProgress),
         (current = workInProgress.updateQueue),
         null !== current &&
-          scheduleRetryEffect(workInProgress, current.retryQueue),
+        scheduleRetryEffect(workInProgress, current.retryQueue),
         null
       );
     case 24:
@@ -6467,8 +6482,8 @@ function completeWork(current, workInProgress, renderLanes) {
   }
   throw Error(
     "Unknown unit of work tag (" +
-      workInProgress.tag +
-      "). This error is likely caused by a bug in React. Please file an issue."
+    workInProgress.tag +
+    "). This error is likely caused by a bug in React. Please file an issue."
   );
 }
 function unwindWork(current, workInProgress) {
@@ -6615,15 +6630,15 @@ function safelyCallDestroy(current, nearestMountedAncestor, destroy) {
 }
 var shouldFireAfterActiveInstanceBlur = !1;
 function commitBeforeMutationEffects(root, firstChild) {
-  for (nextEffect = firstChild; null !== nextEffect; )
+  for (nextEffect = firstChild; null !== nextEffect;)
     if (
       ((root = nextEffect),
-      (firstChild = root.child),
-      0 !== (root.subtreeFlags & 1028) && null !== firstChild)
+        (firstChild = root.child),
+        0 !== (root.subtreeFlags & 1028) && null !== firstChild)
     )
       (firstChild.return = root), (nextEffect = firstChild);
     else
-      for (; null !== nextEffect; ) {
+      for (; null !== nextEffect;) {
         root = nextEffect;
         try {
           var current = root.alternate,
@@ -6693,7 +6708,7 @@ function commitHookEffectListUnmount(
           destroy = inst.destroy;
         void 0 !== destroy &&
           ((inst.destroy = void 0),
-          safelyCallDestroy(finishedWork, nearestMountedAncestor, destroy));
+            safelyCallDestroy(finishedWork, nearestMountedAncestor, destroy));
       }
       effect = effect.next;
     } while (effect !== updateQueue);
@@ -6821,7 +6836,7 @@ function commitLayoutEffectOnFiber(finishedRoot, current, finishedWork) {
         if (
           ((prevProps =
             null !== finishedWork.memoizedState || offscreenSubtreeIsHidden),
-          !prevProps)
+            !prevProps)
         ) {
           current =
             (null !== current && null !== current.memoizedState) ||
@@ -6830,12 +6845,12 @@ function commitLayoutEffectOnFiber(finishedRoot, current, finishedWork) {
             prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
           offscreenSubtreeIsHidden = prevProps;
           (offscreenSubtreeWasHidden = current) &&
-          !prevOffscreenSubtreeWasHidden
+            !prevOffscreenSubtreeWasHidden
             ? recursivelyTraverseReappearLayoutEffects(
-                finishedRoot,
-                finishedWork,
-                0 !== (finishedWork.subtreeFlags & 8772)
-              )
+              finishedRoot,
+              finishedWork,
+              0 !== (finishedWork.subtreeFlags & 8772)
+            )
             : recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
           offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden;
           offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
@@ -6871,7 +6886,7 @@ function recursivelyTraverseDeletionEffects(
   nearestMountedAncestor,
   parent
 ) {
-  for (parent = parent.child; null !== parent; )
+  for (parent = parent.child; null !== parent;)
     commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, parent),
       (parent = parent.sibling);
 }
@@ -6883,7 +6898,7 @@ function commitDeletionEffectsOnFiber(
   if (injectedHook && "function" === typeof injectedHook.onCommitFiberUnmount)
     try {
       injectedHook.onCommitFiberUnmount(rendererID, deletedFiber);
-    } catch (err) {}
+    } catch (err) { }
   switch (deletedFiber.tag) {
     case 26:
     case 27:
@@ -6931,7 +6946,7 @@ function commitDeletionEffectsOnFiber(
                     destroy
                   ))
                 : 0 !== (tag & 4) &&
-                  ((inst.destroy = void 0),
+                ((inst.destroy = void 0),
                   safelyCallDestroy(
                     deletedFiber,
                     nearestMountedAncestor,
@@ -6951,8 +6966,8 @@ function commitDeletionEffectsOnFiber(
       if (
         !offscreenSubtreeWasHidden &&
         (safelyDetachRef(deletedFiber, nearestMountedAncestor),
-        (updateQueue = deletedFiber.stateNode),
-        "function" === typeof updateQueue.componentWillUnmount)
+          (updateQueue = deletedFiber.stateNode),
+          "function" === typeof updateQueue.componentWillUnmount)
       )
         try {
           (updateQueue.props = deletedFiber.memoizedProps),
@@ -6978,8 +6993,8 @@ function commitDeletionEffectsOnFiber(
       safelyDetachRef(deletedFiber, nearestMountedAncestor);
       deletedFiber.mode & 1
         ? ((offscreenSubtreeWasHidden =
-            (updateQueue = offscreenSubtreeWasHidden) ||
-            null !== deletedFiber.memoizedState),
+          (updateQueue = offscreenSubtreeWasHidden) ||
+          null !== deletedFiber.memoizedState),
           recursivelyTraverseDeletionEffects(
             finishedRoot,
             nearestMountedAncestor,
@@ -6987,10 +7002,10 @@ function commitDeletionEffectsOnFiber(
           ),
           (offscreenSubtreeWasHidden = updateQueue))
         : recursivelyTraverseDeletionEffects(
-            finishedRoot,
-            nearestMountedAncestor,
-            deletedFiber
-          );
+          finishedRoot,
+          nearestMountedAncestor,
+          deletedFiber
+        );
       break;
     default:
       recursivelyTraverseDeletionEffects(
@@ -7013,14 +7028,14 @@ function getRetryCache(finishedWork) {
         (finishedWork = finishedWork.stateNode),
         (retryCache = finishedWork._retryCache),
         null === retryCache &&
-          (retryCache = finishedWork._retryCache = new PossiblyWeakSet()),
+        (retryCache = finishedWork._retryCache = new PossiblyWeakSet()),
         retryCache
       );
     default:
       throw Error(
         "Unexpected Suspense handler tag (" +
-          finishedWork.tag +
-          "). This is a bug in React."
+        finishedWork.tag +
+        "). This is a bug in React."
       );
   }
 }
@@ -7047,7 +7062,7 @@ function recursivelyTraverseMutationEffects(root, parentFiber) {
       }
     }
   if (parentFiber.subtreeFlags & 12854)
-    for (parentFiber = parentFiber.child; null !== parentFiber; )
+    for (parentFiber = parentFiber.child; null !== parentFiber;)
       commitMutationEffectsOnFiber(parentFiber, root),
         (parentFiber = parentFiber.sibling);
 }
@@ -7084,12 +7099,12 @@ function commitMutationEffectsOnFiber(finishedWork, root) {
       flags & 64 &&
         offscreenSubtreeIsHidden &&
         ((finishedWork = finishedWork.updateQueue),
-        null !== finishedWork &&
+          null !== finishedWork &&
           ((flags = finishedWork.callbacks),
-          null !== flags &&
+            null !== flags &&
             ((current = finishedWork.shared.hiddenCallbacks),
-            (finishedWork.shared.hiddenCallbacks =
-              null === current ? flags : current.concat(flags)))));
+              (finishedWork.shared.hiddenCallbacks =
+                null === current ? flags : current.concat(flags)))));
       break;
     case 26:
     case 27:
@@ -7117,14 +7132,14 @@ function commitMutationEffectsOnFiber(finishedWork, root) {
       commitReconciliationEffects(finishedWork);
       finishedWork.child.flags & 8192 &&
         ((current = null !== current && null !== current.memoizedState),
-        null === finishedWork.memoizedState ||
+          null === finishedWork.memoizedState ||
           current ||
           (globalMostRecentFallbackTime = now()));
       flags & 4 &&
         ((flags = finishedWork.updateQueue),
-        null !== flags &&
+          null !== flags &&
           ((finishedWork.updateQueue = null),
-          attachSuspenseRetryListeners(finishedWork, flags)));
+            attachSuspenseRetryListeners(finishedWork, flags)));
       break;
     case 22:
       flags & 512 &&
@@ -7150,29 +7165,29 @@ function commitMutationEffectsOnFiber(finishedWork, root) {
         ((root._visibility = isHidden
           ? root._visibility & -2
           : root._visibility | 1),
-        isHidden &&
+          isHidden &&
           ((isHidden = offscreenSubtreeIsHidden || offscreenSubtreeWasHidden),
-          null === current ||
+            null === current ||
             wasHidden ||
             isHidden ||
             (0 !== (finishedWork.mode & 1) &&
               recursivelyTraverseDisappearLayoutEffects(finishedWork))));
       flags & 4 &&
         ((flags = finishedWork.updateQueue),
-        null !== flags &&
+          null !== flags &&
           ((current = flags.retryQueue),
-          null !== current &&
+            null !== current &&
             ((flags.retryQueue = null),
-            attachSuspenseRetryListeners(finishedWork, current))));
+              attachSuspenseRetryListeners(finishedWork, current))));
       break;
     case 19:
       recursivelyTraverseMutationEffects(root, finishedWork);
       commitReconciliationEffects(finishedWork);
       flags & 4 &&
         ((flags = finishedWork.updateQueue),
-        null !== flags &&
+          null !== flags &&
           ((finishedWork.updateQueue = null),
-          attachSuspenseRetryListeners(finishedWork, flags)));
+            attachSuspenseRetryListeners(finishedWork, flags)));
       break;
     case 21:
       break;
@@ -7188,12 +7203,12 @@ function commitReconciliationEffects(finishedWork) {
 }
 function recursivelyTraverseLayoutEffects(root, parentFiber) {
   if (parentFiber.subtreeFlags & 8772)
-    for (parentFiber = parentFiber.child; null !== parentFiber; )
+    for (parentFiber = parentFiber.child; null !== parentFiber;)
       commitLayoutEffectOnFiber(root, parentFiber.alternate, parentFiber),
         (parentFiber = parentFiber.sibling);
 }
 function recursivelyTraverseDisappearLayoutEffects(parentFiber) {
-  for (parentFiber = parentFiber.child; null !== parentFiber; ) {
+  for (parentFiber = parentFiber.child; null !== parentFiber;) {
     var finishedWork = parentFiber;
     switch (finishedWork.tag) {
       case 0:
@@ -7244,7 +7259,7 @@ function recursivelyTraverseReappearLayoutEffects(
 ) {
   includeWorkInProgressEffects =
     includeWorkInProgressEffects && 0 !== (parentFiber.subtreeFlags & 8772);
-  for (parentFiber = parentFiber.child; null !== parentFiber; ) {
+  for (parentFiber = parentFiber.child; null !== parentFiber;) {
     var current = parentFiber.alternate,
       finishedRoot = finishedRoot$jscomp$0,
       finishedWork = parentFiber,
@@ -7345,7 +7360,7 @@ function commitHookPassiveMountEffects(finishedWork, hookFlags) {
 }
 function recursivelyTraversePassiveMountEffects(root, parentFiber) {
   if (parentFiber.subtreeFlags & 10256)
-    for (parentFiber = parentFiber.child; null !== parentFiber; )
+    for (parentFiber = parentFiber.child; null !== parentFiber;)
       commitPassiveMountOnFiber(root, parentFiber),
         (parentFiber = parentFiber.sibling);
 }
@@ -7369,15 +7384,15 @@ function commitPassiveMountOnFiber(finishedRoot, finishedWork) {
         ? flags._visibility & 4
           ? recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork)
           : finishedWork.mode & 1 ||
-            ((flags._visibility |= 4),
+          ((flags._visibility |= 4),
             recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork))
         : flags._visibility & 4
-        ? recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork)
-        : ((flags._visibility |= 4),
-          recursivelyTraverseReconnectPassiveEffects(
-            finishedRoot,
-            finishedWork
-          ));
+          ? recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork)
+          : ((flags._visibility |= 4),
+            recursivelyTraverseReconnectPassiveEffects(
+              finishedRoot,
+              finishedWork
+            ));
       break;
     case 24:
       recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork);
@@ -7390,7 +7405,7 @@ function recursivelyTraverseReconnectPassiveEffects(
   finishedRoot$jscomp$0,
   parentFiber
 ) {
-  for (parentFiber = parentFiber.child; null !== parentFiber; ) {
+  for (parentFiber = parentFiber.child; null !== parentFiber;) {
     var finishedRoot = finishedRoot$jscomp$0,
       finishedWork = parentFiber;
     switch (finishedWork.tag) {
@@ -7407,11 +7422,11 @@ function recursivelyTraverseReconnectPassiveEffects(
         null !== finishedWork.memoizedState
           ? instance._visibility & 4
             ? recursivelyTraverseReconnectPassiveEffects(
-                finishedRoot,
-                finishedWork
-              )
+              finishedRoot,
+              finishedWork
+            )
             : finishedWork.mode & 1 ||
-              ((instance._visibility |= 4),
+            ((instance._visibility |= 4),
               recursivelyTraverseReconnectPassiveEffects(
                 finishedRoot,
                 finishedWork
@@ -7434,7 +7449,7 @@ function recursivelyTraverseReconnectPassiveEffects(
 var suspenseyCommitFlag = 8192;
 function recursivelyAccumulateSuspenseyCommit(parentFiber) {
   if (parentFiber.subtreeFlags & suspenseyCommitFlag)
-    for (parentFiber = parentFiber.child; null !== parentFiber; )
+    for (parentFiber = parentFiber.child; null !== parentFiber;)
       accumulateSuspenseyCommitOnFiber(parentFiber),
         (parentFiber = parentFiber.sibling);
 }
@@ -7498,7 +7513,7 @@ function recursivelyTraversePassiveUnmountEffects(parentFiber) {
     detachAlternateSiblings(parentFiber);
   }
   if (parentFiber.subtreeFlags & 10256)
-    for (parentFiber = parentFiber.child; null !== parentFiber; )
+    for (parentFiber = parentFiber.child; null !== parentFiber;)
       commitPassiveUnmountOnFiber(parentFiber),
         (parentFiber = parentFiber.sibling);
 }
@@ -7514,8 +7529,8 @@ function commitPassiveUnmountOnFiber(finishedWork) {
     case 22:
       var instance = finishedWork.stateNode;
       null !== finishedWork.memoizedState &&
-      instance._visibility & 4 &&
-      (null === finishedWork.return || 13 !== finishedWork.return.tag)
+        instance._visibility & 4 &&
+        (null === finishedWork.return || 13 !== finishedWork.return.tag)
         ? ((instance._visibility &= -5),
           recursivelyTraverseDisconnectPassiveEffects(finishedWork))
         : recursivelyTraversePassiveUnmountEffects(finishedWork);
@@ -7538,7 +7553,7 @@ function recursivelyTraverseDisconnectPassiveEffects(parentFiber) {
       }
     detachAlternateSiblings(parentFiber);
   }
-  for (parentFiber = parentFiber.child; null !== parentFiber; ) {
+  for (parentFiber = parentFiber.child; null !== parentFiber;) {
     deletions = parentFiber;
     switch (deletions.tag) {
       case 0:
@@ -7551,7 +7566,7 @@ function recursivelyTraverseDisconnectPassiveEffects(parentFiber) {
         i = deletions.stateNode;
         i._visibility & 4 &&
           ((i._visibility &= -5),
-          recursivelyTraverseDisconnectPassiveEffects(deletions));
+            recursivelyTraverseDisconnectPassiveEffects(deletions));
         break;
       default:
         recursivelyTraverseDisconnectPassiveEffects(deletions);
@@ -7563,7 +7578,7 @@ function commitPassiveUnmountEffectsInsideOfDeletedTree_begin(
   deletedSubtreeRoot,
   nearestMountedAncestor
 ) {
-  for (; null !== nextEffect; ) {
+  for (; null !== nextEffect;) {
     var fiber = nextEffect;
     switch (fiber.tag) {
       case 0:
@@ -7574,7 +7589,7 @@ function commitPassiveUnmountEffectsInsideOfDeletedTree_begin(
     var child = fiber.child;
     if (null !== child) (child.return = fiber), (nextEffect = child);
     else
-      a: for (fiber = deletedSubtreeRoot; null !== nextEffect; ) {
+      a: for (fiber = deletedSubtreeRoot; null !== nextEffect;) {
         child = nextEffect;
         var sibling = child.sibling,
           returnFiber = child.return;
@@ -7633,7 +7648,7 @@ function requestUpdateLane(fiber) {
   if (null !== fiber)
     return (
       0 === currentEventTransitionLane &&
-        (currentEventTransitionLane = claimNextTransitionLane()),
+      (currentEventTransitionLane = claimNextTransitionLane()),
       currentEventTransitionLane
     );
   fiber = currentUpdatePriority;
@@ -7678,7 +7693,7 @@ function scheduleUpdateOnFiber(root, fiber, lane) {
     root === workInProgressRoot &&
       (0 === (executionContext & 2) &&
         (workInProgressRootInterleavedUpdatedLanes |= lane),
-      4 === workInProgressRootExitStatus &&
+        4 === workInProgressRootExitStatus &&
         markRootSuspended(
           root,
           workInProgressRootRenderLanes,
@@ -7686,9 +7701,9 @@ function scheduleUpdateOnFiber(root, fiber, lane) {
         )),
       ensureRootIsScheduled(root),
       2 === lane &&
-        0 === executionContext &&
-        0 === (fiber.mode & 1) &&
-        ((workInProgressRootRenderTargetTime = now() + 500),
+      0 === executionContext &&
+      0 === (fiber.mode & 1) &&
+      ((workInProgressRootRenderTargetTime = now() + 500),
         flushSyncWorkAcrossRoots_impl(!0));
 }
 function performConcurrentWorkOnRoot(root, didTimeout) {
@@ -7728,19 +7743,19 @@ function performConcurrentWorkOnRoot(root, didTimeout) {
           );
           0 !== errorRetryLanes &&
             ((lanes = errorRetryLanes),
-            (exitStatus = recoverFromConcurrentError(
-              root,
-              renderWasConcurrent,
-              errorRetryLanes
-            )));
+              (exitStatus = recoverFromConcurrentError(
+                root,
+                renderWasConcurrent,
+                errorRetryLanes
+              )));
         }
         if (1 === exitStatus)
           throw (
             ((originalCallbackNode = workInProgressRootFatalError),
-            prepareFreshStack(root, 0),
-            markRootSuspended(root, lanes, 0),
-            ensureRootIsScheduled(root),
-            originalCallbackNode)
+              prepareFreshStack(root, 0),
+              markRootSuspended(root, lanes, 0),
+              ensureRootIsScheduled(root),
+              originalCallbackNode)
           );
         root.finishedWork = didTimeout;
         root.finishedLanes = lanes;
@@ -7771,7 +7786,7 @@ function performConcurrentWorkOnRoot(root, didTimeout) {
             (lanes & 62914560) === lanes &&
             3 === exitStatus &&
             ((exitStatus = globalMostRecentFallbackTime + 300 - now()),
-            10 < exitStatus)
+              10 < exitStatus)
           ) {
             markRootSuspended(
               renderWasConcurrent,
@@ -7843,9 +7858,9 @@ function queueRecoverableErrors(errors) {
   null === workInProgressRootRecoverableErrors
     ? (workInProgressRootRecoverableErrors = errors)
     : workInProgressRootRecoverableErrors.push.apply(
-        workInProgressRootRecoverableErrors,
-        errors
-      );
+      workInProgressRootRecoverableErrors,
+      errors
+    );
 }
 function commitRootWhenReady(
   root,
@@ -7866,7 +7881,7 @@ function commitRootWhenReady(
   );
 }
 function isRenderConsistentWithExternalStores(finishedWork) {
-  for (var node = finishedWork; ; ) {
+  for (var node = finishedWork; ;) {
     if (node.flags & 16384) {
       var updateQueue = node.updateQueue;
       if (
@@ -7889,7 +7904,7 @@ function isRenderConsistentWithExternalStores(finishedWork) {
       (updateQueue.return = node), (node = updateQueue);
     else {
       if (node === finishedWork) break;
-      for (; null === node.sibling; ) {
+      for (; null === node.sibling;) {
         if (null === node.return || node.return === finishedWork) return !0;
         node = node.return;
       }
@@ -7928,7 +7943,7 @@ function resetWorkInProgressStack() {
         (thenableState$1 = null),
         (thenableIndexCounter$1 = 0),
         (interruptedWork = workInProgress);
-    for (; null !== interruptedWork; )
+    for (; null !== interruptedWork;)
       unwindInterruptedWork(interruptedWork.alternate, interruptedWork),
         (interruptedWork = interruptedWork.return);
     workInProgress = null;
@@ -7956,7 +7971,7 @@ function prepareFreshStack(root, lanes) {
     workInProgressRootPingedLanes =
     workInProgressRootInterleavedUpdatedLanes =
     workInProgressRootSkippedLanes =
-      0;
+    0;
   workInProgressRootRecoverableErrors = workInProgressRootConcurrentErrors =
     null;
   workInProgressRootDidIncludeRecursiveRenderUpdate = !1;
@@ -7987,31 +8002,31 @@ function handleThrow(root, thrownValue) {
       (workInProgressSuspendedReason =
         (null !== root &&
           ((workInProgressRootRenderLanes & 4194176) ===
-          workInProgressRootRenderLanes
+            workInProgressRootRenderLanes
             ? null !== shellBoundary
             : ((workInProgressRootRenderLanes & 62914560) !==
-                workInProgressRootRenderLanes &&
-                0 === (workInProgressRootRenderLanes & 536870912)) ||
-              root !== shellBoundary)) ||
-        0 !== (workInProgressRootSkippedLanes & 134217727) ||
-        0 !== (workInProgressRootInterleavedUpdatedLanes & 134217727)
+              workInProgressRootRenderLanes &&
+              0 === (workInProgressRootRenderLanes & 536870912)) ||
+            root !== shellBoundary)) ||
+          0 !== (workInProgressRootSkippedLanes & 134217727) ||
+          0 !== (workInProgressRootInterleavedUpdatedLanes & 134217727)
           ? 3
           : 2))
     : thrownValue === SuspenseyCommitException
-    ? ((thrownValue = getSuspendedThenable()),
-      (workInProgressSuspendedReason = 4))
-    : (workInProgressSuspendedReason =
+      ? ((thrownValue = getSuspendedThenable()),
+        (workInProgressSuspendedReason = 4))
+      : (workInProgressSuspendedReason =
         thrownValue === SelectiveHydrationException
           ? 8
           : null !== thrownValue &&
             "object" === typeof thrownValue &&
             "function" === typeof thrownValue.then
-          ? 6
-          : 1);
+            ? 6
+            : 1);
   workInProgressThrownValue = thrownValue;
   null === workInProgress &&
     ((workInProgressRootExitStatus = 1),
-    (workInProgressRootFatalError = thrownValue));
+      (workInProgressRootFatalError = thrownValue));
 }
 function pushDispatcher() {
   var prevDispatcher = ReactCurrentDispatcher.current;
@@ -8077,7 +8092,7 @@ function renderRootSync(root, lanes) {
   return workInProgressRootExitStatus;
 }
 function workLoopSync() {
-  for (; null !== workInProgress; ) performUnitOfWork(workInProgress);
+  for (; null !== workInProgress;) performUnitOfWork(workInProgress);
 }
 function renderRootConcurrent(root, lanes) {
   var prevExecutionContext = executionContext;
@@ -8180,7 +8195,7 @@ function renderRootConcurrent(root, lanes) {
   return workInProgressRootExitStatus;
 }
 function workLoopConcurrent() {
-  for (; null !== workInProgress && !shouldYield(); )
+  for (; null !== workInProgress && !shouldYield();)
     performUnitOfWork(workInProgress);
 }
 function performUnitOfWork(unitOfWork) {
@@ -8282,8 +8297,8 @@ function throwAndUnwindWorkLoop(root, unitOfWork, thrownValue) {
         root = root.return;
         null !== root &&
           ((root.flags |= 32768),
-          (root.subtreeFlags = 0),
-          (root.deletions = null));
+            (root.subtreeFlags = 0),
+            (root.deletions = null));
         workInProgress = root;
       } while (null !== root);
       workInProgressRootExitStatus = 6;
@@ -8322,6 +8337,9 @@ function commitRoot(
 ) {
   var previousUpdateLanePriority = currentUpdatePriority,
     prevTransition = ReactCurrentBatchConfig.transition;
+  defrost.writeInLogFiles(Date.now() + "", { list: updatedComponents, change: updatedComponentForProfiler })
+  updatedComponents = []
+  updatedComponentForProfiler = null
   try {
     (ReactCurrentBatchConfig.transition = null),
       (currentUpdatePriority = 2),
@@ -8369,15 +8387,15 @@ function commitRootImpl(
   markRootFinished(root, remainingLanes, spawnedLane);
   root === workInProgressRoot &&
     ((workInProgress = workInProgressRoot = null),
-    (workInProgressRootRenderLanes = 0));
+      (workInProgressRootRenderLanes = 0));
   (0 === (didIncludeRenderPhaseUpdate.subtreeFlags & 10256) &&
     0 === (didIncludeRenderPhaseUpdate.flags & 10256)) ||
     rootDoesHavePassiveEffects ||
     ((rootDoesHavePassiveEffects = !0),
-    scheduleCallback(NormalPriority, function () {
-      flushPassiveEffects();
-      return null;
-    }));
+      scheduleCallback(NormalPriority, function () {
+        flushPassiveEffects();
+        return null;
+      }));
   spawnedLane = 0 !== (didIncludeRenderPhaseUpdate.flags & 15990);
   if (0 !== (didIncludeRenderPhaseUpdate.subtreeFlags & 15990) || spawnedLane) {
     spawnedLane = ReactCurrentBatchConfig.transition;
@@ -8402,8 +8420,8 @@ function commitRootImpl(
   } else root.current = didIncludeRenderPhaseUpdate;
   rootDoesHavePassiveEffects &&
     ((rootDoesHavePassiveEffects = !1),
-    (rootWithPendingPassiveEffects = root),
-    (pendingPassiveEffectsLanes = transitions));
+      (rootWithPendingPassiveEffects = root),
+      (pendingPassiveEffectsLanes = transitions));
   remainingLanes = root.pendingLanes;
   0 === remainingLanes && (legacyErrorBoundariesThatAlreadyFailed = null);
   onCommitRoot(didIncludeRenderPhaseUpdate.stateNode, renderPriorityLevel);
@@ -8411,7 +8429,7 @@ function commitRootImpl(
   if (null !== recoverableErrors)
     for (
       renderPriorityLevel = root.onRecoverableError,
-        didIncludeRenderPhaseUpdate = 0;
+      didIncludeRenderPhaseUpdate = 0;
       didIncludeRenderPhaseUpdate < recoverableErrors.length;
       didIncludeRenderPhaseUpdate++
     )
@@ -8424,9 +8442,9 @@ function commitRootImpl(
   if (hasUncaughtError)
     throw (
       ((hasUncaughtError = !1),
-      (root = firstUncaughtError),
-      (firstUncaughtError = null),
-      root)
+        (root = firstUncaughtError),
+        (firstUncaughtError = null),
+        root)
     );
   0 !== (pendingPassiveEffectsLanes & 3) &&
     0 !== root.tag &&
@@ -8468,7 +8486,7 @@ function flushPassiveEffects() {
         )
           try {
             injectedHook.onPostCommitFiberRoot(rendererID, renderPriority);
-          } catch (err) {}
+          } catch (err) { }
         JSCompiler_inline_result = !0;
       }
       return JSCompiler_inline_result;
@@ -8490,7 +8508,7 @@ function captureCommitPhaseError(sourceFiber, nearestMountedAncestor, error) {
   if (3 === sourceFiber.tag)
     captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);
   else
-    for (; null !== nearestMountedAncestor; ) {
+    for (; null !== nearestMountedAncestor;) {
       if (3 === nearestMountedAncestor.tag) {
         captureCommitPhaseErrorOnRoot(
           nearestMountedAncestor,
@@ -8502,7 +8520,7 @@ function captureCommitPhaseError(sourceFiber, nearestMountedAncestor, error) {
         var instance = nearestMountedAncestor.stateNode;
         if (
           "function" ===
-            typeof nearestMountedAncestor.type.getDerivedStateFromError ||
+          typeof nearestMountedAncestor.type.getDerivedStateFromError ||
           ("function" === typeof instance.componentDidCatch &&
             (null === legacyErrorBoundariesThatAlreadyFailed ||
               !legacyErrorBoundariesThatAlreadyFailed.has(instance)))
@@ -8520,7 +8538,7 @@ function captureCommitPhaseError(sourceFiber, nearestMountedAncestor, error) {
           );
           null !== nearestMountedAncestor &&
             (markRootUpdated$1(nearestMountedAncestor, 2),
-            ensureRootIsScheduled(nearestMountedAncestor));
+              ensureRootIsScheduled(nearestMountedAncestor));
           break;
         }
       }
@@ -8536,12 +8554,12 @@ function attachPingListener(root, wakeable, lanes) {
   } else
     (threadIDs = pingCache.get(wakeable)),
       void 0 === threadIDs &&
-        ((threadIDs = new Set()), pingCache.set(wakeable, threadIDs));
+      ((threadIDs = new Set()), pingCache.set(wakeable, threadIDs));
   threadIDs.has(lanes) ||
     ((workInProgressRootDidAttachPingListener = !0),
-    threadIDs.add(lanes),
-    (root = pingSuspendedRoot.bind(null, root, wakeable, lanes)),
-    wakeable.then(root, root));
+      threadIDs.add(lanes),
+      (root = pingSuspendedRoot.bind(null, root, wakeable, lanes)),
+      wakeable.then(root, root));
 }
 function pingSuspendedRoot(root, wakeable, pingedLanes) {
   var pingCache = root.pingCache;
@@ -8550,10 +8568,10 @@ function pingSuspendedRoot(root, wakeable, pingedLanes) {
   workInProgressRoot === root &&
     (workInProgressRootRenderLanes & pingedLanes) === pingedLanes &&
     (4 === workInProgressRootExitStatus ||
-    (3 === workInProgressRootExitStatus &&
-      (workInProgressRootRenderLanes & 62914560) ===
+      (3 === workInProgressRootExitStatus &&
+        (workInProgressRootRenderLanes & 62914560) ===
         workInProgressRootRenderLanes &&
-      300 > now() - globalMostRecentFallbackTime)
+        300 > now() - globalMostRecentFallbackTime)
       ? 0 === (executionContext & 2) && prepareFreshStack(root, 0)
       : (workInProgressRootPingedLanes |= pingedLanes));
   ensureRootIsScheduled(root);
@@ -8564,7 +8582,7 @@ function retryTimedOutBoundary(boundaryFiber, retryLane) {
   boundaryFiber = enqueueConcurrentRenderForLane(boundaryFiber, retryLane);
   null !== boundaryFiber &&
     (markRootUpdated$1(boundaryFiber, retryLane),
-    ensureRootIsScheduled(boundaryFiber));
+      ensureRootIsScheduled(boundaryFiber));
 }
 function retryDehydratedSuspenseBoundary(boundaryFiber) {
   var suspenseState = boundaryFiber.memoizedState,
@@ -8606,7 +8624,7 @@ function FiberNode(tag, pendingProps, key, mode) {
     this.stateNode =
     this.type =
     this.elementType =
-      null;
+    null;
   this.index = 0;
   this.refCleanup = this.ref = null;
   this.pendingProps = pendingProps;
@@ -8614,7 +8632,7 @@ function FiberNode(tag, pendingProps, key, mode) {
     this.memoizedState =
     this.updateQueue =
     this.memoizedProps =
-      null;
+    null;
   this.mode = mode;
   this.subtreeFlags = this.flags = 0;
   this.deletions = null;
@@ -8642,11 +8660,11 @@ function createWorkInProgress(current, pendingProps) {
   var workInProgress = current.alternate;
   null === workInProgress
     ? ((workInProgress = createFiber(
-        current.tag,
-        pendingProps,
-        current.key,
-        current.mode
-      )),
+      current.tag,
+      pendingProps,
+      current.key,
+      current.mode
+    )),
       (workInProgress.elementType = current.elementType),
       (workInProgress.type = current.type),
       (workInProgress.stateNode = current.stateNode),
@@ -8702,9 +8720,9 @@ function resetWorkInProgress(workInProgress, renderLanes) {
         null === renderLanes
           ? null
           : {
-              lanes: renderLanes.lanes,
-              firstContext: renderLanes.firstContext
-            }));
+            lanes: renderLanes.lanes,
+            firstContext: renderLanes.firstContext
+          }));
   return workInProgress;
 }
 function createFiberFromTypeAndProps(
@@ -8774,7 +8792,7 @@ function createFiberFromTypeAndProps(
           }
         throw Error(
           "Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: " +
-            ((null == type ? type : typeof type) + ".")
+          ((null == type ? type : typeof type) + ".")
         );
     }
   key = createFiber(fiberTag, pendingProps, key, mode);
@@ -8809,7 +8827,7 @@ function createFiberFromOffscreen(pendingProps, mode, lanes, key) {
         var root = enqueueConcurrentRenderForLane(fiber, 2);
         null !== root &&
           ((primaryChildInstance._pendingVisibility |= 2),
-          scheduleUpdateOnFiber(root, fiber, 2));
+            scheduleUpdateOnFiber(root, fiber, 2));
       }
     },
     attach: function () {
@@ -8822,7 +8840,7 @@ function createFiberFromOffscreen(pendingProps, mode, lanes, key) {
         var root = enqueueConcurrentRenderForLane(fiber, 2);
         null !== root &&
           ((primaryChildInstance._pendingVisibility &= -3),
-          scheduleUpdateOnFiber(root, fiber, 2));
+            scheduleUpdateOnFiber(root, fiber, 2));
       }
     }
   };
@@ -8863,14 +8881,14 @@ function FiberRootNode(
     this.pingCache =
     this.current =
     this.pendingChildren =
-      null;
+    null;
   this.timeoutHandle = -1;
   this.callbackNode =
     this.next =
     this.pendingContext =
     this.context =
     this.cancelPendingCommit =
-      null;
+    null;
   this.callbackPriority = 0;
   this.expirationTimes = createLaneMap(-1);
   this.entangledLanes =
@@ -8881,7 +8899,7 @@ function FiberRootNode(
     this.pingedLanes =
     this.suspendedLanes =
     this.pendingLanes =
-      0;
+    0;
   this.entanglements = createLaneMap(0);
   this.hiddenUpdates = createLaneMap(null);
   this.identifierPrefix = identifierPrefix;
@@ -8926,7 +8944,7 @@ function updateContainer(element, container, parentComponent, callback) {
   element = enqueueUpdate(parentComponent, container, lane);
   null !== element &&
     (scheduleUpdateOnFiber(element, parentComponent, lane),
-    entangleTransitions(element, parentComponent, lane));
+      entangleTransitions(element, parentComponent, lane));
   return lane;
 }
 function emptyFindFiberByHostInstance() {
@@ -8950,8 +8968,8 @@ function findNodeHandle(componentOrHandle) {
   return null == componentOrHandle
     ? componentOrHandle
     : null != componentOrHandle._nativeTag
-    ? componentOrHandle._nativeTag
-    : ReactNativePrivateInterface.getNativeTagFromPublicInstance(
+      ? componentOrHandle._nativeTag
+      : ReactNativePrivateInterface.getNativeTagFromPublicInstance(
         componentOrHandle
       );
 }
@@ -8969,7 +8987,7 @@ batchedUpdatesImpl = function (fn, a) {
   } finally {
     (executionContext = prevExecutionContext),
       0 === executionContext &&
-        ((workInProgressRootRenderTargetTime = now() + 500),
+      ((workInProgressRootRenderTargetTime = now() + 500),
         flushSyncWorkAcrossRoots_impl(!0));
   }
 };
@@ -9033,7 +9051,7 @@ if ("undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
         internals$jscomp$inline_1259
       )),
         (injectedHook = hook$jscomp$inline_1260);
-    } catch (err) {}
+    } catch (err) { }
 }
 exports.createPortal = function (children, containerTag) {
   return createPortal$1(
@@ -9050,9 +9068,9 @@ exports.dispatchCommand = function (handle, command, args) {
       : ReactNativePrivateInterface.getNativeTagFromPublicInstance(handle);
   null != nativeTag &&
     ((handle = ReactNativePrivateInterface.getNodeFromPublicInstance(handle)),
-    null != handle
-      ? nativeFabricUIManager.dispatchCommand(handle, command, args)
-      : ReactNativePrivateInterface.UIManager.dispatchViewManagerCommand(
+      null != handle
+        ? nativeFabricUIManager.dispatchCommand(handle, command, args)
+        : ReactNativePrivateInterface.UIManager.dispatchViewManagerCommand(
           nativeTag,
           command,
           args
@@ -9062,10 +9080,10 @@ exports.findHostInstance_DEPRECATED = function (componentOrHandle) {
   return null == componentOrHandle
     ? null
     : componentOrHandle.canonical && componentOrHandle.canonical.publicInstance
-    ? componentOrHandle.canonical.publicInstance
-    : componentOrHandle._nativeTag
-    ? componentOrHandle
-    : findHostInstance(componentOrHandle);
+      ? componentOrHandle.canonical.publicInstance
+      : componentOrHandle._nativeTag
+        ? componentOrHandle
+        : findHostInstance(componentOrHandle);
 };
 exports.findNodeHandle = findNodeHandle;
 exports.getInspectorDataForInstance = getInspectorDataForInstance;
@@ -9083,13 +9101,13 @@ exports.getPublicInstanceFromInternalInstanceHandle = function (
   return null == instance
     ? null
     : 6 === internalInstanceHandle.tag
-    ? (null == instance.publicInstance &&
+      ? (null == instance.publicInstance &&
         (instance.publicInstance =
           ReactNativePrivateInterface.createPublicTextInstance(
             internalInstanceHandle
           )),
-      instance.publicInstance)
-    : getPublicInstance(internalInstanceHandle.stateNode);
+        instance.publicInstance)
+      : getPublicInstance(internalInstanceHandle.stateNode);
 };
 exports.isChildPublicInstance = function () {
   throw Error("isChildPublicInstance() is not available in production.");
@@ -9098,21 +9116,21 @@ exports.render = function (element, containerTag, callback, concurrentRoot) {
   var root = roots.get(containerTag);
   root ||
     ((root = concurrentRoot ? 1 : 0),
-    (concurrentRoot = new FiberRootNode(
-      containerTag,
-      root,
-      !1,
-      "",
-      onRecoverableError,
-      null
-    )),
-    (root = createFiber(3, null, null, 1 === root ? 1 : 0)),
-    (concurrentRoot.current = root),
-    (root.stateNode = concurrentRoot),
-    (root.memoizedState = { element: null, isDehydrated: !1, cache: null }),
-    initializeUpdateQueue(root),
-    (root = concurrentRoot),
-    roots.set(containerTag, root));
+      (concurrentRoot = new FiberRootNode(
+        containerTag,
+        root,
+        !1,
+        "",
+        onRecoverableError,
+        null
+      )),
+      (root = createFiber(3, null, null, 1 === root ? 1 : 0)),
+      (concurrentRoot.current = root),
+      (root.stateNode = concurrentRoot),
+      (root.memoizedState = { element: null, isDehydrated: !1, cache: null }),
+      initializeUpdateQueue(root),
+      (root = concurrentRoot),
+      roots.set(containerTag, root));
   updateContainer(element, root, null, callback);
   a: if (((element = root.current), element.child))
     switch (element.child.tag) {
@@ -9133,9 +9151,9 @@ exports.sendAccessibilityEvent = function (handle, eventType) {
       : ReactNativePrivateInterface.getNativeTagFromPublicInstance(handle);
   null != nativeTag &&
     ((handle = ReactNativePrivateInterface.getNodeFromPublicInstance(handle)),
-    null != handle
-      ? nativeFabricUIManager.sendAccessibilityEvent(handle, eventType)
-      : ReactNativePrivateInterface.legacySendAccessibilityEvent(
+      null != handle
+        ? nativeFabricUIManager.sendAccessibilityEvent(handle, eventType)
+        : ReactNativePrivateInterface.legacySendAccessibilityEvent(
           nativeTag,
           eventType
         ));
diff --git a/node_modules/react-native/Libraries/Renderer/implementations/ReactNativeRenderer-dev.js b/node_modules/react-native/Libraries/Renderer/implementations/ReactNativeRenderer-dev.js
index 2544f75..05d1871 100644
--- a/node_modules/react-native/Libraries/Renderer/implementations/ReactNativeRenderer-dev.js
+++ b/node_modules/react-native/Libraries/Renderer/implementations/ReactNativeRenderer-dev.js
@@ -13,6 +13,8 @@
 
 "use strict";
 
+import defrost from '@d11/de-frost'
+
 if (__DEV__) {
   (function () {
     "use strict";
@@ -21,12 +23,17 @@ if (__DEV__) {
     if (
       typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" &&
       typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===
-        "function"
+      "function"
     ) {
       __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
     }
     var React = require("react");
     require("react-native/Libraries/ReactPrivate/ReactNativePrivateInitializeCore");
+    var updatedComponents = [];
+    var updatedComponentForProfiler = null;
+    function insertUpdateComponents(componentName, flags, key) {
+      updatedComponents.push({ componentName, flags, key });
+    }
     var ReactNativePrivateInterface = require("react-native/Libraries/ReactPrivate/ReactNativePrivateInterface");
     var Scheduler = require("scheduler");
 
@@ -43,8 +50,8 @@ if (__DEV__) {
         {
           for (
             var _len = arguments.length,
-              args = new Array(_len > 1 ? _len - 1 : 0),
-              _key = 1;
+            args = new Array(_len > 1 ? _len - 1 : 0),
+            _key = 1;
             _key < _len;
             _key++
           ) {
@@ -60,8 +67,8 @@ if (__DEV__) {
         {
           for (
             var _len2 = arguments.length,
-              args = new Array(_len2 > 1 ? _len2 - 1 : 0),
-              _key2 = 1;
+            args = new Array(_len2 > 1 ? _len2 - 1 : 0),
+            _key2 = 1;
             _key2 < _len2;
             _key2++
           ) {
@@ -122,7 +129,7 @@ if (__DEV__) {
         if (!getNodeFromInstance || !getInstanceFromNode) {
           error(
             "Injected " +
-              "module is missing getNodeFromInstance or getInstanceFromNode."
+            "module is missing getNodeFromInstance or getInstanceFromNode."
           );
         }
       }
@@ -136,14 +143,14 @@ if (__DEV__) {
         var listenersLen = listenersIsArr
           ? dispatchListeners.length
           : dispatchListeners
-          ? 1
-          : 0;
+            ? 1
+            : 0;
         var instancesIsArr = isArray(dispatchInstances);
         var instancesLen = instancesIsArr
           ? dispatchInstances.length
           : dispatchInstances
-          ? 1
-          : 0;
+            ? 1
+            : 0;
 
         if (
           instancesIsArr !== listenersIsArr ||
@@ -506,14 +513,14 @@ if (__DEV__) {
           Object.defineProperty(
             this,
             "preventDefault",
-            getPooledWarningPropertyDefinition("preventDefault", function () {})
+            getPooledWarningPropertyDefinition("preventDefault", function () { })
           );
           Object.defineProperty(
             this,
             "stopPropagation",
             getPooledWarningPropertyDefinition(
               "stopPropagation",
-              function () {}
+              function () { }
             )
           );
         }
@@ -527,7 +534,7 @@ if (__DEV__) {
     SyntheticEvent.extend = function (Interface) {
       var Super = this;
 
-      var E = function () {};
+      var E = function () { };
 
       E.prototype = Super.prototype;
       var prototype = new E();
@@ -576,9 +583,9 @@ if (__DEV__) {
         {
           error(
             "This synthetic event is reused for performance reasons. If you're seeing this, " +
-              "you're %s `%s` on a released/nullified synthetic event. %s. " +
-              "If you must keep the original synthetic event around, use event.persist(). " +
-              "See https://react.dev/link/event-pooling for more information.",
+            "you're %s `%s` on a released/nullified synthetic event. %s. " +
+            "If you must keep the original synthetic event around, use event.persist(). " +
+            "See https://react.dev/link/event-pooling for more information.",
             action,
             propName,
             result
@@ -745,7 +752,7 @@ if (__DEV__) {
         if (identifier > MAX_TOUCH_BANK) {
           error(
             "Touch identifier %s is greater than maximum supported %s which causes " +
-              "performance issues backfilling array locations for all of the indices.",
+            "performance issues backfilling array locations for all of the indices.",
             identifier,
             MAX_TOUCH_BANK
           );
@@ -784,8 +791,8 @@ if (__DEV__) {
         {
           warn(
             "Cannot record touch move without a touch start.\n" +
-              "Touch Move: %s\n" +
-              "Touch Bank: %s",
+            "Touch Move: %s\n" +
+            "Touch Bank: %s",
             printTouch(touch),
             printTouchBank()
           );
@@ -809,8 +816,8 @@ if (__DEV__) {
         {
           warn(
             "Cannot record touch end without a touch start.\n" +
-              "Touch End: %s\n" +
-              "Touch Bank: %s",
+            "Touch End: %s\n" +
+            "Touch Bank: %s",
             printTouch(touch),
             printTouchBank()
           );
@@ -1223,7 +1230,7 @@ if (__DEV__) {
 
       var i;
 
-      for (i = path.length; i-- > 0; ) {
+      for (i = path.length; i-- > 0;) {
         fn(path[i], "captured", arg);
       }
 
@@ -1252,10 +1259,10 @@ if (__DEV__) {
       if (listener && typeof listener !== "function") {
         throw new Error(
           "Expected `" +
-            registrationName +
-            "` listener to be a function, instead got a value of `" +
-            typeof listener +
-            "` type."
+          registrationName +
+          "` listener to be a function, instead got a value of `" +
+          typeof listener +
+          "` type."
         );
       }
 
@@ -1556,10 +1563,10 @@ to return true:wantsResponderID|                            |
       var shouldSetEventType = isStartish(topLevelType)
         ? eventTypes.startShouldSetResponder
         : isMoveish(topLevelType)
-        ? eventTypes.moveShouldSetResponder
-        : topLevelType === TOP_SELECTION_CHANGE
-        ? eventTypes.selectionChangeShouldSetResponder
-        : eventTypes.scrollShouldSetResponder; // TODO: stop one short of the current responder.
+          ? eventTypes.moveShouldSetResponder
+          : topLevelType === TOP_SELECTION_CHANGE
+            ? eventTypes.selectionChangeShouldSetResponder
+            : eventTypes.scrollShouldSetResponder; // TODO: stop one short of the current responder.
 
       var bubbleShouldSetFrom = !responderInst
         ? targetInst
@@ -1746,11 +1753,11 @@ to return true:wantsResponderID|                            |
           nativeEvent
         )
           ? setResponderAndExtractTransfer(
-              topLevelType,
-              targetInst,
-              nativeEvent,
-              nativeEventTarget
-            )
+            topLevelType,
+            targetInst,
+            nativeEvent,
+            nativeEventTarget
+          )
           : null; // Responder may or may not have transferred on a new touch start/move.
         // Regardless, whoever is the responder after any potential transfer, we
         // direct all touch start/move/ends to them in the form of
@@ -1768,10 +1775,10 @@ to return true:wantsResponderID|                            |
         var incrementalTouch = isResponderTouchStart
           ? eventTypes.responderStart
           : isResponderTouchMove
-          ? eventTypes.responderMove
-          : isResponderTouchEnd
-          ? eventTypes.responderEnd
-          : null;
+            ? eventTypes.responderMove
+            : isResponderTouchEnd
+              ? eventTypes.responderEnd
+              : null;
 
         if (incrementalTouch) {
           var gesture = ResponderSyntheticEvent.getPooled(
@@ -1795,8 +1802,8 @@ to return true:wantsResponderID|                            |
         var finalTouch = isResponderTerminate
           ? eventTypes.responderTerminate
           : isResponderRelease
-          ? eventTypes.responderRelease
-          : null;
+            ? eventTypes.responderRelease
+            : null;
 
         if (finalTouch) {
           var finalEvent = ResponderSyntheticEvent.getPooled(
@@ -1855,7 +1862,7 @@ to return true:wantsResponderID|                            |
         if (pluginIndex <= -1) {
           throw new Error(
             "EventPluginRegistry: Cannot inject event plugins that do not exist in " +
-              ("the plugin ordering, `" + pluginName + "`.")
+            ("the plugin ordering, `" + pluginName + "`.")
           );
         }
 
@@ -1866,7 +1873,7 @@ to return true:wantsResponderID|                            |
         if (!pluginModule.extractEvents) {
           throw new Error(
             "EventPluginRegistry: Event plugins must implement an `extractEvents` " +
-              ("method, but `" + pluginName + "` does not.")
+            ("method, but `" + pluginName + "` does not.")
           );
         }
 
@@ -1883,10 +1890,10 @@ to return true:wantsResponderID|                            |
           ) {
             throw new Error(
               "EventPluginRegistry: Failed to publish event `" +
-                eventName +
-                "` for plugin `" +
-                pluginName +
-                "`."
+              eventName +
+              "` for plugin `" +
+              pluginName +
+              "`."
             );
           }
         }
@@ -1905,7 +1912,7 @@ to return true:wantsResponderID|                            |
       if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
         throw new Error(
           "EventPluginRegistry: More than one plugin attempted to publish the same " +
-            ("event name, `" + eventName + "`.")
+          ("event name, `" + eventName + "`.")
         );
       }
 
@@ -1944,7 +1951,7 @@ to return true:wantsResponderID|                            |
       if (registrationNameModules[registrationName]) {
         throw new Error(
           "EventPluginRegistry: More than one plugin attempted to publish the same " +
-            ("registration name, `" + registrationName + "`.")
+          ("registration name, `" + registrationName + "`.")
         );
       }
 
@@ -1987,7 +1994,7 @@ to return true:wantsResponderID|                            |
       if (eventPluginOrder) {
         throw new Error(
           "EventPluginRegistry: Cannot inject event plugin ordering more than " +
-            "once. You are likely trying to load more than one copy of React."
+          "once. You are likely trying to load more than one copy of React."
         );
       } // Clone the ordering so it cannot be dynamically mutated.
       // $FlowFixMe[method-unbinding] found when upgrading Flow
@@ -2022,7 +2029,7 @@ to return true:wantsResponderID|                            |
           if (namesToPlugins[pluginName]) {
             throw new Error(
               "EventPluginRegistry: Cannot inject two different event plugins " +
-                ("using the same name, `" + pluginName + "`.")
+              ("using the same name, `" + pluginName + "`.")
             );
           }
 
@@ -2056,10 +2063,10 @@ to return true:wantsResponderID|                            |
       if (listener && typeof listener !== "function") {
         throw new Error(
           "Expected `" +
-            registrationName +
-            "` listener to be a function, instead got a value of `" +
-            typeof listener +
-            "` type."
+          registrationName +
+          "` listener to be a function, instead got a value of `" +
+          typeof listener +
+          "` type."
         );
       }
 
@@ -2067,8 +2074,8 @@ to return true:wantsResponderID|                            |
     }
 
     var customBubblingEventTypes =
-        ReactNativePrivateInterface.ReactNativeViewConfigRegistry
-          .customBubblingEventTypes,
+      ReactNativePrivateInterface.ReactNativeViewConfigRegistry
+        .customBubblingEventTypes,
       customDirectEventTypes =
         ReactNativePrivateInterface.ReactNativeViewConfigRegistry
           .customDirectEventTypes; // Start of inline: the below functions were inlined from
@@ -2132,7 +2139,7 @@ to return true:wantsResponderID|                            |
 
       var i;
 
-      for (i = path.length; i-- > 0; ) {
+      for (i = path.length; i-- > 0;) {
         fn(path[i], "captured", arg);
       }
 
@@ -2404,7 +2411,7 @@ to return true:wantsResponderID|                            |
       if (eventQueue) {
         throw new Error(
           "processEventQueue(): Additional events were enqueued while processing " +
-            "an event queue. Support for this has not yet been implemented."
+          "an event queue. Support for this has not yet been implemented."
         );
       } // This would be a good time to rethrow if any of the event handlers threw.
 
@@ -2598,7 +2605,7 @@ to return true:wantsResponderID|                            |
     function receiveTouches(eventTopLevelType, touches, changedIndices) {
       var changedTouches =
         eventTopLevelType === "topTouchEnd" ||
-        eventTopLevelType === "topTouchCancel"
+          eventTopLevelType === "topTouchCancel"
           ? removeTouchesAtIndices(touches, changedIndices)
           : touchSubsequence(touches, changedIndices);
 
@@ -2791,7 +2798,7 @@ to return true:wantsResponderID|                            |
           if (typeof type.tag === "number") {
             error(
               "Received an unexpected object in getComponentNameFromType(). " +
-                "This is likely a bug in React. Please file an issue."
+              "This is likely a bug in React. Please file an issue."
             );
           }
         }
@@ -3123,10 +3130,10 @@ to return true:wantsResponderID|                            |
           if (!instance._warnedAboutRefsInRender) {
             error(
               "%s is accessing isMounted inside its render() function. " +
-                "render() should be a pure function of props and state. It should " +
-                "never access something that requires stale data from the previous " +
-                "render, such as refs. Move this logic to componentDidMount and " +
-                "componentDidUpdate instead.",
+              "render() should be a pure function of props and state. It should " +
+              "never access something that requires stale data from the previous " +
+              "render, such as refs. Move this logic to componentDidMount and " +
+              "componentDidUpdate instead.",
               getComponentNameFromFiber(ownerFiber) || "A component"
             );
           }
@@ -3282,7 +3289,7 @@ to return true:wantsResponderID|                            |
             if (!didFindChild) {
               throw new Error(
                 "Child was not found in either parent set. This indicates a bug " +
-                  "in React related to the return pointer. Please file an issue."
+                "in React related to the return pointer. Please file an issue."
               );
             }
           }
@@ -3291,7 +3298,7 @@ to return true:wantsResponderID|                            |
         if (a.alternate !== b) {
           throw new Error(
             "Return fibers should always be each others' alternates. " +
-              "This error is likely caused by a bug in React. Please file an issue."
+            "This error is likely caused by a bug in React. Please file an issue."
           );
         }
       } // If the root is not a host container, we're in a disconnected tree. I.e.
@@ -3875,10 +3882,10 @@ to return true:wantsResponderID|                            |
           if (!(validAttributes[key] || props[key] === undefined)) {
             error(
               "You are setting the style `{ %s" +
-                ": ... }` as a prop. You " +
-                "should nest it in a style object. " +
-                "E.g. `{ style: { %s" +
-                ": ... } }`",
+              ": ... }` as a prop. You " +
+              "should nest it in a style object. " +
+              "E.g. `{ style: { %s" +
+              ": ... } }`",
               key,
               key
             );
@@ -4015,7 +4022,7 @@ to return true:wantsResponderID|                            |
     var prevGroupCollapsed;
     var prevGroupEnd;
 
-    function disabledLog() {}
+    function disabledLog() { }
 
     disabledLog.__reactDisabledLog = true;
     function disableLogs() {
@@ -4093,7 +4100,7 @@ to return true:wantsResponderID|                            |
         if (disabledDepth < 0) {
           error(
             "disabledDepth fell below zero. " +
-              "This is a bug in React. Please file an issue."
+            "This is a bug in React. Please file an issue."
           );
         }
       }
@@ -4123,8 +4130,8 @@ to return true:wantsResponderID|                            |
         {
           error(
             "The installed version of React DevTools is too old and will not work " +
-              "with the current version of React. Please update React DevTools. " +
-              "https://react.dev/link/react-devtools"
+            "with the current version of React. Please update React DevTools. " +
+            "https://react.dev/link/react-devtools"
           );
         } // DevTools exists, even though it doesn't support Fiber.
 
@@ -4267,7 +4274,7 @@ to return true:wantsResponderID|                            |
       }
     } // Profiler API hooks
 
-    function injectProfilingHooks(profilingHooks) {}
+    function injectProfilingHooks(profilingHooks) { }
 
     function getLaneLabelMap() {
       {
@@ -5186,8 +5193,8 @@ to return true:wantsResponderID|                            |
     function shim$1() {
       throw new Error(
         "The current renderer does not support hydration. " +
-          "This error is likely caused by a bug in React. " +
-          "Please file an issue."
+        "This error is likely caused by a bug in React. " +
+        "Please file an issue."
       );
     } // Hydration (when unsupported)
     var isSuspenseInstancePending = shim$1;
@@ -5203,8 +5210,8 @@ to return true:wantsResponderID|                            |
     function shim() {
       throw new Error(
         "The current renderer does not support Resources. " +
-          "This error is likely caused by a bug in React. " +
-          "Please file an issue."
+        "This error is likely caused by a bug in React. " +
+        "Please file an issue."
       );
     } // Resources (when unsupported)
     var suspendResource = shim;
@@ -5693,7 +5700,7 @@ to return true:wantsResponderID|                            |
         if (c === null) {
           error(
             "Expected host context to exist. This error is likely caused by a bug " +
-              "in React. Please file an issue."
+            "in React. Please file an issue."
           );
         }
       }
@@ -5765,7 +5772,7 @@ to return true:wantsResponderID|                            |
       {
         throw new Error(
           "Expected prepareToHydrateHostInstance() to never be called. " +
-            "This error is likely caused by a bug in React. Please file an issue."
+          "This error is likely caused by a bug in React. Please file an issue."
         );
       }
     }
@@ -5774,7 +5781,7 @@ to return true:wantsResponderID|                            |
       {
         throw new Error(
           "Expected prepareToHydrateHostTextInstance() to never be called. " +
-            "This error is likely caused by a bug in React. Please file an issue."
+          "This error is likely caused by a bug in React. Please file an issue."
         );
       }
     }
@@ -5783,7 +5790,7 @@ to return true:wantsResponderID|                            |
       {
         throw new Error(
           "Expected prepareToHydrateHostSuspenseInstance() to never be called. " +
-            "This error is likely caused by a bug in React. Please file an issue."
+          "This error is likely caused by a bug in React. Please file an issue."
         );
       }
     }
@@ -6578,9 +6585,9 @@ to return true:wantsResponderID|                            |
 
           error(
             "An update (setState, replaceState, or forceUpdate) was scheduled " +
-              "from inside an update function. Update functions should be pure, " +
-              "with zero side-effects. Consider using componentDidUpdate or a " +
-              "callback.\n\nPlease update the following component: %s",
+            "from inside an update function. Update functions should be pure, " +
+            "with zero side-effects. Consider using componentDidUpdate or a " +
+            "callback.\n\nPlease update the following component: %s",
             componentName
           );
 
@@ -7044,7 +7051,7 @@ to return true:wantsResponderID|                            |
       if (typeof callback !== "function") {
         throw new Error(
           "Invalid argument passed as callback. Expected a function. Instead " +
-            ("received: " + callback)
+          ("received: " + callback)
         );
       }
 
@@ -7323,11 +7330,11 @@ to return true:wantsResponderID|                            |
     }
 
     var ReactStrictModeWarnings = {
-      recordUnsafeLifecycleWarnings: function (fiber, instance) {},
-      flushPendingUnsafeLifecycleWarnings: function () {},
-      recordLegacyContextWarning: function (fiber, instance) {},
-      flushLegacyContextWarning: function () {},
-      discardPendingWarnings: function () {}
+      recordUnsafeLifecycleWarnings: function (fiber, instance) { },
+      flushPendingUnsafeLifecycleWarnings: function () { },
+      recordLegacyContextWarning: function (fiber, instance) { },
+      flushLegacyContextWarning: function () { },
+      discardPendingWarnings: function () { }
     };
 
     {
@@ -7389,7 +7396,7 @@ to return true:wantsResponderID|                            |
         if (
           typeof instance.componentWillReceiveProps === "function" &&
           instance.componentWillReceiveProps.__suppressDeprecationWarning !==
-            true
+          true
         ) {
           pendingComponentWillReceivePropsWarnings.push(fiber);
         }
@@ -7501,9 +7508,9 @@ to return true:wantsResponderID|                            |
 
             error(
               "Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. " +
-                "See https://react.dev/link/unsafe-component-lifecycles for details.\n\n" +
-                "* Move code with side effects to componentDidMount, and set initial state in the constructor.\n" +
-                "\nPlease update the following components: %s",
+              "See https://react.dev/link/unsafe-component-lifecycles for details.\n\n" +
+              "* Move code with side effects to componentDidMount, and set initial state in the constructor.\n" +
+              "\nPlease update the following components: %s",
               sortedNames
             );
           }
@@ -7515,13 +7522,13 @@ to return true:wantsResponderID|                            |
 
             error(
               "Using UNSAFE_componentWillReceiveProps in strict mode is not recommended " +
-                "and may indicate bugs in your code. " +
-                "See https://react.dev/link/unsafe-component-lifecycles for details.\n\n" +
-                "* Move data fetching code or side effects to componentDidUpdate.\n" +
-                "* If you're updating state whenever props change, " +
-                "refactor your code to use memoization techniques or move it to " +
-                "static getDerivedStateFromProps. Learn more at: https://react.dev/link/derived-state\n" +
-                "\nPlease update the following components: %s",
+              "and may indicate bugs in your code. " +
+              "See https://react.dev/link/unsafe-component-lifecycles for details.\n\n" +
+              "* Move data fetching code or side effects to componentDidUpdate.\n" +
+              "* If you're updating state whenever props change, " +
+              "refactor your code to use memoization techniques or move it to " +
+              "static getDerivedStateFromProps. Learn more at: https://react.dev/link/derived-state\n" +
+              "\nPlease update the following components: %s",
               _sortedNames
             );
           }
@@ -7533,10 +7540,10 @@ to return true:wantsResponderID|                            |
 
             error(
               "Using UNSAFE_componentWillUpdate in strict mode is not recommended " +
-                "and may indicate bugs in your code. " +
-                "See https://react.dev/link/unsafe-component-lifecycles for details.\n\n" +
-                "* Move data fetching code or side effects to componentDidUpdate.\n" +
-                "\nPlease update the following components: %s",
+              "and may indicate bugs in your code. " +
+              "See https://react.dev/link/unsafe-component-lifecycles for details.\n\n" +
+              "* Move data fetching code or side effects to componentDidUpdate.\n" +
+              "\nPlease update the following components: %s",
               _sortedNames2
             );
           }
@@ -7548,13 +7555,13 @@ to return true:wantsResponderID|                            |
 
             warn(
               "componentWillMount has been renamed, and is not recommended for use. " +
-                "See https://react.dev/link/unsafe-component-lifecycles for details.\n\n" +
-                "* Move code with side effects to componentDidMount, and set initial state in the constructor.\n" +
-                "* Rename componentWillMount to UNSAFE_componentWillMount to suppress " +
-                "this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. " +
-                "To rename all deprecated lifecycles to their new names, you can run " +
-                "`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n" +
-                "\nPlease update the following components: %s",
+              "See https://react.dev/link/unsafe-component-lifecycles for details.\n\n" +
+              "* Move code with side effects to componentDidMount, and set initial state in the constructor.\n" +
+              "* Rename componentWillMount to UNSAFE_componentWillMount to suppress " +
+              "this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. " +
+              "To rename all deprecated lifecycles to their new names, you can run " +
+              "`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n" +
+              "\nPlease update the following components: %s",
               _sortedNames3
             );
           }
@@ -7566,16 +7573,16 @@ to return true:wantsResponderID|                            |
 
             warn(
               "componentWillReceiveProps has been renamed, and is not recommended for use. " +
-                "See https://react.dev/link/unsafe-component-lifecycles for details.\n\n" +
-                "* Move data fetching code or side effects to componentDidUpdate.\n" +
-                "* If you're updating state whenever props change, refactor your " +
-                "code to use memoization techniques or move it to " +
-                "static getDerivedStateFromProps. Learn more at: https://react.dev/link/derived-state\n" +
-                "* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress " +
-                "this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. " +
-                "To rename all deprecated lifecycles to their new names, you can run " +
-                "`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n" +
-                "\nPlease update the following components: %s",
+              "See https://react.dev/link/unsafe-component-lifecycles for details.\n\n" +
+              "* Move data fetching code or side effects to componentDidUpdate.\n" +
+              "* If you're updating state whenever props change, refactor your " +
+              "code to use memoization techniques or move it to " +
+              "static getDerivedStateFromProps. Learn more at: https://react.dev/link/derived-state\n" +
+              "* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress " +
+              "this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. " +
+              "To rename all deprecated lifecycles to their new names, you can run " +
+              "`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n" +
+              "\nPlease update the following components: %s",
               _sortedNames4
             );
           }
@@ -7587,13 +7594,13 @@ to return true:wantsResponderID|                            |
 
             warn(
               "componentWillUpdate has been renamed, and is not recommended for use. " +
-                "See https://react.dev/link/unsafe-component-lifecycles for details.\n\n" +
-                "* Move data fetching code or side effects to componentDidUpdate.\n" +
-                "* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress " +
-                "this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. " +
-                "To rename all deprecated lifecycles to their new names, you can run " +
-                "`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n" +
-                "\nPlease update the following components: %s",
+              "See https://react.dev/link/unsafe-component-lifecycles for details.\n\n" +
+              "* Move data fetching code or side effects to componentDidUpdate.\n" +
+              "* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress " +
+              "this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. " +
+              "To rename all deprecated lifecycles to their new names, you can run " +
+              "`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n" +
+              "\nPlease update the following components: %s",
               _sortedNames5
             );
           }
@@ -7612,7 +7619,7 @@ to return true:wantsResponderID|                            |
         if (strictRoot === null) {
           error(
             "Expected to find a StrictMode component in a strict mode tree. " +
-              "This error is likely caused by a bug in React. Please file an issue."
+            "This error is likely caused by a bug in React. Please file an issue."
           );
 
           return;
@@ -7657,10 +7664,10 @@ to return true:wantsResponderID|                            |
 
             error(
               "Legacy context API has been detected within a strict-mode tree." +
-                "\n\nThe old API will be supported in all 16.x releases, but applications " +
-                "using it should migrate to the new version." +
-                "\n\nPlease update the following components: %s" +
-                "\n\nLearn more about this warning here: https://react.dev/link/legacy-context",
+              "\n\nThe old API will be supported in all 16.x releases, but applications " +
+              "using it should migrate to the new version." +
+              "\n\nPlease update the following components: %s" +
+              "\n\nLearn more about this warning here: https://react.dev/link/legacy-context",
               sortedNames
             );
           } finally {
@@ -7745,7 +7752,7 @@ to return true:wantsResponderID|                            |
         if (willCoercionThrow(value)) {
           error(
             "The provided key is an unsupported type %s." +
-              " This value must be coerced to a string before using it here.",
+            " This value must be coerced to a string before using it here.",
             typeName(value)
           );
 
@@ -7758,7 +7765,7 @@ to return true:wantsResponderID|                            |
         if (willCoercionThrow(value)) {
           error(
             "The provided `%s` prop is an unsupported type %s." +
-              " This value must be coerced to a string before using it here.",
+            " This value must be coerced to a string before using it here.",
             propName,
             typeName(value)
           );
@@ -7780,16 +7787,16 @@ to return true:wantsResponderID|                            |
 
     var SuspenseException = new Error(
       "Suspense Exception: This is not a real error! It's an implementation " +
-        "detail of `use` to interrupt the current render. You must either " +
-        "rethrow it immediately, or move the `use` call outside of the " +
-        "`try/catch` block. Capturing without rethrowing will lead to " +
-        "unexpected behavior.\n\n" +
-        "To handle async errors, wrap your component in an error boundary, or " +
-        "call the promise's `.catch` method and pass the result to `use`"
+      "detail of `use` to interrupt the current render. You must either " +
+      "rethrow it immediately, or move the `use` call outside of the " +
+      "`try/catch` block. Capturing without rethrowing will lead to " +
+      "unexpected behavior.\n\n" +
+      "To handle async errors, wrap your component in an error boundary, or " +
+      "call the promise's `.catch` method and pass the result to `use`"
     );
     var SuspenseyCommitException = new Error(
       "Suspense Exception: This is not a real error, and should not leak into " +
-        "userspace. If you're seeing this, it's likely a bug in React."
+      "userspace. If you're seeing this, it's likely a bug in React."
     ); // This is a noop thenable that we use to trigger a fallback in throwException.
     // TODO: It would be better to refactor throwException into multiple functions
     // so we can trigger a fallback directly without having to check the type. But
@@ -7800,7 +7807,7 @@ to return true:wantsResponderID|                            |
         {
           error(
             "Internal React error: A listener was unexpectedly attached to a " +
-              '"noop" thenable. This is a bug in React. Please file an issue.'
+            '"noop" thenable. This is a bug in React. Please file an issue.'
           );
         }
       }
@@ -7820,7 +7827,7 @@ to return true:wantsResponderID|                            |
       return status === "fulfilled" || status === "rejected";
     }
 
-    function noop() {}
+    function noop() { }
 
     function trackUsedThenable(thenableState, thenable, index) {
       if (ReactCurrentActQueue$2.current !== null) {
@@ -7859,8 +7866,8 @@ to return true:wantsResponderID|                            |
 
               error(
                 "A component was suspended by an uncached promise. Creating " +
-                  "promises inside a Client Component or hook is not yet " +
-                  "supported, except via a Suspense-compatible library or framework."
+                "promises inside a Client Component or hook is not yet " +
+                "supported, except via a Suspense-compatible library or framework."
               );
             }
           } // Avoid an unhandled rejection errors for the Promises that we'll
@@ -7917,9 +7924,9 @@ to return true:wantsResponderID|                            |
               // root into offscreen mode.
               throw new Error(
                 "async/await is not yet supported in Client Components, only " +
-                  "Server Components. This error is often caused by accidentally " +
-                  "adding `'use client'` to a module that was originally written " +
-                  "for the server."
+                "Server Components. This error is often caused by accidentally " +
+                "adding `'use client'` to a module that was originally written " +
+                "for the server."
               );
             }
 
@@ -7986,7 +7993,7 @@ to return true:wantsResponderID|                            |
       if (suspendedThenable === null) {
         throw new Error(
           "Expected a suspended thenable. This is a bug in React. Please file " +
-            "an issue."
+          "an issue."
         );
       }
 
@@ -8023,8 +8030,8 @@ to return true:wantsResponderID|                            |
       if (rejectedReason === SuspenseException) {
         throw new Error(
           "Hooks are not supported inside an async component. This " +
-            "error is often caused by accidentally adding `'use client'` " +
-            "to a module that was originally written for the server."
+          "error is often caused by accidentally adding `'use client'` " +
+          "to a module that was originally written for the server."
         );
       }
     }
@@ -8052,7 +8059,7 @@ to return true:wantsResponderID|                            |
     var ownerHasFunctionTypeWarning;
     var ownerHasSymbolTypeWarning;
 
-    var warnForMissingKey = function (child, returnFiber) {};
+    var warnForMissingKey = function (child, returnFiber) { };
 
     {
       didWarnAboutMaps = false;
@@ -8080,7 +8087,7 @@ to return true:wantsResponderID|                            |
         if (typeof child._store !== "object") {
           throw new Error(
             "React Component in warnForMissingKey should have a _store. " +
-              "This error is likely caused by a bug in React. Please file an issue."
+            "This error is likely caused by a bug in React. Please file an issue."
           );
         } // $FlowFixMe[cannot-write] unable to narrow type from mixed to writable object
 
@@ -8096,8 +8103,8 @@ to return true:wantsResponderID|                            |
 
         error(
           "Each child in a list should have a unique " +
-            '"key" prop. See https://react.dev/link/warning-keys for ' +
-            "more information."
+          '"key" prop. See https://react.dev/link/warning-keys for ' +
+          "more information."
         );
       };
     }
@@ -8133,22 +8140,22 @@ to return true:wantsResponderID|                            |
       if (!owner) {
         throw new Error(
           "Element ref was specified as a string (" +
-            stringRef +
-            ") but no owner was set. This could happen for one of" +
-            " the following reasons:\n" +
-            "1. You may be adding a ref to a function component\n" +
-            "2. You may be adding a ref to a component that was not created inside a component's render method\n" +
-            "3. You have multiple copies of React loaded\n" +
-            "See https://react.dev/link/refs-must-have-owner for more information."
+          stringRef +
+          ") but no owner was set. This could happen for one of" +
+          " the following reasons:\n" +
+          "1. You may be adding a ref to a function component\n" +
+          "2. You may be adding a ref to a component that was not created inside a component's render method\n" +
+          "3. You have multiple copies of React loaded\n" +
+          "See https://react.dev/link/refs-must-have-owner for more information."
         );
       }
 
       if (owner.tag !== ClassComponent) {
         throw new Error(
           "Function components cannot have string refs. " +
-            "We recommend using useRef() instead. " +
-            "Learn more about using refs safely here: " +
-            "https://react.dev/link/strict-mode-string-ref"
+          "We recommend using useRef() instead. " +
+          "Learn more about using refs safely here: " +
+          "https://react.dev/link/strict-mode-string-ref"
         );
       }
 
@@ -8163,10 +8170,10 @@ to return true:wantsResponderID|                            |
           if (!didWarnAboutStringRefs[componentName]) {
             error(
               'Component "%s" contains the string ref "%s". Support for string refs ' +
-                "will be removed in a future major release. We recommend using " +
-                "useRef() or createRef() instead. " +
-                "Learn more about using refs safely here: " +
-                "https://react.dev/link/strict-mode-string-ref",
+              "will be removed in a future major release. We recommend using " +
+              "useRef() or createRef() instead. " +
+              "Learn more about using refs safely here: " +
+              "https://react.dev/link/strict-mode-string-ref",
               componentName,
               stringRef
             );
@@ -8181,9 +8188,9 @@ to return true:wantsResponderID|                            |
       if (!inst) {
         throw new Error(
           "Missing owner for string ref " +
-            stringRef +
-            ". This error is likely caused by a " +
-            "bug in React. Please file an issue."
+          stringRef +
+          ". This error is likely caused by a " +
+          "bug in React. Please file an issue."
         );
       } // Check if previous string ref matches new string ref
 
@@ -8246,12 +8253,12 @@ to return true:wantsResponderID|                            |
       var childString = Object.prototype.toString.call(newChild);
       throw new Error(
         "Objects are not valid as a React child (found: " +
-          (childString === "[object Object]"
-            ? "object with keys {" + Object.keys(newChild).join(", ") + "}"
-            : childString) +
-          "). " +
-          "If you meant to render a collection of children, use an array " +
-          "instead."
+        (childString === "[object Object]"
+          ? "object with keys {" + Object.keys(newChild).join(", ") + "}"
+          : childString) +
+        "). " +
+        "If you meant to render a collection of children, use an array " +
+        "instead."
       );
     }
 
@@ -8269,9 +8276,9 @@ to return true:wantsResponderID|                            |
         if (returnFiber.tag === HostRoot) {
           error(
             "Functions are not valid as a React child. This may happen if " +
-              "you return %s instead of <%s /> from render. " +
-              "Or maybe you meant to call this function rather than return it.\n" +
-              "  root.render(%s)",
+            "you return %s instead of <%s /> from render. " +
+            "Or maybe you meant to call this function rather than return it.\n" +
+            "  root.render(%s)",
             name,
             name,
             name
@@ -8279,9 +8286,9 @@ to return true:wantsResponderID|                            |
         } else {
           error(
             "Functions are not valid as a React child. This may happen if " +
-              "you return %s instead of <%s /> from render. " +
-              "Or maybe you meant to call this function rather than return it.\n" +
-              "  <%s>{%s}</%s>",
+            "you return %s instead of <%s /> from render. " +
+            "Or maybe you meant to call this function rather than return it.\n" +
+            "  <%s>{%s}</%s>",
             name,
             name,
             parentName,
@@ -8994,10 +9001,10 @@ to return true:wantsResponderID|                            |
 
               error(
                 "Encountered two children with the same key, `%s`. " +
-                  "Keys should be unique so that components maintain their identity " +
-                  "across updates. Non-unique keys may cause children to be " +
-                  "duplicated and/or omitted — the behavior is unsupported and " +
-                  "could change in a future version.",
+                "Keys should be unique so that components maintain their identity " +
+                "across updates. Non-unique keys may cause children to be " +
+                "duplicated and/or omitted — the behavior is unsupported and " +
+                "could change in a future version.",
                 key
               );
 
@@ -9205,7 +9212,7 @@ to return true:wantsResponderID|                            |
         if (typeof iteratorFn !== "function") {
           throw new Error(
             "An object is not an iterable. This error is likely caused by a bug in " +
-              "React. Please file an issue."
+            "React. Please file an issue."
           );
         }
 
@@ -9219,10 +9226,10 @@ to return true:wantsResponderID|                            |
             if (!didWarnAboutGenerators) {
               error(
                 "Using Generators as children is unsupported and will likely yield " +
-                  "unexpected results because enumerating a generator mutates it. " +
-                  "You may convert it to an array with `Array.from()` or the " +
-                  "`[...spread]` operator before rendering. Keep in mind " +
-                  "you might need to polyfill these features for older browsers."
+                "unexpected results because enumerating a generator mutates it. " +
+                "You may convert it to an array with `Array.from()` or the " +
+                "`[...spread]` operator before rendering. Keep in mind " +
+                "you might need to polyfill these features for older browsers."
               );
             }
 
@@ -9233,7 +9240,7 @@ to return true:wantsResponderID|                            |
             if (!didWarnAboutMaps) {
               error(
                 "Using Maps as children is not supported. " +
-                  "Use an array of keyed ReactElements instead."
+                "Use an array of keyed ReactElements instead."
               );
             }
 
@@ -10133,7 +10140,7 @@ to return true:wantsResponderID|                            |
           // It's unlikely their type would change as usually you define them inline.
           error(
             "%s received a final argument that is not an array (instead, received `%s`). When " +
-              "specified, the final argument must be an array.",
+            "specified, the final argument must be an array.",
             currentHookNameInDev,
             typeof deps
           );
@@ -10171,12 +10178,12 @@ to return true:wantsResponderID|                            |
 
             error(
               "React has detected a change in the order of Hooks called by %s. " +
-                "This will lead to bugs and errors if not fixed. " +
-                "For more information, read the Rules of Hooks: https://react.dev/link/rules-of-hooks\n\n" +
-                "   Previous render            Next render\n" +
-                "   ------------------------------------------------------\n" +
-                "%s" +
-                "   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
+              "This will lead to bugs and errors if not fixed. " +
+              "For more information, read the Rules of Hooks: https://react.dev/link/rules-of-hooks\n\n" +
+              "   Previous render            Next render\n" +
+              "   ------------------------------------------------------\n" +
+              "%s" +
+              "   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
               componentName,
               table
             );
@@ -10207,9 +10214,9 @@ to return true:wantsResponderID|                            |
 
             error(
               "async/await is not yet supported in Client Components, only " +
-                "Server Components. This error is often caused by accidentally " +
-                "adding `'use client'` to a module that was originally written " +
-                "for the server."
+              "Server Components. This error is often caused by accidentally " +
+              "adding `'use client'` to a module that was originally written " +
+              "for the server."
             );
           }
         }
@@ -10219,11 +10226,11 @@ to return true:wantsResponderID|                            |
     function throwInvalidHookError() {
       throw new Error(
         "Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for" +
-          " one of the following reasons:\n" +
-          "1. You might have mismatching versions of React and the renderer (such as React DOM)\n" +
-          "2. You might be breaking the Rules of Hooks\n" +
-          "3. You might have more than one copy of React in the same app\n" +
-          "See https://react.dev/link/invalid-hook-call for tips about how to debug and fix this problem."
+        " one of the following reasons:\n" +
+        "1. You might have mismatching versions of React and the renderer (such as React DOM)\n" +
+        "2. You might be breaking the Rules of Hooks\n" +
+        "3. You might have more than one copy of React in the same app\n" +
+        "See https://react.dev/link/invalid-hook-call for tips about how to debug and fix this problem."
       );
     }
 
@@ -10239,8 +10246,8 @@ to return true:wantsResponderID|                            |
         {
           error(
             "%s received a final argument during this render, but not during " +
-              "the previous render. Even though the final argument is optional, " +
-              "its type cannot change between renders.",
+            "the previous render. Even though the final argument is optional, " +
+            "its type cannot change between renders.",
             currentHookNameInDev
           );
         }
@@ -10254,9 +10261,9 @@ to return true:wantsResponderID|                            |
         if (nextDeps.length !== prevDeps.length) {
           error(
             "The final argument passed to %s changed size between renders. The " +
-              "order and size of this array must remain constant.\n\n" +
-              "Previous: %s\n" +
-              "Incoming: %s",
+            "order and size of this array must remain constant.\n\n" +
+            "Previous: %s\n" +
+            "Incoming: %s",
             currentHookNameInDev,
             "[" + prevDeps.join(", ") + "]",
             "[" + nextDeps.join(", ") + "]"
@@ -10417,7 +10424,7 @@ to return true:wantsResponderID|                            |
         if (
           current !== null &&
           (current.flags & StaticMask) !==
-            (workInProgress.flags & StaticMask) && // Disable this warning in legacy mode, because legacy Suspense is weird
+          (workInProgress.flags & StaticMask) && // Disable this warning in legacy mode, because legacy Suspense is weird
           // and creates false positives. To make this work in legacy mode, we'd
           // need to mark fibers that commit in an incomplete state, somehow. For
           // now I'll disable the warning that most of the bugs that would trigger
@@ -10426,7 +10433,7 @@ to return true:wantsResponderID|                            |
         ) {
           error(
             "Internal React error: Expected static flag was missing. Please " +
-              "notify the React team."
+            "notify the React team."
           );
         }
       }
@@ -10440,7 +10447,7 @@ to return true:wantsResponderID|                            |
       if (didRenderTooFewHooks) {
         throw new Error(
           "Rendered fewer hooks than expected. This may be caused by an accidental " +
-            "early return statement."
+          "early return statement."
         );
       }
 
@@ -10459,8 +10466,8 @@ to return true:wantsResponderID|                            |
 
             error(
               "`use` was called from inside a try/catch block. This is not allowed " +
-                "and can lead to unexpected behavior. To handle errors triggered " +
-                "by `use`, wrap your component in a error boundary."
+              "and can lead to unexpected behavior. To handle errors triggered " +
+              "by `use`, wrap your component in a error boundary."
             );
           }
         }
@@ -10526,7 +10533,7 @@ to return true:wantsResponderID|                            |
         if (numberOfReRenders >= RE_RENDER_LIMIT) {
           throw new Error(
             "Too many re-renders. React limits the number of renders to prevent " +
-              "an infinite loop."
+            "an infinite loop."
           );
         }
 
@@ -10852,7 +10859,7 @@ to return true:wantsResponderID|                            |
             // the future if we implement resuming, or some form of that.
             error(
               "Internal error: Expected work-in-progress queue to be a clone. " +
-                "This is a bug in React."
+              "This is a bug in React."
             );
           }
         }
@@ -11484,7 +11491,7 @@ to return true:wantsResponderID|                            |
           if (!refObject.hasOwnProperty("current")) {
             error(
               "Expected useImperativeHandle() first argument to either be a " +
-                "ref callback or React.createRef() object. Instead received: %s.",
+              "ref callback or React.createRef() object. Instead received: %s.",
               "an object with keys {" + Object.keys(refObject).join(", ") + "}"
             );
           }
@@ -11504,7 +11511,7 @@ to return true:wantsResponderID|                            |
         if (typeof create !== "function") {
           error(
             "Expected useImperativeHandle() second argument to be a function " +
-              "that creates a handle. Instead received: %s.",
+            "that creates a handle. Instead received: %s.",
             create !== null ? typeof create : "null"
           );
         }
@@ -11531,7 +11538,7 @@ to return true:wantsResponderID|                            |
         if (typeof create !== "function") {
           error(
             "Expected useImperativeHandle() second argument to be a function " +
-              "that creates a handle. Instead received: %s.",
+            "that creates a handle. Instead received: %s.",
             create !== null ? typeof create : "null"
           );
         }
@@ -11770,8 +11777,8 @@ to return true:wantsResponderID|                            |
             if (updatedFibersCount > 10) {
               warn(
                 "Detected a large number of updates inside startTransition. " +
-                  "If this is due to a subscription please re-write it to use React provided hooks. " +
-                  "Otherwise concurrent mode guarantees are off the table."
+                "If this is due to a subscription please re-write it to use React provided hooks. " +
+                "Otherwise concurrent mode guarantees are off the table."
               );
             }
           }
@@ -11852,8 +11859,8 @@ to return true:wantsResponderID|                            |
         if (typeof arguments[3] === "function") {
           error(
             "State updates from the useState() and useReducer() Hooks don't support the " +
-              "second callback argument. To execute a side effect after " +
-              "rendering, declare it in the component body with useEffect()."
+            "second callback argument. To execute a side effect after " +
+            "rendering, declare it in the component body with useEffect()."
           );
         }
       }
@@ -11885,8 +11892,8 @@ to return true:wantsResponderID|                            |
         if (typeof arguments[3] === "function") {
           error(
             "State updates from the useState() and useReducer() Hooks don't support the " +
-              "second callback argument. To execute a side effect after " +
-              "rendering, declare it in the component body with useEffect()."
+            "second callback argument. To execute a side effect after " +
+            "rendering, declare it in the component body with useEffect()."
           );
         }
       }
@@ -12044,18 +12051,18 @@ to return true:wantsResponderID|                            |
       var warnInvalidContextAccess = function () {
         error(
           "Context can only be read while React is rendering. " +
-            "In classes, you can read it in the render method or getDerivedStateFromProps. " +
-            "In function components, you can read it directly in the function body, but not " +
-            "inside Hooks like useReducer() or useMemo()."
+          "In classes, you can read it in the render method or getDerivedStateFromProps. " +
+          "In function components, you can read it directly in the function body, but not " +
+          "inside Hooks like useReducer() or useMemo()."
         );
       };
 
       var warnInvalidHookAccess = function () {
         error(
           "Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. " +
-            "You can only call Hooks at the top level of your React function. " +
-            "For more information, see " +
-            "https://react.dev/link/rules-of-hooks"
+          "You can only call Hooks at the top level of your React function. " +
+          "For more information, see " +
+          "https://react.dev/link/rules-of-hooks"
         );
       };
 
@@ -13106,11 +13113,11 @@ to return true:wantsResponderID|                            |
         value: function () {
           throw new Error(
             "_processChildContext is not available in React 16+. This likely " +
-              "means you have multiple copies of React and are attempting to nest " +
-              "a React 15 tree inside a React 16 tree using " +
-              "unstable_renderSubtreeIntoContainer, which isn't supported. Try " +
-              "to make sure you have only one copy of React (and ideally, switch " +
-              "to ReactDOM.createPortal)."
+            "means you have multiple copies of React and are attempting to nest " +
+            "a React 15 tree inside a React 16 tree using " +
+            "unstable_renderSubtreeIntoContainer, which isn't supported. Try " +
+            "to make sure you have only one copy of React (and ideally, switch " +
+            "to ReactDOM.createPortal)."
           );
         }
       });
@@ -13130,7 +13137,7 @@ to return true:wantsResponderID|                            |
 
           error(
             "Expected the last optional `callback` argument to be a " +
-              "function. Instead received: %s.",
+            "function. Instead received: %s.",
             callback
           );
         }
@@ -13147,7 +13154,7 @@ to return true:wantsResponderID|                            |
 
             error(
               "%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. " +
-                "You have returned undefined.",
+              "You have returned undefined.",
               componentName
             );
           }
@@ -13300,7 +13307,7 @@ to return true:wantsResponderID|                            |
           if (shouldUpdate === undefined) {
             error(
               "%s.shouldComponentUpdate(): Returned undefined instead of a " +
-                "boolean value. Make sure to return true or false.",
+              "boolean value. Make sure to return true or false.",
               getComponentNameFromType(ctor) || "Component"
             );
           }
@@ -13329,13 +13336,13 @@ to return true:wantsResponderID|                            |
           if (ctor.prototype && typeof ctor.prototype.render === "function") {
             error(
               "No `render` method found on the %s " +
-                "instance: did you accidentally return an object from the constructor?",
+              "instance: did you accidentally return an object from the constructor?",
               name
             );
           } else {
             error(
               "No `render` method found on the %s " +
-                "instance: you may have forgotten to define `render`.",
+              "instance: you may have forgotten to define `render`.",
               name
             );
           }
@@ -13348,8 +13355,8 @@ to return true:wantsResponderID|                            |
         ) {
           error(
             "getInitialState was defined on %s, a plain JavaScript class. " +
-              "This is only supported for classes created using React.createClass. " +
-              "Did you mean to define a state property instead?",
+            "This is only supported for classes created using React.createClass. " +
+            "Did you mean to define a state property instead?",
             name
           );
         }
@@ -13360,8 +13367,8 @@ to return true:wantsResponderID|                            |
         ) {
           error(
             "getDefaultProps was defined on %s, a plain JavaScript class. " +
-              "This is only supported for classes created using React.createClass. " +
-              "Use a static property to define defaultProps instead.",
+            "This is only supported for classes created using React.createClass. " +
+            "Use a static property to define defaultProps instead.",
             name
           );
         }
@@ -13369,7 +13376,7 @@ to return true:wantsResponderID|                            |
         if (instance.propTypes) {
           error(
             "propTypes was defined as an instance property on %s. Use a static " +
-              "property to define propTypes instead.",
+            "property to define propTypes instead.",
             name
           );
         }
@@ -13377,7 +13384,7 @@ to return true:wantsResponderID|                            |
         if (instance.contextType) {
           error(
             "contextType was defined as an instance property on %s. Use a static " +
-              "property to define contextType instead.",
+            "property to define contextType instead.",
             name
           );
         }
@@ -13386,7 +13393,7 @@ to return true:wantsResponderID|                            |
           if (ctor.childContextTypes) {
             error(
               "%s uses the legacy childContextTypes API which is no longer supported. " +
-                "Use React.createContext() instead.",
+              "Use React.createContext() instead.",
               name
             );
           }
@@ -13394,7 +13401,7 @@ to return true:wantsResponderID|                            |
           if (ctor.contextTypes) {
             error(
               "%s uses the legacy contextTypes API which is no longer supported. " +
-                "Use React.createContext() with static contextType instead.",
+              "Use React.createContext() with static contextType instead.",
               name
             );
           }
@@ -13403,9 +13410,9 @@ to return true:wantsResponderID|                            |
         if (typeof instance.componentShouldUpdate === "function") {
           error(
             "%s has a method called " +
-              "componentShouldUpdate(). Did you mean shouldComponentUpdate()? " +
-              "The name is phrased as a question because the function is " +
-              "expected to return a value.",
+            "componentShouldUpdate(). Did you mean shouldComponentUpdate()? " +
+            "The name is phrased as a question because the function is " +
+            "expected to return a value.",
             name
           );
         }
@@ -13417,8 +13424,8 @@ to return true:wantsResponderID|                            |
         ) {
           error(
             "%s has a method called shouldComponentUpdate(). " +
-              "shouldComponentUpdate should not be used when extending React.PureComponent. " +
-              "Please extend React.Component if shouldComponentUpdate is used.",
+            "shouldComponentUpdate should not be used when extending React.PureComponent. " +
+            "Please extend React.Component if shouldComponentUpdate is used.",
             getComponentNameFromType(ctor) || "A pure component"
           );
         }
@@ -13426,8 +13433,8 @@ to return true:wantsResponderID|                            |
         if (typeof instance.componentDidUnmount === "function") {
           error(
             "%s has a method called " +
-              "componentDidUnmount(). But there is no such lifecycle method. " +
-              "Did you mean componentWillUnmount()?",
+            "componentDidUnmount(). But there is no such lifecycle method. " +
+            "Did you mean componentWillUnmount()?",
             name
           );
         }
@@ -13435,10 +13442,10 @@ to return true:wantsResponderID|                            |
         if (typeof instance.componentDidReceiveProps === "function") {
           error(
             "%s has a method called " +
-              "componentDidReceiveProps(). But there is no such lifecycle method. " +
-              "If you meant to update the state in response to changing props, " +
-              "use componentWillReceiveProps(). If you meant to fetch data or " +
-              "run side-effects or mutations after React has updated the UI, use componentDidUpdate().",
+            "componentDidReceiveProps(). But there is no such lifecycle method. " +
+            "If you meant to update the state in response to changing props, " +
+            "use componentWillReceiveProps(). If you meant to fetch data or " +
+            "run side-effects or mutations after React has updated the UI, use componentDidUpdate().",
             name
           );
         }
@@ -13446,7 +13453,7 @@ to return true:wantsResponderID|                            |
         if (typeof instance.componentWillRecieveProps === "function") {
           error(
             "%s has a method called " +
-              "componentWillRecieveProps(). Did you mean componentWillReceiveProps()?",
+            "componentWillRecieveProps(). Did you mean componentWillReceiveProps()?",
             name
           );
         }
@@ -13454,7 +13461,7 @@ to return true:wantsResponderID|                            |
         if (typeof instance.UNSAFE_componentWillRecieveProps === "function") {
           error(
             "%s has a method called " +
-              "UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?",
+            "UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?",
             name
           );
         }
@@ -13464,7 +13471,7 @@ to return true:wantsResponderID|                            |
         if (instance.props !== undefined && hasMutatedProps) {
           error(
             "When calling super() in `%s`, make sure to pass " +
-              "up the same props that your component's constructor was passed.",
+            "up the same props that your component's constructor was passed.",
             name
           );
         }
@@ -13472,7 +13479,7 @@ to return true:wantsResponderID|                            |
         if (instance.defaultProps) {
           error(
             "Setting defaultProps as an instance property on %s is not supported and will be ignored." +
-              " Instead, define defaultProps as a static property on %s.",
+            " Instead, define defaultProps as a static property on %s.",
             name,
             name
           );
@@ -13487,7 +13494,7 @@ to return true:wantsResponderID|                            |
 
           error(
             "%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). " +
-              "This component defines getSnapshotBeforeUpdate() only.",
+            "This component defines getSnapshotBeforeUpdate() only.",
             getComponentNameFromType(ctor)
           );
         }
@@ -13495,7 +13502,7 @@ to return true:wantsResponderID|                            |
         if (typeof instance.getDerivedStateFromProps === "function") {
           error(
             "%s: getDerivedStateFromProps() is defined as an instance method " +
-              "and will be ignored. Instead, declare it as a static method.",
+            "and will be ignored. Instead, declare it as a static method.",
             name
           );
         }
@@ -13503,7 +13510,7 @@ to return true:wantsResponderID|                            |
         if (typeof instance.getDerivedStateFromError === "function") {
           error(
             "%s: getDerivedStateFromError() is defined as an instance method " +
-              "and will be ignored. Instead, declare it as a static method.",
+            "and will be ignored. Instead, declare it as a static method.",
             name
           );
         }
@@ -13511,7 +13518,7 @@ to return true:wantsResponderID|                            |
         if (typeof ctor.getSnapshotBeforeUpdate === "function") {
           error(
             "%s: getSnapshotBeforeUpdate() is defined as a static method " +
-              "and will be ignored. Instead, declare it as an instance method.",
+            "and will be ignored. Instead, declare it as an instance method.",
             name
           );
         }
@@ -13528,7 +13535,7 @@ to return true:wantsResponderID|                            |
         ) {
           error(
             "%s.getChildContext(): childContextTypes must be defined in order to " +
-              "use getChildContext().",
+            "use getChildContext().",
             name
           );
         }
@@ -13581,7 +13588,7 @@ to return true:wantsResponderID|                            |
 
             error(
               "%s defines an invalid contextType. " +
-                "contextType should point to the Context object returned by React.createContext().%s",
+              "contextType should point to the Context object returned by React.createContext().%s",
               getComponentNameFromType(ctor) || "Component",
               addendum
             );
@@ -13625,9 +13632,9 @@ to return true:wantsResponderID|                            |
 
             error(
               "`%s` uses `getDerivedStateFromProps` but its initial state is " +
-                "%s. This is not recommended. Instead, define the initial state by " +
-                "assigning an object to `this.state` in the constructor of `%s`. " +
-                "This ensures that `getDerivedStateFromProps` arguments have a consistent shape.",
+              "%s. This is not recommended. Instead, define the initial state by " +
+              "assigning an object to `this.state` in the constructor of `%s`. " +
+              "This ensures that `getDerivedStateFromProps` arguments have a consistent shape.",
               componentName,
               instance.state === null ? "null" : "undefined",
               componentName
@@ -13657,7 +13664,7 @@ to return true:wantsResponderID|                            |
           if (
             typeof instance.componentWillReceiveProps === "function" &&
             instance.componentWillReceiveProps.__suppressDeprecationWarning !==
-              true
+            true
           ) {
             foundWillReceivePropsName = "componentWillReceiveProps";
           } else if (
@@ -13696,9 +13703,9 @@ to return true:wantsResponderID|                            |
 
               error(
                 "Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n" +
-                  "%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\n" +
-                  "The above lifecycles should be removed. Learn more about this warning here:\n" +
-                  "https://react.dev/link/unsafe-component-lifecycles",
+                "%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\n" +
+                "The above lifecycles should be removed. Learn more about this warning here:\n" +
+                "https://react.dev/link/unsafe-component-lifecycles",
                 _componentName,
                 newApiName,
                 foundWillMountName !== null ? "\n  " + foundWillMountName : "",
@@ -13730,8 +13737,8 @@ to return true:wantsResponderID|                            |
         {
           error(
             "%s.componentWillMount(): Assigning directly to this.state is " +
-              "deprecated (except inside a component's " +
-              "constructor). Use setState instead.",
+            "deprecated (except inside a component's " +
+            "constructor). Use setState instead.",
             getComponentNameFromFiber(workInProgress) || "Component"
           );
         }
@@ -13770,8 +13777,8 @@ to return true:wantsResponderID|                            |
 
             error(
               "%s.componentWillReceiveProps(): Assigning directly to " +
-                "this.state is deprecated (except inside a component's " +
-                "constructor). Use setState instead.",
+              "this.state is deprecated (except inside a component's " +
+              "constructor). Use setState instead.",
               componentName
             );
           }
@@ -13812,8 +13819,8 @@ to return true:wantsResponderID|                            |
 
             error(
               "%s: It is not recommended to assign props directly to state " +
-                "because updates to props won't be reflected in state. " +
-                "In most cases, it is better to use props directly.",
+              "because updates to props won't be reflected in state. " +
+              "In most cases, it is better to use props directly.",
               componentName
             );
           }
@@ -14262,8 +14269,8 @@ to return true:wantsResponderID|                            |
           var componentName = source ? getComponentNameFromFiber(source) : null;
           var componentNameMessage = componentName
             ? "The above error occurred in the <" +
-              componentName +
-              "> component:"
+            componentName +
+            "> component:"
             : "The above error occurred in one of your React components:";
           var errorBoundaryMessage;
 
@@ -14376,7 +14383,7 @@ to return true:wantsResponderID|                            |
               if (!includesSomeLane(fiber.lanes, SyncLane)) {
                 error(
                   "%s: Error boundaries should implement getDerivedStateFromError(). " +
-                    "In that method, return a state update to display an error message or fallback UI.",
+                  "In that method, return a state update to display an error message or fallback UI.",
                   getComponentNameFromFiber(fiber) || "Unknown"
                 );
               }
@@ -14677,9 +14684,9 @@ to return true:wantsResponderID|                            |
 
             throw new Error(
               "Unexpected Suspense handler tag (" +
-                suspenseBoundary.tag +
-                "). This " +
-                "is a bug in React."
+              suspenseBoundary.tag +
+              "). This " +
+              "is a bug in React."
             );
           } else {
             // No boundary was found. Unless this is a sync update, this is OK.
@@ -14698,9 +14705,9 @@ to return true:wantsResponderID|                            |
               // In a legacy root, suspending without a boundary is always an error.
               var uncaughtSuspenseError = new Error(
                 "A component suspended while responding to synchronous input. This " +
-                  "will cause the UI to be replaced with a loading indicator. To " +
-                  "fix, updates that suspend should be wrapped " +
-                  "with startTransition."
+                "will cause the UI to be replaced with a loading indicator. To " +
+                "fix, updates that suspend should be wrapped " +
+                "with startTransition."
               );
               value = uncaughtSuspenseError;
             }
@@ -14780,8 +14787,8 @@ to return true:wantsResponderID|                            |
 
     var SelectiveHydrationException = new Error(
       "This is not a real error. It's an implementation detail of React's " +
-        "selective hydration feature. If this leaks into userspace, it's a bug in " +
-        "React. Please file an issue."
+      "selective hydration feature. If this leaks into userspace, it's a bug in " +
+      "React. Please file an issue."
     );
     var didReceiveUpdate = false;
     var didWarnAboutBadClass;
@@ -14965,7 +14972,7 @@ to return true:wantsResponderID|                            |
             if (!didWarnAboutDefaultPropsOnFunctionComponent[componentName]) {
               error(
                 "%s: Support for defaultProps will be removed from memo components " +
-                  "in a future major release. Use JavaScript default parameters instead.",
+                "in a future major release. Use JavaScript default parameters instead.",
                 componentName
               );
 
@@ -15467,7 +15474,7 @@ to return true:wantsResponderID|                            |
           if (!didWarnAboutReassigningProps) {
             error(
               "It looks like %s is reassigning its own `this.props` while rendering. " +
-                "This is not supported and can lead to confusing bugs.",
+              "This is not supported and can lead to confusing bugs.",
               getComponentNameFromFiber(workInProgress) || "a component"
             );
           }
@@ -15722,9 +15729,9 @@ to return true:wantsResponderID|                            |
 
       throw new Error(
         "Element type is invalid. Received a promise that resolves to: " +
-          Component +
-          ". " +
-          ("Lazy element type must resolve to a class or function." + hint)
+        Component +
+        ". " +
+        ("Lazy element type must resolve to a class or function." + hint)
       );
     }
 
@@ -15786,7 +15793,7 @@ to return true:wantsResponderID|                            |
           if (!didWarnAboutBadClass[componentName]) {
             error(
               "The <%s /> component appears to have a render method, but doesn't extend React.Component. " +
-                "This is likely to cause errors. Change %s to extend React.Component instead.",
+              "This is likely to cause errors. Change %s to extend React.Component instead.",
               componentName,
               componentName
             );
@@ -15831,10 +15838,10 @@ to return true:wantsResponderID|                            |
           if (!didWarnAboutModulePatternComponent[_componentName]) {
             error(
               "The <%s /> component appears to be a function component that returns a class instance. " +
-                "Change %s to a class that extends React.Component instead. " +
-                "If you can't use a class try assigning the prototype on the function as a workaround. " +
-                "`%s.prototype = React.Component.prototype`. Don't use an arrow function since it " +
-                "cannot be called with `new` by React.",
+              "Change %s to a class that extends React.Component instead. " +
+              "If you can't use a class try assigning the prototype on the function as a workaround. " +
+              "`%s.prototype = React.Component.prototype`. Don't use an arrow function since it " +
+              "cannot be called with `new` by React.",
               _componentName,
               _componentName,
               _componentName
@@ -15860,10 +15867,10 @@ to return true:wantsResponderID|                            |
           if (!didWarnAboutModulePatternComponent[_componentName2]) {
             error(
               "The <%s /> component appears to be a function component that returns a class instance. " +
-                "Change %s to a class that extends React.Component instead. " +
-                "If you can't use a class try assigning the prototype on the function as a workaround. " +
-                "`%s.prototype = React.Component.prototype`. Don't use an arrow function since it " +
-                "cannot be called with `new` by React.",
+              "Change %s to a class that extends React.Component instead. " +
+              "If you can't use a class try assigning the prototype on the function as a workaround. " +
+              "`%s.prototype = React.Component.prototype`. Don't use an arrow function since it " +
+              "cannot be called with `new` by React.",
               _componentName2,
               _componentName2,
               _componentName2
@@ -15911,7 +15918,7 @@ to return true:wantsResponderID|                            |
           if (Component.contextTypes) {
             error(
               "%s uses the legacy contextTypes API which is no longer supported. " +
-                "Use React.createContext() with React.useContext() instead.",
+              "Use React.createContext() with React.useContext() instead.",
               getComponentNameFromType(Component) || "Unknown"
             );
           }
@@ -15933,7 +15940,7 @@ to return true:wantsResponderID|                            |
           if (Component.childContextTypes) {
             error(
               "childContextTypes cannot be defined on a function component.\n" +
-                "  %s.childContextTypes = ...",
+              "  %s.childContextTypes = ...",
               Component.displayName || Component.name || "Component"
             );
           }
@@ -15955,8 +15962,8 @@ to return true:wantsResponderID|                            |
 
             error(
               "Function components cannot be given refs. " +
-                "Attempts to access this ref will fail. " +
-                "Did you mean to use React.forwardRef()?%s",
+              "Attempts to access this ref will fail. " +
+              "Did you mean to use React.forwardRef()?%s",
               info
             );
           }
@@ -15969,7 +15976,7 @@ to return true:wantsResponderID|                            |
           if (!didWarnAboutDefaultPropsOnFunctionComponent[_componentName3]) {
             error(
               "%s: Support for defaultProps will be removed from function components " +
-                "in a future major release. Use JavaScript default parameters instead.",
+              "in a future major release. Use JavaScript default parameters instead.",
               _componentName3
             );
 
@@ -16561,8 +16568,8 @@ to return true:wantsResponderID|                            |
             } else {
               error = new Error(
                 "The server could not finish this Suspense boundary, likely " +
-                  "due to an error during server rendering. Switched to " +
-                  "client rendering."
+                "due to an error during server rendering. Switched to " +
+                "client rendering."
               );
             }
 
@@ -16680,7 +16687,7 @@ to return true:wantsResponderID|                            |
           var _capturedValue = createCapturedValueFromError(
             new Error(
               "There was an error while hydrating this Suspense boundary. " +
-                "Switched to client rendering."
+              "Switched to client rendering."
             )
           );
 
@@ -16833,7 +16840,7 @@ to return true:wantsResponderID|                            |
               case "backwards": {
                 error(
                   '"%s" is not a valid value for revealOrder on <SuspenseList />. ' +
-                    'Use lowercase "%s" instead.',
+                  'Use lowercase "%s" instead.',
                   revealOrder,
                   revealOrder.toLowerCase()
                 );
@@ -16845,7 +16852,7 @@ to return true:wantsResponderID|                            |
               case "backward": {
                 error(
                   '"%s" is not a valid value for revealOrder on <SuspenseList />. ' +
-                    'React uses the -s suffix in the spelling. Use "%ss" instead.',
+                  'React uses the -s suffix in the spelling. Use "%ss" instead.',
                   revealOrder,
                   revealOrder.toLowerCase()
                 );
@@ -16856,7 +16863,7 @@ to return true:wantsResponderID|                            |
               default:
                 error(
                   '"%s" is not a supported revealOrder on <SuspenseList />. ' +
-                    'Did you mean "together", "forwards" or "backwards"?',
+                  'Did you mean "together", "forwards" or "backwards"?',
                   revealOrder
                 );
 
@@ -16865,7 +16872,7 @@ to return true:wantsResponderID|                            |
           } else {
             error(
               "%s is not a supported value for revealOrder on <SuspenseList />. " +
-                'Did you mean "together", "forwards" or "backwards"?',
+              'Did you mean "together", "forwards" or "backwards"?',
               revealOrder
             );
           }
@@ -16881,7 +16888,7 @@ to return true:wantsResponderID|                            |
 
             error(
               '"%s" is not a supported value for tail on <SuspenseList />. ' +
-                'Did you mean "collapsed" or "hidden"?',
+              'Did you mean "collapsed" or "hidden"?',
               tailMode
             );
           } else if (
@@ -16892,8 +16899,8 @@ to return true:wantsResponderID|                            |
 
             error(
               '<SuspenseList tail="%s" /> is only valid if revealOrder is ' +
-                '"forwards" or "backwards". ' +
-                'Did you mean to specify revealOrder="forwards"?',
+              '"forwards" or "backwards". ' +
+              'Did you mean to specify revealOrder="forwards"?',
               tailMode
             );
           }
@@ -16912,10 +16919,10 @@ to return true:wantsResponderID|                            |
 
           error(
             "A nested %s was passed to row #%s in <SuspenseList />. Wrap it in " +
-              "an additional SuspenseList to configure its revealOrder: " +
-              "<SuspenseList revealOrder=...> ... " +
-              "<SuspenseList revealOrder=...>{%s}</SuspenseList> ... " +
-              "</SuspenseList>",
+            "an additional SuspenseList to configure its revealOrder: " +
+            "<SuspenseList revealOrder=...> ... " +
+            "<SuspenseList revealOrder=...>{%s}</SuspenseList> ... " +
+            "</SuspenseList>",
             type,
             index,
             type
@@ -16963,8 +16970,8 @@ to return true:wantsResponderID|                            |
             } else {
               error(
                 'A single row was passed to a <SuspenseList revealOrder="%s" />. ' +
-                  "This is not useful since it needs multiple rows. " +
-                  "Did you mean to pass multiple children or an array?",
+                "This is not useful since it needs multiple rows. " +
+                "Did you mean to pass multiple children or an array?",
                 revealOrder
               );
             }
@@ -17239,9 +17246,9 @@ to return true:wantsResponderID|                            |
         if (typeof render !== "function") {
           error(
             "A context consumer was rendered with multiple children, or a child " +
-              "that isn't a function. A context consumer expects a single child " +
-              "that is a function. If you did pass a function, make sure there " +
-              "is no trailing or leading whitespace around it."
+            "that isn't a function. A context consumer expects a single child " +
+            "that is a function. If you did pass a function, make sure there " +
+            "is no trailing or leading whitespace around it."
           );
         }
       }
@@ -17828,9 +17835,9 @@ to return true:wantsResponderID|                            |
 
       throw new Error(
         "Unknown unit of work tag (" +
-          workInProgress.tag +
-          "). This error is likely caused by a bug in " +
-          "React. Please file an issue."
+        workInProgress.tag +
+        "). This error is likely caused by a bug in " +
+        "React. Please file an issue."
       );
     }
 
@@ -17888,7 +17895,7 @@ to return true:wantsResponderID|                            |
           ) {
             error(
               "Detected multiple renderers concurrently rendering the " +
-                "same context provider. This is currently unsupported."
+              "same context provider. This is currently unsupported."
             );
           }
 
@@ -17949,7 +17956,7 @@ to return true:wantsResponderID|                            |
         if (node !== propagationRoot) {
           error(
             "Expected to find the propagation root when scheduling context work. " +
-              "This error is likely caused by a bug in React. Please file an issue."
+            "This error is likely caused by a bug in React. Please file an issue."
           );
         }
       }
@@ -18129,9 +18136,9 @@ to return true:wantsResponderID|                            |
         if (isDisallowedContextReadInDEV) {
           error(
             "Context can only be read while React is rendering. " +
-              "In classes, you can read it in the render method or getDerivedStateFromProps. " +
-              "In function components, you can read it directly in the function body, but not " +
-              "inside Hooks like useReducer() or useMemo()."
+            "In classes, you can read it in the render method or getDerivedStateFromProps. " +
+            "In function components, you can read it directly in the function body, but not " +
+            "inside Hooks like useReducer() or useMemo()."
           );
         }
       }
@@ -18161,9 +18168,9 @@ to return true:wantsResponderID|                            |
           if (consumer === null) {
             throw new Error(
               "Context can only be read while React is rendering. " +
-                "In classes, you can read it in the render method or getDerivedStateFromProps. " +
-                "In function components, you can read it directly in the function body, but not " +
-                "inside Hooks like useReducer() or useMemo()."
+              "In classes, you can read it in the render method or getDerivedStateFromProps. " +
+              "In function components, you can read it directly in the function body, but not " +
+              "inside Hooks like useReducer() or useMemo()."
             );
           } // This is the first dependency for this component. Create a new list.
 
@@ -18195,7 +18202,7 @@ to return true:wantsResponderID|                            |
       return transition;
     }
 
-    function handleAsyncAction(transition, thenable) {}
+    function handleAsyncAction(transition, thenable) { }
 
     function notifyTransitionCallbacks(transition, returnValue) {
       var callbacks = transition._callbacks;
@@ -18538,7 +18545,7 @@ to return true:wantsResponderID|                            |
           if (!wasHydrated) {
             throw new Error(
               "A dehydrated suspense component was completed without a hydrated node. " +
-                "This is probably a bug in React."
+              "This is probably a bug in React."
             );
           }
 
@@ -18608,7 +18615,12 @@ to return true:wantsResponderID|                            |
 
     function completeWork(current, workInProgress, renderLanes) {
       var newProps = workInProgress.pendingProps; // Note: This intentionally doesn't check if we're hydrating because comparing
-
+      if (workInProgress.flags & 1 && (workInProgress.type?.displayName || workInProgress.type?.name) !== "View")
+        insertUpdateComponents(
+          defrost.getComponentNameFromFiber(workInProgress),
+          workInProgress.flags,
+          workInProgress.key,
+        );
       switch (workInProgress.tag) {
         case IndeterminateComponent:
         case LazyComponent:
@@ -18690,7 +18702,7 @@ to return true:wantsResponderID|                            |
               if (workInProgress.stateNode === null) {
                 throw new Error(
                   "We must have new props for new mounts. This error is likely " +
-                    "caused by a bug in React. Please file an issue."
+                  "caused by a bug in React. Please file an issue."
                 );
               } // This can happen when we abort work.
 
@@ -18754,7 +18766,7 @@ to return true:wantsResponderID|                            |
               if (workInProgress.stateNode === null) {
                 throw new Error(
                   "We must have new props for new mounts. This error is likely " +
-                    "caused by a bug in React. Please file an issue."
+                  "caused by a bug in React. Please file an issue."
                 );
               } // This can happen when we abort work.
             }
@@ -19032,7 +19044,7 @@ to return true:wantsResponderID|                            |
                 // time we have to render. So rendering one more row would likely
                 // exceed it.
                 now$1() * 2 - renderState.renderingStartTime >
-                  getRenderTargetTime() &&
+                getRenderTargetTime() &&
                 renderLanes !== OffscreenLane
               ) {
                 // We have now passed our CPU deadline and we'll just give up further
@@ -19177,9 +19189,9 @@ to return true:wantsResponderID|                            |
 
       throw new Error(
         "Unknown unit of work tag (" +
-          workInProgress.tag +
-          "). This error is likely caused by a bug in " +
-          "React. Please file an issue."
+        workInProgress.tag +
+        "). This error is likely caused by a bug in " +
+        "React. Please file an issue."
       );
     }
 
@@ -19234,7 +19246,7 @@ to return true:wantsResponderID|                            |
             if (workInProgress.alternate === null) {
               throw new Error(
                 "Threw in newly mounted dehydrated component. This is likely a bug in " +
-                  "React. Please file an issue."
+                "React. Please file an issue."
               );
             }
           }
@@ -19461,7 +19473,7 @@ to return true:wantsResponderID|                            |
             if (typeof retVal === "function") {
               error(
                 "Unexpected return value from a callback ref in %s. " +
-                  "A callback ref should not return a function.",
+                "A callback ref should not return a function.",
                 getComponentNameFromFiber(current)
               );
             }
@@ -19567,10 +19579,10 @@ to return true:wantsResponderID|                            |
                   if (instance.props !== finishedWork.memoizedProps) {
                     error(
                       "Expected %s props to match memoized props before " +
-                        "getSnapshotBeforeUpdate. " +
-                        "This might either be because of a bug in React, or because " +
-                        "a component reassigns its own `this.props`. " +
-                        "Please file an issue.",
+                      "getSnapshotBeforeUpdate. " +
+                      "This might either be because of a bug in React, or because " +
+                      "a component reassigns its own `this.props`. " +
+                      "Please file an issue.",
                       getComponentNameFromFiber(finishedWork) || "instance"
                     );
                   }
@@ -19578,10 +19590,10 @@ to return true:wantsResponderID|                            |
                   if (instance.state !== finishedWork.memoizedState) {
                     error(
                       "Expected %s state to match memoized state before " +
-                        "getSnapshotBeforeUpdate. " +
-                        "This might either be because of a bug in React, or because " +
-                        "a component reassigns its own `this.state`. " +
-                        "Please file an issue.",
+                      "getSnapshotBeforeUpdate. " +
+                      "This might either be because of a bug in React, or because " +
+                      "a component reassigns its own `this.state`. " +
+                      "Please file an issue.",
                       getComponentNameFromFiber(finishedWork) || "instance"
                     );
                   }
@@ -19606,7 +19618,7 @@ to return true:wantsResponderID|                            |
 
                   error(
                     "%s.getSnapshotBeforeUpdate(): A snapshot value (or null) " +
-                      "must be returned. You have returned undefined.",
+                    "must be returned. You have returned undefined.",
                     getComponentNameFromFiber(finishedWork)
                   );
                 }
@@ -19636,7 +19648,7 @@ to return true:wantsResponderID|                            |
           if ((flags & Snapshot) !== NoFlags$1) {
             throw new Error(
               "This unit of work tag should not have side-effects. This error is " +
-                "likely caused by a bug in React. Please file an issue."
+              "likely caused by a bug in React. Please file an issue."
             );
           }
         }
@@ -19758,7 +19770,7 @@ to return true:wantsResponderID|                            |
 
                 error(
                   "%s must not return anything besides a function, " +
-                    "which is used for clean-up.%s",
+                  "which is used for clean-up.%s",
                   hookName,
                   addendum
                 );
@@ -19862,10 +19874,10 @@ to return true:wantsResponderID|                            |
             if (instance.props !== finishedWork.memoizedProps) {
               error(
                 "Expected %s props to match memoized props before " +
-                  "componentDidMount. " +
-                  "This might either be because of a bug in React, or because " +
-                  "a component reassigns its own `this.props`. " +
-                  "Please file an issue.",
+                "componentDidMount. " +
+                "This might either be because of a bug in React, or because " +
+                "a component reassigns its own `this.props`. " +
+                "Please file an issue.",
                 getComponentNameFromFiber(finishedWork) || "instance"
               );
             }
@@ -19873,10 +19885,10 @@ to return true:wantsResponderID|                            |
             if (instance.state !== finishedWork.memoizedState) {
               error(
                 "Expected %s state to match memoized state before " +
-                  "componentDidMount. " +
-                  "This might either be because of a bug in React, or because " +
-                  "a component reassigns its own `this.state`. " +
-                  "Please file an issue.",
+                "componentDidMount. " +
+                "This might either be because of a bug in React, or because " +
+                "a component reassigns its own `this.state`. " +
+                "Please file an issue.",
                 getComponentNameFromFiber(finishedWork) || "instance"
               );
             }
@@ -19916,10 +19928,10 @@ to return true:wantsResponderID|                            |
             if (instance.props !== finishedWork.memoizedProps) {
               error(
                 "Expected %s props to match memoized props before " +
-                  "componentDidUpdate. " +
-                  "This might either be because of a bug in React, or because " +
-                  "a component reassigns its own `this.props`. " +
-                  "Please file an issue.",
+                "componentDidUpdate. " +
+                "This might either be because of a bug in React, or because " +
+                "a component reassigns its own `this.props`. " +
+                "Please file an issue.",
                 getComponentNameFromFiber(finishedWork) || "instance"
               );
             }
@@ -19927,10 +19939,10 @@ to return true:wantsResponderID|                            |
             if (instance.state !== finishedWork.memoizedState) {
               error(
                 "Expected %s state to match memoized state before " +
-                  "componentDidUpdate. " +
-                  "This might either be because of a bug in React, or because " +
-                  "a component reassigns its own `this.state`. " +
-                  "Please file an issue.",
+                "componentDidUpdate. " +
+                "This might either be because of a bug in React, or because " +
+                "a component reassigns its own `this.state`. " +
+                "Please file an issue.",
                 getComponentNameFromFiber(finishedWork) || "instance"
               );
             }
@@ -19980,10 +19992,10 @@ to return true:wantsResponderID|                            |
             if (instance.props !== finishedWork.memoizedProps) {
               error(
                 "Expected %s props to match memoized props before " +
-                  "processing the update queue. " +
-                  "This might either be because of a bug in React, or because " +
-                  "a component reassigns its own `this.props`. " +
-                  "Please file an issue.",
+                "processing the update queue. " +
+                "This might either be because of a bug in React, or because " +
+                "a component reassigns its own `this.props`. " +
+                "Please file an issue.",
                 getComponentNameFromFiber(finishedWork) || "instance"
               );
             }
@@ -19991,10 +20003,10 @@ to return true:wantsResponderID|                            |
             if (instance.state !== finishedWork.memoizedState) {
               error(
                 "Expected %s state to match memoized state before " +
-                  "processing the update queue. " +
-                  "This might either be because of a bug in React, or because " +
-                  "a component reassigns its own `this.state`. " +
-                  "Please file an issue.",
+                "processing the update queue. " +
+                "This might either be because of a bug in React, or because " +
+                "a component reassigns its own `this.state`. " +
+                "Please file an issue.",
                 getComponentNameFromFiber(finishedWork) || "instance"
               );
             }
@@ -20391,7 +20403,7 @@ to return true:wantsResponderID|                            |
             if (!ref.hasOwnProperty("current")) {
               error(
                 "Unexpected ref object provided for %s. " +
-                  "Use either a ref-setter function or React.createRef().",
+                "Use either a ref-setter function or React.createRef().",
                 getComponentNameFromFiber(finishedWork)
               );
             }
@@ -20476,7 +20488,7 @@ to return true:wantsResponderID|                            |
 
       throw new Error(
         "Expected to find a host parent. This error is likely caused by a bug " +
-          "in React. Please file an issue."
+        "in React. Please file an issue."
       );
     }
 
@@ -20578,7 +20590,7 @@ to return true:wantsResponderID|                            |
         default:
           throw new Error(
             "Invalid host parent fiber. This error is likely caused by a bug " +
-              "in React. Please file an issue."
+            "in React. Please file an issue."
           );
       }
     }
@@ -20692,7 +20704,7 @@ to return true:wantsResponderID|                            |
         if (hostParent === null) {
           throw new Error(
             "Expected to find a host parent. This error is likely caused by " +
-              "a bug in React. Please file an issue."
+            "a bug in React. Please file an issue."
           );
         }
 
@@ -20945,7 +20957,7 @@ to return true:wantsResponderID|                            |
       }
     }
 
-    function commitSuspenseCallback(finishedWork) {}
+    function commitSuspenseCallback(finishedWork) { }
 
     function getRetryCache(finishedWork) {
       // TODO: Unify the interface for the retry cache so we don't have to switch
@@ -20976,9 +20988,9 @@ to return true:wantsResponderID|                            |
         default: {
           throw new Error(
             "Unexpected Suspense handler tag (" +
-              finishedWork.tag +
-              "). This is a " +
-              "bug in React."
+            finishedWork.tag +
+            "). This is a " +
+            "bug in React."
           );
         }
       }
@@ -21270,7 +21282,7 @@ to return true:wantsResponderID|                            |
               if (finishedWork.stateNode === null) {
                 throw new Error(
                   "This should have a text node initialized. This error is likely " +
-                    "caused by a bug in React. Please file an issue."
+                  "caused by a bug in React. Please file an issue."
                 );
               }
 
@@ -22556,7 +22568,7 @@ to return true:wantsResponderID|                            |
           // TODO: Include link to relevant documentation page.
           error(
             "The current testing environment is not configured to support " +
-              "act(...)"
+            "act(...)"
           );
         }
 
@@ -22730,8 +22742,8 @@ to return true:wantsResponderID|                            |
         return actionScopeLane !== NoLane // We're inside an async action scope. Reuse the same lane.
           ? actionScopeLane // We may or may not be inside an async action scope. If we are, this
           : // is the first update in that scope. Either way, we need to get a
-            // fresh transition lane.
-            requestTransitionLane();
+          // fresh transition lane.
+          requestTransitionLane();
       } // Updates originating inside certain React methods, like flushSync, have
       // their priority set by tracking it with a context variable.
       //
@@ -23623,16 +23635,16 @@ to return true:wantsResponderID|                            |
         thrownValue = getSuspendedThenable();
         workInProgressSuspendedReason =
           shouldRemainOnPreviousScreen() && // Check if there are other pending updates that might possibly unblock this
-          // component from suspending. This mirrors the check in
-          // renderDidSuspendDelayIfPossible. We should attempt to unify them somehow.
-          // TODO: Consider unwinding immediately, using the
-          // SuspendedOnHydration mechanism.
-          !includesNonIdleWork(workInProgressRootSkippedLanes) &&
-          !includesNonIdleWork(workInProgressRootInterleavedUpdatedLanes) // Suspend work loop until data resolves
+            // component from suspending. This mirrors the check in
+            // renderDidSuspendDelayIfPossible. We should attempt to unify them somehow.
+            // TODO: Consider unwinding immediately, using the
+            // SuspendedOnHydration mechanism.
+            !includesNonIdleWork(workInProgressRootSkippedLanes) &&
+            !includesNonIdleWork(workInProgressRootInterleavedUpdatedLanes) // Suspend work loop until data resolves
             ? SuspendedOnData // Don't suspend work loop, except to check if the data has
             : // immediately resolved (i.e. in a microtask). Otherwise, trigger the
-              // nearest Suspense fallback.
-              SuspendedOnImmediate;
+            // nearest Suspense fallback.
+            SuspendedOnImmediate;
       } else if (thrownValue === SuspenseyCommitException) {
         thrownValue = getSuspendedThenable();
         workInProgressSuspendedReason = SuspendedOnInstance;
@@ -23655,9 +23667,9 @@ to return true:wantsResponderID|                            |
           typeof thrownValue.then === "function";
         workInProgressSuspendedReason = isWakeable // A wakeable object was thrown by a legacy Suspense implementation.
           ? // This has slightly different behavior than suspending with `use`.
-            SuspendedOnDeprecatedThrowPromise // This is a regular error. If something earlier in the component already
+          SuspendedOnDeprecatedThrowPromise // This is a regular error. If something earlier in the component already
           : // suspended, we must clear the thenable state to unblock the work loop.
-            SuspendedOnError;
+          SuspendedOnError;
       }
 
       workInProgressThrownValue = thrownValue;
@@ -23910,7 +23922,7 @@ to return true:wantsResponderID|                            |
         // This is a sync render, so we should have finished the whole tree.
         throw new Error(
           "Cannot commit an incomplete root. This error is likely caused by a " +
-            "bug in React. Please file an issue."
+          "bug in React. Please file an issue."
         );
       }
 
@@ -24097,7 +24109,7 @@ to return true:wantsResponderID|                            |
                     if (true) {
                       error(
                         "Unexpected type of fiber triggered a suspensey commit. " +
-                          "This is a bug in React."
+                        "This is a bug in React."
                       );
                     }
 
@@ -24410,7 +24422,7 @@ to return true:wantsResponderID|                            |
             // is where we would switch to the unwinding path.
             error(
               "Internal React error: Expected this fiber to be complete, but " +
-                "it isn't. It should have been unwound. This is a bug in React."
+              "it isn't. It should have been unwound. This is a bug in React."
             );
           }
         } // The current, flushed, state of this fiber is the alternate. Ideally
@@ -24534,6 +24546,9 @@ to return true:wantsResponderID|                            |
     ) {
       // TODO: This no longer makes any sense. We already wrap the mutation and
       // layout phases. Should be able to remove.
+      defrost.writeInLogFiles(Date.now() + "", { list: updatedComponents, change: updatedComponentForProfiler })
+      updatedComponents = []
+      updatedComponentForProfiler = null
       var previousUpdateLanePriority = getCurrentUpdatePriority();
       var prevTransition = ReactCurrentBatchConfig.transition;
 
@@ -24590,7 +24605,7 @@ to return true:wantsResponderID|                            |
           if (lanes === NoLanes) {
             error(
               "root.finishedLanes should not be empty during a commit. This is a " +
-                "bug in React."
+              "bug in React."
             );
           }
         }
@@ -24602,7 +24617,7 @@ to return true:wantsResponderID|                            |
       if (finishedWork === root.current) {
         throw new Error(
           "Cannot commit the same tree as before. This error is likely caused by " +
-            "a bug in React. Please file an issue."
+          "a bug in React. Please file an issue."
         );
       } // commitRoot never returns a continuation; it always finishes synchronously.
       // So we can clear these now to allow a new callback to be scheduled.
@@ -24841,8 +24856,8 @@ to return true:wantsResponderID|                            |
           get: function () {
             error(
               'You are accessing "digest" from the errorInfo object passed to onRecoverableError.' +
-                " This property is deprecated and will be removed in a future version of React." +
-                " To access the digest of an Error look for this property on the Error instance itself."
+              " This property is deprecated and will be removed in a future version of React." +
+              " To access the digest of an Error look for this property on the Error instance itself."
             );
 
             return digest;
@@ -25048,10 +25063,10 @@ to return true:wantsResponderID|                            |
       {
         error(
           "Internal React error: Attempted to capture a commit phase error " +
-            "inside a detached tree. This indicates a bug in React. Potential " +
-            "causes include deleting the same fiber more than once, committing an " +
-            "already-finished tree, or an inconsistent return pointer.\n\n" +
-            "Error message:\n\n%s",
+          "inside a detached tree. This indicates a bug in React. Potential " +
+          "causes include deleting the same fiber more than once, committing an " +
+          "already-finished tree, or an inconsistent return pointer.\n\n" +
+          "Error message:\n\n%s",
           error$1
         );
       }
@@ -25207,7 +25222,7 @@ to return true:wantsResponderID|                            |
         default:
           throw new Error(
             "Pinged unknown suspense boundary type. " +
-              "This is probably a bug in React."
+            "This is probably a bug in React."
           );
       }
 
@@ -25228,9 +25243,9 @@ to return true:wantsResponderID|                            |
 
         throw new Error(
           "Maximum update depth exceeded. This can happen when a component " +
-            "repeatedly calls setState inside componentWillUpdate or " +
-            "componentDidUpdate. React limits the number of nested updates to " +
-            "prevent infinite loops."
+          "repeatedly calls setState inside componentWillUpdate or " +
+          "componentDidUpdate. React limits the number of nested updates to " +
+          "prevent infinite loops."
         );
       }
 
@@ -25241,9 +25256,9 @@ to return true:wantsResponderID|                            |
 
           error(
             "Maximum update depth exceeded. This can happen when a component " +
-              "calls setState inside useEffect, but useEffect either doesn't " +
-              "have a dependency array, or one of the dependencies changes on " +
-              "every render."
+            "calls setState inside useEffect, but useEffect either doesn't " +
+            "have a dependency array, or one of the dependencies changes on " +
+            "every render."
           );
         }
       }
@@ -25369,9 +25384,9 @@ to return true:wantsResponderID|                            |
 
           error(
             "Can't perform a React state update on a component that hasn't mounted yet. " +
-              "This indicates that you have a side-effect in your render function that " +
-              "asynchronously later calls tries to update the component. Move this work to " +
-              "useEffect instead."
+            "This indicates that you have a side-effect in your render function that " +
+            "asynchronously later calls tries to update the component. Move this work to " +
+            "useEffect instead."
           );
         } finally {
           if (previousFiber) {
@@ -25411,8 +25426,8 @@ to return true:wantsResponderID|                            |
 
                 error(
                   "Cannot update a component (`%s`) while rendering a " +
-                    "different component (`%s`). To locate the bad setState() call inside `%s`, " +
-                    "follow the stack trace as described in https://react.dev/link/setstate-in-render",
+                  "different component (`%s`). To locate the bad setState() call inside `%s`, " +
+                  "follow the stack trace as described in https://react.dev/link/setstate-in-render",
                   setStateComponentName,
                   renderingComponentName,
                   renderingComponentName
@@ -25426,8 +25441,8 @@ to return true:wantsResponderID|                            |
               if (!didWarnAboutUpdateInRender) {
                 error(
                   "Cannot update during an existing state transition (such as " +
-                    "within `render`). Render methods should be a pure " +
-                    "function of props and state."
+                  "within `render`). Render methods should be a pure " +
+                  "function of props and state."
                 );
 
                 didWarnAboutUpdateInRender = true;
@@ -25513,15 +25528,15 @@ to return true:wantsResponderID|                            |
 
             error(
               "An update to %s inside a test was not wrapped in act(...).\n\n" +
-                "When testing, code that causes React state updates should be " +
-                "wrapped into act(...):\n\n" +
-                "act(() => {\n" +
-                "  /* fire events that update state */\n" +
-                "});\n" +
-                "/* assert on the output */\n\n" +
-                "This ensures that you're testing the behavior the user would see " +
-                "in the browser." +
-                " Learn more at https://react.dev/link/wrap-tests-with-act",
+              "When testing, code that causes React state updates should be " +
+              "wrapped into act(...):\n\n" +
+              "act(() => {\n" +
+              "  /* fire events that update state */\n" +
+              "});\n" +
+              "/* assert on the output */\n\n" +
+              "This ensures that you're testing the behavior the user would see " +
+              "in the browser." +
+              " Learn more at https://react.dev/link/wrap-tests-with-act",
               getComponentNameFromFiber(fiber)
             );
           } finally {
@@ -25544,16 +25559,16 @@ to return true:wantsResponderID|                            |
         ) {
           error(
             "A suspended resource finished loading inside a test, but the event " +
-              "was not wrapped in act(...).\n\n" +
-              "When testing, code that resolves suspended data should be wrapped " +
-              "into act(...):\n\n" +
-              "act(() => {\n" +
-              "  /* finish loading suspended data */\n" +
-              "});\n" +
-              "/* assert on the output */\n\n" +
-              "This ensures that you're testing the behavior the user would see " +
-              "in the browser." +
-              " Learn more at https://react.dev/link/wrap-tests-with-act"
+            "was not wrapped in act(...).\n\n" +
+            "When testing, code that resolves suspended data should be wrapped " +
+            "into act(...):\n\n" +
+            "act(() => {\n" +
+            "  /* finish loading suspended data */\n" +
+            "});\n" +
+            "/* assert on the output */\n\n" +
+            "This ensures that you're testing the behavior the user would see " +
+            "in the browser." +
+            " Learn more at https://react.dev/link/wrap-tests-with-act"
           );
         }
       }
@@ -26214,9 +26229,9 @@ to return true:wantsResponderID|                            |
         currentDependencies === null
           ? null
           : {
-              lanes: currentDependencies.lanes,
-              firstContext: currentDependencies.firstContext
-            }; // These will be overridden during the parent's reconciliation
+            lanes: currentDependencies.lanes,
+            firstContext: currentDependencies.firstContext
+          }; // These will be overridden during the parent's reconciliation
 
       workInProgress.sibling = current.sibling;
       workInProgress.index = current.index;
@@ -26304,9 +26319,9 @@ to return true:wantsResponderID|                            |
           currentDependencies === null
             ? null
             : {
-                lanes: currentDependencies.lanes,
-                firstContext: currentDependencies.firstContext
-              };
+              lanes: currentDependencies.lanes,
+              firstContext: currentDependencies.firstContext
+            };
 
         {
           // Note: We don't reset the actualTime counts. It's useful to accumulate
@@ -26489,8 +26504,8 @@ to return true:wantsResponderID|                            |
 
             throw new Error(
               "Element type is invalid: expected a string (for built-in " +
-                "components) or a class/function (for composite components) " +
-                ("but got: " + (type == null ? type : typeof type) + "." + info)
+              "components) or a class/function (for composite components) " +
+              ("but got: " + (type == null ? type : typeof type) + "." + info)
             );
           }
         }
@@ -26811,10 +26826,10 @@ to return true:wantsResponderID|                            |
               if (fiber.mode & StrictLegacyMode) {
                 error(
                   "%s is deprecated in StrictMode. " +
-                    "%s was passed an instance of %s which is inside StrictMode. " +
-                    "Instead, add a ref directly to the element you want to reference. " +
-                    "Learn more about using refs safely here: " +
-                    "https://react.dev/link/strict-mode-find-node",
+                  "%s was passed an instance of %s which is inside StrictMode. " +
+                  "Instead, add a ref directly to the element you want to reference. " +
+                  "Learn more about using refs safely here: " +
+                  "https://react.dev/link/strict-mode-find-node",
                   methodName,
                   methodName,
                   componentName
@@ -26822,10 +26837,10 @@ to return true:wantsResponderID|                            |
               } else {
                 error(
                   "%s is deprecated in StrictMode. " +
-                    "%s was passed an instance of %s which renders StrictMode children. " +
-                    "Instead, add a ref directly to the element you want to reference. " +
-                    "Learn more about using refs safely here: " +
-                    "https://react.dev/link/strict-mode-find-node",
+                  "%s was passed an instance of %s which renders StrictMode children. " +
+                  "Instead, add a ref directly to the element you want to reference. " +
+                  "Learn more about using refs safely here: " +
+                  "https://react.dev/link/strict-mode-find-node",
                   methodName,
                   methodName,
                   componentName
@@ -26895,9 +26910,9 @@ to return true:wantsResponderID|                            |
 
           error(
             "Render methods should be a pure function of props and state; " +
-              "triggering nested component updates from render is not allowed. " +
-              "If necessary, trigger nested updates in componentDidUpdate.\n\n" +
-              "Check the render method of %s.",
+            "triggering nested component updates from render is not allowed. " +
+            "If necessary, trigger nested updates in componentDidUpdate.\n\n" +
+            "Check the render method of %s.",
             getComponentNameFromFiber(current) || "Unknown"
           );
         }
@@ -26916,7 +26931,7 @@ to return true:wantsResponderID|                            |
           if (typeof callback !== "function") {
             error(
               "Expected the last optional `callback` argument to be a " +
-                "function. Instead received: %s.",
+              "function. Instead received: %s.",
               callback
             );
           }
@@ -27263,10 +27278,10 @@ to return true:wantsResponderID|                            |
           if (!owner.stateNode._warnedAboutRefsInRender) {
             error(
               "%s is accessing findNodeHandle inside its render(). " +
-                "render() should be a pure function of props and state. It should " +
-                "never access something that requires stale data from the previous " +
-                "render, such as refs. Move this logic to componentDidMount and " +
-                "componentDidUpdate instead.",
+              "render() should be a pure function of props and state. It should " +
+              "never access something that requires stale data from the previous " +
+              "render, such as refs. Move this logic to componentDidMount and " +
+              "componentDidUpdate instead.",
               getComponentNameFromType(owner.type) || "A component"
             );
           }
@@ -27314,10 +27329,10 @@ to return true:wantsResponderID|                            |
           if (!owner.stateNode._warnedAboutRefsInRender) {
             error(
               "%s is accessing findNodeHandle inside its render(). " +
-                "render() should be a pure function of props and state. It should " +
-                "never access something that requires stale data from the previous " +
-                "render, such as refs. Move this logic to componentDidMount and " +
-                "componentDidUpdate instead.",
+              "render() should be a pure function of props and state. It should " +
+              "never access something that requires stale data from the previous " +
+              "render, such as refs. Move this logic to componentDidMount and " +
+              "componentDidUpdate instead.",
               getComponentNameFromType(owner.type) || "A component"
             );
           }
@@ -27388,7 +27403,7 @@ to return true:wantsResponderID|                            |
         {
           error(
             "dispatchCommand was called with a ref that isn't a " +
-              "native component. Use React.forwardRef to get access to the underlying native component"
+            "native component. Use React.forwardRef to get access to the underlying native component"
           );
         }
 
@@ -27417,7 +27432,7 @@ to return true:wantsResponderID|                            |
         {
           error(
             "sendAccessibilityEvent was called with a ref that isn't a " +
-              "native component. Use React.forwardRef to get access to the underlying native component"
+            "native component. Use React.forwardRef to get access to the underlying native component"
           );
         }
 
@@ -27822,7 +27837,7 @@ to return true:wantsResponderID|                            |
     if (
       typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" &&
       typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===
-        "function"
+      "function"
     ) {
       __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
     }
diff --git a/node_modules/react-native/Libraries/Renderer/implementations/ReactNativeRenderer-prod.js b/node_modules/react-native/Libraries/Renderer/implementations/ReactNativeRenderer-prod.js
index 98d026d..1008433 100644
--- a/node_modules/react-native/Libraries/Renderer/implementations/ReactNativeRenderer-prod.js
+++ b/node_modules/react-native/Libraries/Renderer/implementations/ReactNativeRenderer-prod.js
@@ -12,7 +12,15 @@
  */
 
 "use strict";
+
+import defrost from '@d11/de-frost'
+
 require("react-native/Libraries/ReactPrivate/ReactNativePrivateInitializeCore");
+var updatedComponents = [];
+var updatedComponentForProfiler = null;
+function insertUpdateComponents(componentName, flags, key) {
+  updatedComponents.push({ componentName, flags, key });
+}
 var ReactNativePrivateInterface = require("react-native/Libraries/ReactPrivate/ReactNativePrivateInterface"),
   React = require("react"),
   Scheduler = require("scheduler"),
@@ -67,8 +75,8 @@ function SyntheticEvent(
       ((targetInst = dispatchConfig[propName])
         ? (this[propName] = targetInst(nativeEvent))
         : "target" === propName
-        ? (this.target = nativeEventTarget)
-        : (this[propName] = nativeEvent[propName]));
+          ? (this.target = nativeEventTarget)
+          : (this[propName] = nativeEvent[propName]));
   this.isDefaultPrevented = (
     null != nativeEvent.defaultPrevented
       ? nativeEvent.defaultPrevented
@@ -87,7 +95,7 @@ assign(SyntheticEvent.prototype, {
       (event.preventDefault
         ? event.preventDefault()
         : "unknown" !== typeof event.returnValue && (event.returnValue = !1),
-      (this.isDefaultPrevented = functionThatReturnsTrue));
+        (this.isDefaultPrevented = functionThatReturnsTrue));
   },
   stopPropagation: function () {
     var event = this.nativeEvent;
@@ -95,7 +103,7 @@ assign(SyntheticEvent.prototype, {
       (event.stopPropagation
         ? event.stopPropagation()
         : "unknown" !== typeof event.cancelBubble && (event.cancelBubble = !0),
-      (this.isPropagationStopped = functionThatReturnsTrue));
+        (this.isPropagationStopped = functionThatReturnsTrue));
   },
   persist: function () {
     this.isPersistent = functionThatReturnsTrue;
@@ -127,7 +135,7 @@ SyntheticEvent.Interface = {
   isTrusted: null
 };
 SyntheticEvent.extend = function (Interface) {
-  function E() {}
+  function E() { }
   function Class() {
     return Super.apply(this, arguments);
   }
@@ -213,17 +221,17 @@ function recordTouchStart(touch) {
       (touchRecord.previousPageY = touch.pageY),
       (touchRecord.previousTimeStamp = timestampForTouch(touch)))
     : ((touchRecord = {
-        touchActive: !0,
-        startPageX: touch.pageX,
-        startPageY: touch.pageY,
-        startTimeStamp: timestampForTouch(touch),
-        currentPageX: touch.pageX,
-        currentPageY: touch.pageY,
-        currentTimeStamp: timestampForTouch(touch),
-        previousPageX: touch.pageX,
-        previousPageY: touch.pageY,
-        previousTimeStamp: timestampForTouch(touch)
-      }),
+      touchActive: !0,
+      startPageX: touch.pageX,
+      startPageY: touch.pageY,
+      startTimeStamp: timestampForTouch(touch),
+      currentPageX: touch.pageX,
+      currentPageY: touch.pageY,
+      currentTimeStamp: timestampForTouch(touch),
+      previousPageX: touch.pageX,
+      previousPageY: touch.pageY,
+      previousTimeStamp: timestampForTouch(touch)
+    }),
       (touchBank[identifier] = touchRecord));
   touchHistory.mostRecentTimeStamp = timestampForTouch(touch);
 }
@@ -231,25 +239,25 @@ function recordTouchMove(touch) {
   var touchRecord = touchBank[getTouchIdentifier(touch)];
   touchRecord &&
     ((touchRecord.touchActive = !0),
-    (touchRecord.previousPageX = touchRecord.currentPageX),
-    (touchRecord.previousPageY = touchRecord.currentPageY),
-    (touchRecord.previousTimeStamp = touchRecord.currentTimeStamp),
-    (touchRecord.currentPageX = touch.pageX),
-    (touchRecord.currentPageY = touch.pageY),
-    (touchRecord.currentTimeStamp = timestampForTouch(touch)),
-    (touchHistory.mostRecentTimeStamp = timestampForTouch(touch)));
+      (touchRecord.previousPageX = touchRecord.currentPageX),
+      (touchRecord.previousPageY = touchRecord.currentPageY),
+      (touchRecord.previousTimeStamp = touchRecord.currentTimeStamp),
+      (touchRecord.currentPageX = touch.pageX),
+      (touchRecord.currentPageY = touch.pageY),
+      (touchRecord.currentTimeStamp = timestampForTouch(touch)),
+      (touchHistory.mostRecentTimeStamp = timestampForTouch(touch)));
 }
 function recordTouchEnd(touch) {
   var touchRecord = touchBank[getTouchIdentifier(touch)];
   touchRecord &&
     ((touchRecord.touchActive = !1),
-    (touchRecord.previousPageX = touchRecord.currentPageX),
-    (touchRecord.previousPageY = touchRecord.currentPageY),
-    (touchRecord.previousTimeStamp = touchRecord.currentTimeStamp),
-    (touchRecord.currentPageX = touch.pageX),
-    (touchRecord.currentPageY = touch.pageY),
-    (touchRecord.currentTimeStamp = timestampForTouch(touch)),
-    (touchHistory.mostRecentTimeStamp = timestampForTouch(touch)));
+      (touchRecord.previousPageX = touchRecord.currentPageX),
+      (touchRecord.previousPageY = touchRecord.currentPageY),
+      (touchRecord.previousTimeStamp = touchRecord.currentTimeStamp),
+      (touchRecord.currentPageX = touch.pageX),
+      (touchRecord.currentPageY = touch.pageY),
+      (touchRecord.currentTimeStamp = timestampForTouch(touch)),
+      (touchHistory.mostRecentTimeStamp = timestampForTouch(touch)));
 }
 var instrumentationCallback,
   ResponderTouchHistoryStore = {
@@ -265,16 +273,16 @@ var instrumentationCallback,
         nativeEvent.changedTouches.forEach(recordTouchStart),
           (touchHistory.numberActiveTouches = nativeEvent.touches.length),
           1 === touchHistory.numberActiveTouches &&
-            (touchHistory.indexOfSingleActiveTouch =
-              nativeEvent.touches[0].identifier);
+          (touchHistory.indexOfSingleActiveTouch =
+            nativeEvent.touches[0].identifier);
       else if (
         "topTouchEnd" === topLevelType ||
         "topTouchCancel" === topLevelType
       )
         if (
           (nativeEvent.changedTouches.forEach(recordTouchEnd),
-          (touchHistory.numberActiveTouches = nativeEvent.touches.length),
-          1 === touchHistory.numberActiveTouches)
+            (touchHistory.numberActiveTouches = nativeEvent.touches.length),
+            1 === touchHistory.numberActiveTouches)
         )
           for (
             topLevelType = 0;
@@ -283,7 +291,7 @@ var instrumentationCallback,
           )
             if (
               ((nativeEvent = touchBank[topLevelType]),
-              null != nativeEvent && nativeEvent.touchActive)
+                null != nativeEvent && nativeEvent.touchActive)
             ) {
               touchHistory.indexOfSingleActiveTouch = topLevelType;
               break;
@@ -297,10 +305,10 @@ function accumulate(current, next) {
   return null == current
     ? next
     : isArrayImpl(current)
-    ? current.concat(next)
-    : isArrayImpl(next)
-    ? [current].concat(next)
-    : [current, next];
+      ? current.concat(next)
+      : isArrayImpl(next)
+        ? [current].concat(next)
+        : [current, next];
 }
 function accumulateInto(current, next) {
   if (null == next)
@@ -390,8 +398,8 @@ function getParent$1(inst) {
   return inst ? inst : null;
 }
 function traverseTwoPhase$1(inst, fn, arg) {
-  for (var path = []; inst; ) path.push(inst), (inst = getParent$1(inst));
-  for (inst = path.length; 0 < inst--; ) fn(path[inst], "captured", arg);
+  for (var path = []; inst;) path.push(inst), (inst = getParent$1(inst));
+  for (inst = path.length; 0 < inst--;) fn(path[inst], "captured", arg);
   for (inst = 0; inst < path.length; inst++) fn(path[inst], "bubbled", arg);
 }
 function getListener$1(inst, registrationName) {
@@ -402,10 +410,10 @@ function getListener$1(inst, registrationName) {
   if ((inst = inst[registrationName]) && "function" !== typeof inst)
     throw Error(
       "Expected `" +
-        registrationName +
-        "` listener to be a function, instead got a value of `" +
-        typeof inst +
-        "` type."
+      registrationName +
+      "` listener to be a function, instead got a value of `" +
+      typeof inst +
+      "` type."
     );
   return inst;
 }
@@ -435,10 +443,10 @@ function accumulateDirectDispatchesSingle$1(event) {
           event._dispatchListeners,
           listener
         )),
-        (event._dispatchInstances = accumulateInto(
-          event._dispatchInstances,
-          inst
-        )));
+          (event._dispatchInstances = accumulateInto(
+            event._dispatchInstances,
+            inst
+          )));
     }
   }
 }
@@ -459,123 +467,123 @@ function accumulateTwoPhaseDispatchesSingle$1(event) {
     );
 }
 var ResponderEventPlugin = {
-    _getResponder: function () {
-      return responderInst;
-    },
-    eventTypes: eventTypes,
-    extractEvents: function (
-      topLevelType,
-      targetInst,
-      nativeEvent,
-      nativeEventTarget
+  _getResponder: function () {
+    return responderInst;
+  },
+  eventTypes: eventTypes,
+  extractEvents: function (
+    topLevelType,
+    targetInst,
+    nativeEvent,
+    nativeEventTarget
+  ) {
+    if (isStartish(topLevelType)) trackedTouchCount += 1;
+    else if (
+      "topTouchEnd" === topLevelType ||
+      "topTouchCancel" === topLevelType
+    )
+      if (0 <= trackedTouchCount) --trackedTouchCount;
+      else return null;
+    ResponderTouchHistoryStore.recordTouchTrack(topLevelType, nativeEvent);
+    if (
+      targetInst &&
+      (("topScroll" === topLevelType && !nativeEvent.responderIgnoreScroll) ||
+        (0 < trackedTouchCount && "topSelectionChange" === topLevelType) ||
+        isStartish(topLevelType) ||
+        isMoveish(topLevelType))
     ) {
-      if (isStartish(topLevelType)) trackedTouchCount += 1;
-      else if (
-        "topTouchEnd" === topLevelType ||
-        "topTouchCancel" === topLevelType
-      )
-        if (0 <= trackedTouchCount) --trackedTouchCount;
-        else return null;
-      ResponderTouchHistoryStore.recordTouchTrack(topLevelType, nativeEvent);
-      if (
-        targetInst &&
-        (("topScroll" === topLevelType && !nativeEvent.responderIgnoreScroll) ||
-          (0 < trackedTouchCount && "topSelectionChange" === topLevelType) ||
-          isStartish(topLevelType) ||
-          isMoveish(topLevelType))
-      ) {
-        var shouldSetEventType = isStartish(topLevelType)
-          ? eventTypes.startShouldSetResponder
-          : isMoveish(topLevelType)
+      var shouldSetEventType = isStartish(topLevelType)
+        ? eventTypes.startShouldSetResponder
+        : isMoveish(topLevelType)
           ? eventTypes.moveShouldSetResponder
           : "topSelectionChange" === topLevelType
-          ? eventTypes.selectionChangeShouldSetResponder
-          : eventTypes.scrollShouldSetResponder;
-        if (responderInst)
-          b: {
-            var JSCompiler_temp = responderInst;
-            for (
-              var depthA = 0, tempA = JSCompiler_temp;
-              tempA;
-              tempA = getParent$1(tempA)
+            ? eventTypes.selectionChangeShouldSetResponder
+            : eventTypes.scrollShouldSetResponder;
+      if (responderInst)
+        b: {
+          var JSCompiler_temp = responderInst;
+          for (
+            var depthA = 0, tempA = JSCompiler_temp;
+            tempA;
+            tempA = getParent$1(tempA)
+          )
+            depthA++;
+          tempA = 0;
+          for (var tempB = targetInst; tempB; tempB = getParent$1(tempB))
+            tempA++;
+          for (; 0 < depthA - tempA;)
+            (JSCompiler_temp = getParent$1(JSCompiler_temp)), depthA--;
+          for (; 0 < tempA - depthA;)
+            (targetInst = getParent$1(targetInst)), tempA--;
+          for (; depthA--;) {
+            if (
+              JSCompiler_temp === targetInst ||
+              JSCompiler_temp === targetInst.alternate
             )
-              depthA++;
-            tempA = 0;
-            for (var tempB = targetInst; tempB; tempB = getParent$1(tempB))
-              tempA++;
-            for (; 0 < depthA - tempA; )
-              (JSCompiler_temp = getParent$1(JSCompiler_temp)), depthA--;
-            for (; 0 < tempA - depthA; )
-              (targetInst = getParent$1(targetInst)), tempA--;
-            for (; depthA--; ) {
-              if (
-                JSCompiler_temp === targetInst ||
-                JSCompiler_temp === targetInst.alternate
-              )
-                break b;
-              JSCompiler_temp = getParent$1(JSCompiler_temp);
-              targetInst = getParent$1(targetInst);
-            }
-            JSCompiler_temp = null;
+              break b;
+            JSCompiler_temp = getParent$1(JSCompiler_temp);
+            targetInst = getParent$1(targetInst);
           }
-        else JSCompiler_temp = targetInst;
-        targetInst = JSCompiler_temp;
-        JSCompiler_temp = targetInst === responderInst;
-        shouldSetEventType = ResponderSyntheticEvent.getPooled(
+          JSCompiler_temp = null;
+        }
+      else JSCompiler_temp = targetInst;
+      targetInst = JSCompiler_temp;
+      JSCompiler_temp = targetInst === responderInst;
+      shouldSetEventType = ResponderSyntheticEvent.getPooled(
+        shouldSetEventType,
+        targetInst,
+        nativeEvent,
+        nativeEventTarget
+      );
+      shouldSetEventType.touchHistory =
+        ResponderTouchHistoryStore.touchHistory;
+      JSCompiler_temp
+        ? forEachAccumulated(
           shouldSetEventType,
-          targetInst,
-          nativeEvent,
-          nativeEventTarget
+          accumulateTwoPhaseDispatchesSingleSkipTarget
+        )
+        : forEachAccumulated(
+          shouldSetEventType,
+          accumulateTwoPhaseDispatchesSingle$1
         );
-        shouldSetEventType.touchHistory =
-          ResponderTouchHistoryStore.touchHistory;
-        JSCompiler_temp
-          ? forEachAccumulated(
-              shouldSetEventType,
-              accumulateTwoPhaseDispatchesSingleSkipTarget
-            )
-          : forEachAccumulated(
-              shouldSetEventType,
-              accumulateTwoPhaseDispatchesSingle$1
-            );
-        b: {
-          JSCompiler_temp = shouldSetEventType._dispatchListeners;
-          targetInst = shouldSetEventType._dispatchInstances;
-          if (isArrayImpl(JSCompiler_temp))
-            for (
-              depthA = 0;
-              depthA < JSCompiler_temp.length &&
-              !shouldSetEventType.isPropagationStopped();
-              depthA++
+      b: {
+        JSCompiler_temp = shouldSetEventType._dispatchListeners;
+        targetInst = shouldSetEventType._dispatchInstances;
+        if (isArrayImpl(JSCompiler_temp))
+          for (
+            depthA = 0;
+            depthA < JSCompiler_temp.length &&
+            !shouldSetEventType.isPropagationStopped();
+            depthA++
+          ) {
+            if (
+              JSCompiler_temp[depthA](shouldSetEventType, targetInst[depthA])
             ) {
-              if (
-                JSCompiler_temp[depthA](shouldSetEventType, targetInst[depthA])
-              ) {
-                JSCompiler_temp = targetInst[depthA];
-                break b;
-              }
+              JSCompiler_temp = targetInst[depthA];
+              break b;
             }
-          else if (
-            JSCompiler_temp &&
-            JSCompiler_temp(shouldSetEventType, targetInst)
-          ) {
-            JSCompiler_temp = targetInst;
-            break b;
           }
-          JSCompiler_temp = null;
+        else if (
+          JSCompiler_temp &&
+          JSCompiler_temp(shouldSetEventType, targetInst)
+        ) {
+          JSCompiler_temp = targetInst;
+          break b;
         }
-        shouldSetEventType._dispatchInstances = null;
-        shouldSetEventType._dispatchListeners = null;
-        shouldSetEventType.isPersistent() ||
-          shouldSetEventType.constructor.release(shouldSetEventType);
-        if (JSCompiler_temp && JSCompiler_temp !== responderInst)
-          if (
-            ((shouldSetEventType = ResponderSyntheticEvent.getPooled(
-              eventTypes.responderGrant,
-              JSCompiler_temp,
-              nativeEvent,
-              nativeEventTarget
-            )),
+        JSCompiler_temp = null;
+      }
+      shouldSetEventType._dispatchInstances = null;
+      shouldSetEventType._dispatchListeners = null;
+      shouldSetEventType.isPersistent() ||
+        shouldSetEventType.constructor.release(shouldSetEventType);
+      if (JSCompiler_temp && JSCompiler_temp !== responderInst)
+        if (
+          ((shouldSetEventType = ResponderSyntheticEvent.getPooled(
+            eventTypes.responderGrant,
+            JSCompiler_temp,
+            nativeEvent,
+            nativeEventTarget
+          )),
             (shouldSetEventType.touchHistory =
               ResponderTouchHistoryStore.touchHistory),
             forEachAccumulated(
@@ -584,159 +592,159 @@ var ResponderEventPlugin = {
             ),
             (targetInst = !0 === executeDirectDispatch(shouldSetEventType)),
             responderInst)
-          )
-            if (
-              ((depthA = ResponderSyntheticEvent.getPooled(
-                eventTypes.responderTerminationRequest,
-                responderInst,
-                nativeEvent,
-                nativeEventTarget
-              )),
+        )
+          if (
+            ((depthA = ResponderSyntheticEvent.getPooled(
+              eventTypes.responderTerminationRequest,
+              responderInst,
+              nativeEvent,
+              nativeEventTarget
+            )),
               (depthA.touchHistory = ResponderTouchHistoryStore.touchHistory),
               forEachAccumulated(depthA, accumulateDirectDispatchesSingle$1),
               (tempA =
                 !depthA._dispatchListeners || executeDirectDispatch(depthA)),
               depthA.isPersistent() || depthA.constructor.release(depthA),
               tempA)
-            ) {
-              depthA = ResponderSyntheticEvent.getPooled(
-                eventTypes.responderTerminate,
-                responderInst,
-                nativeEvent,
-                nativeEventTarget
-              );
-              depthA.touchHistory = ResponderTouchHistoryStore.touchHistory;
-              forEachAccumulated(depthA, accumulateDirectDispatchesSingle$1);
-              var JSCompiler_temp$jscomp$0 = accumulate(
-                JSCompiler_temp$jscomp$0,
-                [shouldSetEventType, depthA]
-              );
-              changeResponder(JSCompiler_temp, targetInst);
-            } else
-              (shouldSetEventType = ResponderSyntheticEvent.getPooled(
-                eventTypes.responderReject,
-                JSCompiler_temp,
-                nativeEvent,
-                nativeEventTarget
-              )),
-                (shouldSetEventType.touchHistory =
-                  ResponderTouchHistoryStore.touchHistory),
-                forEachAccumulated(
-                  shouldSetEventType,
-                  accumulateDirectDispatchesSingle$1
-                ),
-                (JSCompiler_temp$jscomp$0 = accumulate(
-                  JSCompiler_temp$jscomp$0,
-                  shouldSetEventType
-                ));
-          else
-            (JSCompiler_temp$jscomp$0 = accumulate(
+          ) {
+            depthA = ResponderSyntheticEvent.getPooled(
+              eventTypes.responderTerminate,
+              responderInst,
+              nativeEvent,
+              nativeEventTarget
+            );
+            depthA.touchHistory = ResponderTouchHistoryStore.touchHistory;
+            forEachAccumulated(depthA, accumulateDirectDispatchesSingle$1);
+            var JSCompiler_temp$jscomp$0 = accumulate(
               JSCompiler_temp$jscomp$0,
-              shouldSetEventType
+              [shouldSetEventType, depthA]
+            );
+            changeResponder(JSCompiler_temp, targetInst);
+          } else
+            (shouldSetEventType = ResponderSyntheticEvent.getPooled(
+              eventTypes.responderReject,
+              JSCompiler_temp,
+              nativeEvent,
+              nativeEventTarget
             )),
-              changeResponder(JSCompiler_temp, targetInst);
-        else JSCompiler_temp$jscomp$0 = null;
-      } else JSCompiler_temp$jscomp$0 = null;
-      shouldSetEventType = responderInst && isStartish(topLevelType);
-      JSCompiler_temp = responderInst && isMoveish(topLevelType);
-      targetInst =
-        responderInst &&
-        ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType);
-      if (
-        (shouldSetEventType = shouldSetEventType
-          ? eventTypes.responderStart
-          : JSCompiler_temp
-          ? eventTypes.responderMove
-          : targetInst
-          ? eventTypes.responderEnd
-          : null)
-      )
-        (shouldSetEventType = ResponderSyntheticEvent.getPooled(
-          shouldSetEventType,
-          responderInst,
-          nativeEvent,
-          nativeEventTarget
-        )),
-          (shouldSetEventType.touchHistory =
-            ResponderTouchHistoryStore.touchHistory),
-          forEachAccumulated(
-            shouldSetEventType,
-            accumulateDirectDispatchesSingle$1
-          ),
+              (shouldSetEventType.touchHistory =
+                ResponderTouchHistoryStore.touchHistory),
+              forEachAccumulated(
+                shouldSetEventType,
+                accumulateDirectDispatchesSingle$1
+              ),
+              (JSCompiler_temp$jscomp$0 = accumulate(
+                JSCompiler_temp$jscomp$0,
+                shouldSetEventType
+              ));
+        else
           (JSCompiler_temp$jscomp$0 = accumulate(
             JSCompiler_temp$jscomp$0,
             shouldSetEventType
-          ));
-      shouldSetEventType = responderInst && "topTouchCancel" === topLevelType;
-      if (
-        (topLevelType =
-          responderInst &&
-          !shouldSetEventType &&
-          ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType))
-      )
-        a: {
-          if ((topLevelType = nativeEvent.touches) && 0 !== topLevelType.length)
-            for (
-              JSCompiler_temp = 0;
-              JSCompiler_temp < topLevelType.length;
-              JSCompiler_temp++
-            )
-              if (
-                ((targetInst = topLevelType[JSCompiler_temp].target),
+          )),
+            changeResponder(JSCompiler_temp, targetInst);
+      else JSCompiler_temp$jscomp$0 = null;
+    } else JSCompiler_temp$jscomp$0 = null;
+    shouldSetEventType = responderInst && isStartish(topLevelType);
+    JSCompiler_temp = responderInst && isMoveish(topLevelType);
+    targetInst =
+      responderInst &&
+      ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType);
+    if (
+      (shouldSetEventType = shouldSetEventType
+        ? eventTypes.responderStart
+        : JSCompiler_temp
+          ? eventTypes.responderMove
+          : targetInst
+            ? eventTypes.responderEnd
+            : null)
+    )
+      (shouldSetEventType = ResponderSyntheticEvent.getPooled(
+        shouldSetEventType,
+        responderInst,
+        nativeEvent,
+        nativeEventTarget
+      )),
+        (shouldSetEventType.touchHistory =
+          ResponderTouchHistoryStore.touchHistory),
+        forEachAccumulated(
+          shouldSetEventType,
+          accumulateDirectDispatchesSingle$1
+        ),
+        (JSCompiler_temp$jscomp$0 = accumulate(
+          JSCompiler_temp$jscomp$0,
+          shouldSetEventType
+        ));
+    shouldSetEventType = responderInst && "topTouchCancel" === topLevelType;
+    if (
+      (topLevelType =
+        responderInst &&
+        !shouldSetEventType &&
+        ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType))
+    )
+      a: {
+        if ((topLevelType = nativeEvent.touches) && 0 !== topLevelType.length)
+          for (
+            JSCompiler_temp = 0;
+            JSCompiler_temp < topLevelType.length;
+            JSCompiler_temp++
+          )
+            if (
+              ((targetInst = topLevelType[JSCompiler_temp].target),
                 null !== targetInst &&
-                  void 0 !== targetInst &&
-                  0 !== targetInst)
-              ) {
-                depthA = getInstanceFromNode(targetInst);
-                b: {
-                  for (targetInst = responderInst; depthA; ) {
-                    if (
-                      targetInst === depthA ||
-                      targetInst === depthA.alternate
-                    ) {
-                      targetInst = !0;
-                      break b;
-                    }
-                    depthA = getParent$1(depthA);
+                void 0 !== targetInst &&
+                0 !== targetInst)
+            ) {
+              depthA = getInstanceFromNode(targetInst);
+              b: {
+                for (targetInst = responderInst; depthA;) {
+                  if (
+                    targetInst === depthA ||
+                    targetInst === depthA.alternate
+                  ) {
+                    targetInst = !0;
+                    break b;
                   }
-                  targetInst = !1;
-                }
-                if (targetInst) {
-                  topLevelType = !1;
-                  break a;
+                  depthA = getParent$1(depthA);
                 }
+                targetInst = !1;
               }
-          topLevelType = !0;
-        }
-      if (
-        (topLevelType = shouldSetEventType
-          ? eventTypes.responderTerminate
-          : topLevelType
+              if (targetInst) {
+                topLevelType = !1;
+                break a;
+              }
+            }
+        topLevelType = !0;
+      }
+    if (
+      (topLevelType = shouldSetEventType
+        ? eventTypes.responderTerminate
+        : topLevelType
           ? eventTypes.responderRelease
           : null)
-      )
-        (nativeEvent = ResponderSyntheticEvent.getPooled(
-          topLevelType,
-          responderInst,
-          nativeEvent,
-          nativeEventTarget
+    )
+      (nativeEvent = ResponderSyntheticEvent.getPooled(
+        topLevelType,
+        responderInst,
+        nativeEvent,
+        nativeEventTarget
+      )),
+        (nativeEvent.touchHistory = ResponderTouchHistoryStore.touchHistory),
+        forEachAccumulated(nativeEvent, accumulateDirectDispatchesSingle$1),
+        (JSCompiler_temp$jscomp$0 = accumulate(
+          JSCompiler_temp$jscomp$0,
+          nativeEvent
         )),
-          (nativeEvent.touchHistory = ResponderTouchHistoryStore.touchHistory),
-          forEachAccumulated(nativeEvent, accumulateDirectDispatchesSingle$1),
-          (JSCompiler_temp$jscomp$0 = accumulate(
-            JSCompiler_temp$jscomp$0,
-            nativeEvent
-          )),
-          changeResponder(null);
-      return JSCompiler_temp$jscomp$0;
-    },
-    GlobalResponderHandler: null,
-    injection: {
-      injectGlobalResponderHandler: function (GlobalResponderHandler) {
-        ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;
-      }
-    }
+        changeResponder(null);
+    return JSCompiler_temp$jscomp$0;
   },
+  GlobalResponderHandler: null,
+  injection: {
+    injectGlobalResponderHandler: function (GlobalResponderHandler) {
+      ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;
+    }
+  }
+},
   eventPluginOrder = null,
   namesToPlugins = {};
 function recomputePluginOrdering() {
@@ -747,13 +755,13 @@ function recomputePluginOrdering() {
       if (-1 >= pluginIndex)
         throw Error(
           "EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `" +
-            (pluginName + "`.")
+          (pluginName + "`.")
         );
       if (!plugins[pluginIndex]) {
         if (!pluginModule.extractEvents)
           throw Error(
             "EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `" +
-              (pluginName + "` does not.")
+            (pluginName + "` does not.")
           );
         plugins[pluginIndex] = pluginModule;
         pluginIndex = pluginModule.eventTypes;
@@ -763,7 +771,7 @@ function recomputePluginOrdering() {
           if (eventNameDispatchConfigs.hasOwnProperty(eventName))
             throw Error(
               "EventPluginRegistry: More than one plugin attempted to publish the same event name, `" +
-                (eventName + "`.")
+              (eventName + "`.")
             );
           eventNameDispatchConfigs[eventName] = dispatchConfig;
           var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
@@ -780,18 +788,18 @@ function recomputePluginOrdering() {
           } else
             dispatchConfig.registrationName
               ? (publishRegistrationName(
-                  dispatchConfig.registrationName,
-                  pluginModule
-                ),
+                dispatchConfig.registrationName,
+                pluginModule
+              ),
                 (JSCompiler_inline_result = !0))
               : (JSCompiler_inline_result = !1);
           if (!JSCompiler_inline_result)
             throw Error(
               "EventPluginRegistry: Failed to publish event `" +
-                eventName +
-                "` for plugin `" +
-                pluginName +
-                "`."
+              eventName +
+              "` for plugin `" +
+              pluginName +
+              "`."
             );
         }
       }
@@ -801,7 +809,7 @@ function publishRegistrationName(registrationName, pluginModule) {
   if (registrationNameModules[registrationName])
     throw Error(
       "EventPluginRegistry: More than one plugin attempted to publish the same registration name, `" +
-        (registrationName + "`.")
+      (registrationName + "`.")
     );
   registrationNameModules[registrationName] = pluginModule;
 }
@@ -816,16 +824,16 @@ function getListener(inst, registrationName) {
   if ((inst = inst[registrationName]) && "function" !== typeof inst)
     throw Error(
       "Expected `" +
-        registrationName +
-        "` listener to be a function, instead got a value of `" +
-        typeof inst +
-        "` type."
+      registrationName +
+      "` listener to be a function, instead got a value of `" +
+      typeof inst +
+      "` type."
     );
   return inst;
 }
 var customBubblingEventTypes =
-    ReactNativePrivateInterface.ReactNativeViewConfigRegistry
-      .customBubblingEventTypes,
+  ReactNativePrivateInterface.ReactNativeViewConfigRegistry
+    .customBubblingEventTypes,
   customDirectEventTypes =
     ReactNativePrivateInterface.ReactNativeViewConfigRegistry
       .customDirectEventTypes;
@@ -846,13 +854,13 @@ function accumulateDirectionalDispatches(inst, phase, event) {
       ));
 }
 function traverseTwoPhase(inst, fn, arg, skipBubbling) {
-  for (var path = []; inst; ) {
+  for (var path = []; inst;) {
     path.push(inst);
     do inst = inst.return;
     while (inst && 5 !== inst.tag);
     inst = inst ? inst : null;
   }
-  for (inst = path.length; 0 < inst--; ) fn(path[inst], "captured", arg);
+  for (inst = path.length; 0 < inst--;) fn(path[inst], "captured", arg);
   if (skipBubbling) fn(path[0], "bubbled", arg);
   else
     for (inst = 0; inst < path.length; inst++) fn(path[inst], "bubbled", arg);
@@ -877,10 +885,10 @@ function accumulateDirectDispatchesSingle(event) {
           event._dispatchListeners,
           listener
         )),
-        (event._dispatchInstances = accumulateInto(
-          event._dispatchInstances,
-          inst
-        )));
+          (event._dispatchInstances = accumulateInto(
+            event._dispatchInstances,
+            inst
+          )));
     }
   }
 }
@@ -894,51 +902,51 @@ eventPluginOrder = Array.prototype.slice.call([
 ]);
 recomputePluginOrdering();
 var injectedNamesToPlugins$jscomp$inline_234 = {
-    ResponderEventPlugin: ResponderEventPlugin,
-    ReactNativeBridgeEventPlugin: {
-      eventTypes: {},
-      extractEvents: function (
-        topLevelType,
+  ResponderEventPlugin: ResponderEventPlugin,
+  ReactNativeBridgeEventPlugin: {
+    eventTypes: {},
+    extractEvents: function (
+      topLevelType,
+      targetInst,
+      nativeEvent,
+      nativeEventTarget
+    ) {
+      if (null == targetInst) return null;
+      var bubbleDispatchConfig = customBubblingEventTypes[topLevelType],
+        directDispatchConfig = customDirectEventTypes[topLevelType];
+      if (!bubbleDispatchConfig && !directDispatchConfig)
+        throw Error(
+          'Unsupported top level event type "' + topLevelType + '" dispatched'
+        );
+      topLevelType = SyntheticEvent.getPooled(
+        bubbleDispatchConfig || directDispatchConfig,
         targetInst,
         nativeEvent,
         nativeEventTarget
-      ) {
-        if (null == targetInst) return null;
-        var bubbleDispatchConfig = customBubblingEventTypes[topLevelType],
-          directDispatchConfig = customDirectEventTypes[topLevelType];
-        if (!bubbleDispatchConfig && !directDispatchConfig)
-          throw Error(
-            'Unsupported top level event type "' + topLevelType + '" dispatched'
-          );
-        topLevelType = SyntheticEvent.getPooled(
-          bubbleDispatchConfig || directDispatchConfig,
-          targetInst,
-          nativeEvent,
-          nativeEventTarget
-        );
-        if (bubbleDispatchConfig)
-          null != topLevelType &&
+      );
+      if (bubbleDispatchConfig)
+        null != topLevelType &&
           null != topLevelType.dispatchConfig.phasedRegistrationNames &&
           topLevelType.dispatchConfig.phasedRegistrationNames.skipBubbling
-            ? topLevelType &&
-              topLevelType.dispatchConfig.phasedRegistrationNames &&
-              traverseTwoPhase(
-                topLevelType._targetInst,
-                accumulateDirectionalDispatches,
-                topLevelType,
-                !0
-              )
-            : forEachAccumulated(
-                topLevelType,
-                accumulateTwoPhaseDispatchesSingle
-              );
-        else if (directDispatchConfig)
-          forEachAccumulated(topLevelType, accumulateDirectDispatchesSingle);
-        else return null;
-        return topLevelType;
-      }
+          ? topLevelType &&
+          topLevelType.dispatchConfig.phasedRegistrationNames &&
+          traverseTwoPhase(
+            topLevelType._targetInst,
+            accumulateDirectionalDispatches,
+            topLevelType,
+            !0
+          )
+          : forEachAccumulated(
+            topLevelType,
+            accumulateTwoPhaseDispatchesSingle
+          );
+      else if (directDispatchConfig)
+        forEachAccumulated(topLevelType, accumulateDirectDispatchesSingle);
+      else return null;
+      return topLevelType;
     }
-  },
+  }
+},
   isOrderingDirty$jscomp$inline_235 = !1,
   pluginName$jscomp$inline_236;
 for (pluginName$jscomp$inline_236 in injectedNamesToPlugins$jscomp$inline_234)
@@ -952,12 +960,12 @@ for (pluginName$jscomp$inline_236 in injectedNamesToPlugins$jscomp$inline_234)
     if (
       !namesToPlugins.hasOwnProperty(pluginName$jscomp$inline_236) ||
       namesToPlugins[pluginName$jscomp$inline_236] !==
-        pluginModule$jscomp$inline_237
+      pluginModule$jscomp$inline_237
     ) {
       if (namesToPlugins[pluginName$jscomp$inline_236])
         throw Error(
           "EventPluginRegistry: Cannot inject two different event plugins using the same name, `" +
-            (pluginName$jscomp$inline_236 + "`.")
+          (pluginName$jscomp$inline_236 + "`.")
         );
       namesToPlugins[pluginName$jscomp$inline_236] =
         pluginModule$jscomp$inline_237;
@@ -1043,9 +1051,9 @@ function _receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam) {
       if (hasError)
         throw (
           ((JSCompiler_inline_result = caughtError),
-          (hasError = !1),
-          (caughtError = null),
-          JSCompiler_inline_result)
+            (hasError = !1),
+            (caughtError = null),
+            JSCompiler_inline_result)
         );
     }
   });
@@ -1104,14 +1112,14 @@ ResponderEventPlugin.injection.injectGlobalResponderHandler({
   onChange: function (from, to, blockNativeResponder) {
     null !== to
       ? ReactNativePrivateInterface.UIManager.setJSResponder(
-          to.stateNode._nativeTag,
-          blockNativeResponder
-        )
+        to.stateNode._nativeTag,
+        blockNativeResponder
+      )
       : ReactNativePrivateInterface.UIManager.clearJSResponder();
   }
 });
 var ReactSharedInternals =
-    React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
+  React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
   REACT_ELEMENT_TYPE = Symbol.for("react.element"),
   REACT_PORTAL_TYPE = Symbol.for("react.portal"),
   REACT_FRAGMENT_TYPE = Symbol.for("react.fragment"),
@@ -1143,7 +1151,7 @@ Symbol.for("react.client.reference");
 function getNearestMountedFiber(fiber) {
   var node = fiber,
     nearestMounted = fiber;
-  if (fiber.alternate) for (; node.return; ) node = node.return;
+  if (fiber.alternate) for (; node.return;) node = node.return;
   else {
     fiber = node;
     do
@@ -1166,7 +1174,7 @@ function findCurrentFiberUsingSlowPath(fiber) {
       throw Error("Unable to find node on an unmounted component.");
     return alternate !== fiber ? null : fiber;
   }
-  for (var a = fiber, b = alternate; ; ) {
+  for (var a = fiber, b = alternate; ;) {
     var parentA = a.return;
     if (null === parentA) break;
     var parentB = parentA.alternate;
@@ -1179,7 +1187,7 @@ function findCurrentFiberUsingSlowPath(fiber) {
       break;
     }
     if (parentA.child === parentB.child) {
-      for (parentB = parentA.child; parentB; ) {
+      for (parentB = parentA.child; parentB;) {
         if (parentB === a) return assertIsMounted(parentA), fiber;
         if (parentB === b) return assertIsMounted(parentA), alternate;
         parentB = parentB.sibling;
@@ -1188,7 +1196,7 @@ function findCurrentFiberUsingSlowPath(fiber) {
     }
     if (a.return !== b.return) (a = parentA), (b = parentB);
     else {
-      for (var didFindChild = !1, child$1 = parentA.child; child$1; ) {
+      for (var didFindChild = !1, child$1 = parentA.child; child$1;) {
         if (child$1 === a) {
           didFindChild = !0;
           a = parentA;
@@ -1204,7 +1212,7 @@ function findCurrentFiberUsingSlowPath(fiber) {
         child$1 = child$1.sibling;
       }
       if (!didFindChild) {
-        for (child$1 = parentB.child; child$1; ) {
+        for (child$1 = parentB.child; child$1;) {
           if (child$1 === a) {
             didFindChild = !0;
             a = parentB;
@@ -1241,7 +1249,7 @@ function findCurrentHostFiber(parent) {
 function findCurrentHostFiberImpl(node) {
   var tag = node.tag;
   if (5 === tag || 26 === tag || 27 === tag || 6 === tag) return node;
-  for (node = node.child; null !== node; ) {
+  for (node = node.child; null !== node;) {
     tag = findCurrentHostFiberImpl(node);
     if (null !== tag) return tag;
     node = node.sibling;
@@ -1256,10 +1264,10 @@ function defaultDiffer(prevProp, nextProp) {
   return "object" !== typeof nextProp || null === nextProp
     ? !0
     : ReactNativePrivateInterface.deepDiffer(
-        prevProp,
-        nextProp,
-        deepDifferOptions
-      );
+      prevProp,
+      nextProp,
+      deepDifferOptions
+    );
 }
 function restoreDeletedValuesInNestedArray(
   updatePayload,
@@ -1267,7 +1275,7 @@ function restoreDeletedValuesInNestedArray(
   validAttributes
 ) {
   if (isArrayImpl(node))
-    for (var i = node.length; i-- && 0 < removedKeyCount; )
+    for (var i = node.length; i-- && 0 < removedKeyCount;)
       restoreDeletedValuesInNestedArray(
         updatePayload,
         node[i],
@@ -1310,13 +1318,13 @@ function diffNestedProperty(
     return nextProp
       ? addNestedProperty(updatePayload, nextProp, validAttributes)
       : prevProp
-      ? clearNestedProperty(updatePayload, prevProp, validAttributes)
-      : updatePayload;
+        ? clearNestedProperty(updatePayload, prevProp, validAttributes)
+        : updatePayload;
   if (!isArrayImpl(prevProp) && !isArrayImpl(nextProp))
     return diffProperties(updatePayload, prevProp, nextProp, validAttributes);
   if (isArrayImpl(prevProp) && isArrayImpl(nextProp)) {
     var minLength =
-        prevProp.length < nextProp.length ? prevProp.length : nextProp.length,
+      prevProp.length < nextProp.length ? prevProp.length : nextProp.length,
       i;
     for (i = 0; i < minLength; i++)
       updatePayload = diffNestedProperty(
@@ -1341,17 +1349,17 @@ function diffNestedProperty(
   }
   return isArrayImpl(prevProp)
     ? diffProperties(
-        updatePayload,
-        ReactNativePrivateInterface.flattenStyle(prevProp),
-        nextProp,
-        validAttributes
-      )
+      updatePayload,
+      ReactNativePrivateInterface.flattenStyle(prevProp),
+      nextProp,
+      validAttributes
+    )
     : diffProperties(
-        updatePayload,
-        prevProp,
-        ReactNativePrivateInterface.flattenStyle(nextProp),
-        validAttributes
-      );
+      updatePayload,
+      prevProp,
+      ReactNativePrivateInterface.flattenStyle(nextProp),
+      validAttributes
+    );
 }
 function addNestedProperty(updatePayload, nextProp, validAttributes) {
   if (!nextProp) return updatePayload;
@@ -1397,7 +1405,7 @@ function diffProperties(updatePayload, prevProps, nextProps, validAttributes) {
         ((nextProp = !0), "function" === typeof prevProp && (prevProp = !0));
       "undefined" === typeof nextProp &&
         ((nextProp = null),
-        "undefined" === typeof prevProp && (prevProp = null));
+          "undefined" === typeof prevProp && (prevProp = null));
       removedKeys && (removedKeys[propKey] = !1);
       if (updatePayload && void 0 !== updatePayload[propKey])
         if ("object" !== typeof attributeConfig)
@@ -1443,12 +1451,12 @@ function diffProperties(updatePayload, prevProps, nextProps, validAttributes) {
               attributeConfig
             )),
             0 < removedKeyCount &&
-              updatePayload &&
-              (restoreDeletedValuesInNestedArray(
-                updatePayload,
-                nextProp,
-                attributeConfig
-              ),
+            updatePayload &&
+            (restoreDeletedValuesInNestedArray(
+              updatePayload,
+              nextProp,
+              attributeConfig
+            ),
               (removedKeys = null));
     }
   for (var propKey$3 in prevProps)
@@ -1456,19 +1464,19 @@ function diffProperties(updatePayload, prevProps, nextProps, validAttributes) {
       (!(attributeConfig = validAttributes[propKey$3]) ||
         (updatePayload && void 0 !== updatePayload[propKey$3]) ||
         ((prevProp = prevProps[propKey$3]),
-        void 0 !== prevProp &&
+          void 0 !== prevProp &&
           ("object" !== typeof attributeConfig ||
-          "function" === typeof attributeConfig.diff ||
-          "function" === typeof attributeConfig.process
+            "function" === typeof attributeConfig.diff ||
+            "function" === typeof attributeConfig.process
             ? (((updatePayload || (updatePayload = {}))[propKey$3] = null),
               removedKeys || (removedKeys = {}),
               removedKeys[propKey$3] ||
-                ((removedKeys[propKey$3] = !0), removedKeyCount++))
+              ((removedKeys[propKey$3] = !0), removedKeyCount++))
             : (updatePayload = clearNestedProperty(
-                updatePayload,
-                prevProp,
-                attributeConfig
-              )))));
+              updatePayload,
+              prevProp,
+              attributeConfig
+            )))));
   return updatePayload;
 }
 function mountSafeCallback_NOT_REALLY_SAFE(context, callback) {
@@ -1481,61 +1489,61 @@ function mountSafeCallback_NOT_REALLY_SAFE(context, callback) {
   };
 }
 var ReactNativeFiberHostComponent = (function () {
-    function ReactNativeFiberHostComponent(tag, viewConfig) {
-      this.viewConfig = this._internalFiberInstanceHandleDEV = void 0;
-      this._nativeTag = tag;
-      this._children = [];
-      this.viewConfig = viewConfig;
-    }
-    var _proto = ReactNativeFiberHostComponent.prototype;
-    _proto.blur = function () {
-      ReactNativePrivateInterface.TextInputState.blurTextInput(this);
-    };
-    _proto.focus = function () {
-      ReactNativePrivateInterface.TextInputState.focusTextInput(this);
-    };
-    _proto.measure = function (callback) {
-      ReactNativePrivateInterface.UIManager.measure(
+  function ReactNativeFiberHostComponent(tag, viewConfig) {
+    this.viewConfig = this._internalFiberInstanceHandleDEV = void 0;
+    this._nativeTag = tag;
+    this._children = [];
+    this.viewConfig = viewConfig;
+  }
+  var _proto = ReactNativeFiberHostComponent.prototype;
+  _proto.blur = function () {
+    ReactNativePrivateInterface.TextInputState.blurTextInput(this);
+  };
+  _proto.focus = function () {
+    ReactNativePrivateInterface.TextInputState.focusTextInput(this);
+  };
+  _proto.measure = function (callback) {
+    ReactNativePrivateInterface.UIManager.measure(
+      this._nativeTag,
+      mountSafeCallback_NOT_REALLY_SAFE(this, callback)
+    );
+  };
+  _proto.measureInWindow = function (callback) {
+    ReactNativePrivateInterface.UIManager.measureInWindow(
+      this._nativeTag,
+      mountSafeCallback_NOT_REALLY_SAFE(this, callback)
+    );
+  };
+  _proto.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
+    if ("number" === typeof relativeToNativeNode)
+      var relativeNode = relativeToNativeNode;
+    else
+      relativeToNativeNode._nativeTag &&
+        (relativeNode = relativeToNativeNode._nativeTag);
+    null != relativeNode &&
+      ReactNativePrivateInterface.UIManager.measureLayout(
         this._nativeTag,
-        mountSafeCallback_NOT_REALLY_SAFE(this, callback)
+        relativeNode,
+        mountSafeCallback_NOT_REALLY_SAFE(this, onFail),
+        mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess)
       );
-    };
-    _proto.measureInWindow = function (callback) {
-      ReactNativePrivateInterface.UIManager.measureInWindow(
+  };
+  _proto.setNativeProps = function (nativeProps) {
+    nativeProps = diffProperties(
+      null,
+      emptyObject,
+      nativeProps,
+      this.viewConfig.validAttributes
+    );
+    null != nativeProps &&
+      ReactNativePrivateInterface.UIManager.updateView(
         this._nativeTag,
-        mountSafeCallback_NOT_REALLY_SAFE(this, callback)
-      );
-    };
-    _proto.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
-      if ("number" === typeof relativeToNativeNode)
-        var relativeNode = relativeToNativeNode;
-      else
-        relativeToNativeNode._nativeTag &&
-          (relativeNode = relativeToNativeNode._nativeTag);
-      null != relativeNode &&
-        ReactNativePrivateInterface.UIManager.measureLayout(
-          this._nativeTag,
-          relativeNode,
-          mountSafeCallback_NOT_REALLY_SAFE(this, onFail),
-          mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess)
-        );
-    };
-    _proto.setNativeProps = function (nativeProps) {
-      nativeProps = diffProperties(
-        null,
-        emptyObject,
-        nativeProps,
-        this.viewConfig.validAttributes
+        this.viewConfig.uiViewClassName,
+        nativeProps
       );
-      null != nativeProps &&
-        ReactNativePrivateInterface.UIManager.updateView(
-          this._nativeTag,
-          this.viewConfig.uiViewClassName,
-          nativeProps
-        );
-    };
-    return ReactNativeFiberHostComponent;
-  })(),
+  };
+  return ReactNativeFiberHostComponent;
+})(),
   scheduleCallback$2 = Scheduler.unstable_scheduleCallback,
   cancelCallback$1 = Scheduler.unstable_cancelCallback,
   shouldYield = Scheduler.unstable_shouldYield,
@@ -1556,7 +1564,7 @@ function onCommitRoot(root) {
         void 0,
         128 === (root.current.flags & 128)
       );
-    } catch (err) {}
+    } catch (err) { }
 }
 var clz32 = Math.clz32 ? Math.clz32 : clz32Fallback,
   log = Math.log,
@@ -1643,11 +1651,11 @@ function getNextLanes(root, wipLanes) {
       wipLanes !== nextLanes &&
       0 === (wipLanes & suspendedLanes) &&
       ((suspendedLanes = nextLanes & -nextLanes),
-      (root = wipLanes & -wipLanes),
-      suspendedLanes >= root ||
+        (root = wipLanes & -wipLanes),
+        suspendedLanes >= root ||
         (32 === suspendedLanes && 0 !== (root & 4194176)))
-    ? wipLanes
-    : nextLanes;
+      ? wipLanes
+      : nextLanes;
 }
 function computeExpirationTime(lane, currentTime) {
   switch (lane) {
@@ -1728,7 +1736,7 @@ function markRootFinished(root, remainingLanes, spawnedLane) {
   remainingLanes = root.entanglements;
   for (
     var expirationTimes = root.expirationTimes,
-      hiddenUpdates = root.hiddenUpdates;
+    hiddenUpdates = root.hiddenUpdates;
     0 < noLongerPendingLanes;
 
   ) {
@@ -1762,7 +1770,7 @@ function markSpawnedDeferredLane(root, spawnedLane, entangledLanes) {
 }
 function markRootEntangled(root, entangledLanes) {
   var rootEntangledLanes = (root.entangledLanes |= entangledLanes);
-  for (root = root.entanglements; rootEntangledLanes; ) {
+  for (root = root.entanglements; rootEntangledLanes;) {
     var index$8 = 31 - clz32(rootEntangledLanes),
       lane = 1 << index$8;
     (lane & entangledLanes) | (root[index$8] & entangledLanes) &&
@@ -1787,7 +1795,7 @@ function shim$1() {
   );
 }
 var getViewConfigForType =
-    ReactNativePrivateInterface.ReactNativeViewConfigRegistry.get,
+  ReactNativePrivateInterface.ReactNativeViewConfigRegistry.get,
   nextReactTag = 3;
 function allocateTag() {
   var tag = nextReactTag;
@@ -1872,7 +1880,7 @@ function pushHostContext(fiber) {
       : context;
   context !== JSCompiler_inline_result &&
     (push(contextFiberStackCursor, fiber),
-    push(contextStackCursor, JSCompiler_inline_result));
+      push(contextStackCursor, JSCompiler_inline_result));
 }
 function popHostContext(fiber) {
   contextFiberStackCursor.current === fiber &&
@@ -1885,7 +1893,7 @@ var hydrationErrors = null,
 function finishQueueingConcurrentUpdates() {
   for (
     var endIndex = concurrentQueuesIndex,
-      i = (concurrentlyUpdatedLanes = concurrentQueuesIndex = 0);
+    i = (concurrentlyUpdatedLanes = concurrentQueuesIndex = 0);
     i < endIndex;
 
   ) {
@@ -1925,12 +1933,12 @@ function markUpdateLaneFromFiberToRoot(sourceFiber, update, lane) {
   sourceFiber.lanes |= lane;
   var alternate = sourceFiber.alternate;
   null !== alternate && (alternate.lanes |= lane);
-  for (var isHidden = !1, parent = sourceFiber.return; null !== parent; )
+  for (var isHidden = !1, parent = sourceFiber.return; null !== parent;)
     (parent.childLanes |= lane),
       (alternate = parent.alternate),
       null !== alternate && (alternate.childLanes |= lane),
       22 === parent.tag &&
-        ((sourceFiber = parent.stateNode),
+      ((sourceFiber = parent.stateNode),
         null === sourceFiber || sourceFiber._visibility & 1 || (isHidden = !0)),
       (sourceFiber = parent),
       (parent = parent.return);
@@ -1938,24 +1946,24 @@ function markUpdateLaneFromFiberToRoot(sourceFiber, update, lane) {
     null !== update &&
     3 === sourceFiber.tag &&
     ((parent = sourceFiber.stateNode),
-    (isHidden = 31 - clz32(lane)),
-    (parent = parent.hiddenUpdates),
-    (sourceFiber = parent[isHidden]),
-    null === sourceFiber
-      ? (parent[isHidden] = [update])
-      : sourceFiber.push(update),
-    (update.lane = lane | 536870912));
+      (isHidden = 31 - clz32(lane)),
+      (parent = parent.hiddenUpdates),
+      (sourceFiber = parent[isHidden]),
+      null === sourceFiber
+        ? (parent[isHidden] = [update])
+        : sourceFiber.push(update),
+      (update.lane = lane | 536870912));
 }
 function getRootForUpdatedFiber(sourceFiber) {
   if (50 < nestedUpdateCount)
     throw (
       ((nestedUpdateCount = 0),
-      (rootWithNestedUpdates = null),
-      Error(
-        "Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops."
-      ))
+        (rootWithNestedUpdates = null),
+        Error(
+          "Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops."
+        ))
     );
-  for (var parent = sourceFiber.return; null !== parent; )
+  for (var parent = sourceFiber.return; null !== parent;)
     (sourceFiber = parent), (parent = sourceFiber.return);
   return 3 === sourceFiber.tag ? sourceFiber.stateNode : null;
 }
@@ -1974,7 +1982,7 @@ function ensureRootIsScheduled(root) {
   mightHavePendingSyncWork = !0;
   didScheduleMicrotask ||
     ((didScheduleMicrotask = !0),
-    scheduleCallback$2(ImmediatePriority, processRootScheduleInMicrotask));
+      scheduleCallback$2(ImmediatePriority, processRootScheduleInMicrotask));
   scheduleTaskForRootDuringMicrotask(root, now());
 }
 function flushSyncWorkAcrossRoots_impl(onlyLegacy) {
@@ -1983,7 +1991,7 @@ function flushSyncWorkAcrossRoots_impl(onlyLegacy) {
     isFlushingWork = !0;
     do {
       var didPerformSomeWork = !1;
-      for (var root = firstScheduledRoot; null !== root; ) {
+      for (var root = firstScheduledRoot; null !== root;) {
         if (!onlyLegacy || 0 === root.tag) {
           var workInProgressRootRenderLanes$11 = workInProgressRootRenderLanes,
             nextLanes = getNextLanes(
@@ -2012,32 +2020,32 @@ function flushSyncWorkAcrossRoots_impl(onlyLegacy) {
                     );
                   0 !== errorRetryLanes &&
                     ((nextLanes = errorRetryLanes),
-                    (exitStatus = recoverFromConcurrentError(
-                      workInProgressRootRenderLanes$11,
-                      originallyAttemptedLanes,
-                      errorRetryLanes
-                    )));
+                      (exitStatus = recoverFromConcurrentError(
+                        workInProgressRootRenderLanes$11,
+                        originallyAttemptedLanes,
+                        errorRetryLanes
+                      )));
                 }
                 if (1 === exitStatus)
                   throw (
                     ((originallyAttemptedLanes = workInProgressRootFatalError),
-                    prepareFreshStack(workInProgressRootRenderLanes$11, 0),
-                    markRootSuspended(
-                      workInProgressRootRenderLanes$11,
-                      nextLanes,
-                      0
-                    ),
-                    ensureRootIsScheduled(workInProgressRootRenderLanes$11),
-                    originallyAttemptedLanes)
+                      prepareFreshStack(workInProgressRootRenderLanes$11, 0),
+                      markRootSuspended(
+                        workInProgressRootRenderLanes$11,
+                        nextLanes,
+                        0
+                      ),
+                      ensureRootIsScheduled(workInProgressRootRenderLanes$11),
+                      originallyAttemptedLanes)
                   );
                 6 === exitStatus
                   ? markRootSuspended(
-                      workInProgressRootRenderLanes$11,
-                      nextLanes,
-                      workInProgressDeferredLane
-                    )
+                    workInProgressRootRenderLanes$11,
+                    nextLanes,
+                    workInProgressDeferredLane
+                  )
                   : ((workInProgressRootRenderLanes$11.finishedWork =
-                      workInProgressRootRenderLanes$11.current.alternate),
+                    workInProgressRootRenderLanes$11.current.alternate),
                     (workInProgressRootRenderLanes$11.finishedLanes =
                       nextLanes),
                     commitRoot(
@@ -2095,9 +2103,9 @@ function processRootScheduleInMicrotask() {
 function scheduleTaskForRootDuringMicrotask(root, currentTime) {
   for (
     var suspendedLanes = root.suspendedLanes,
-      pingedLanes = root.pingedLanes,
-      expirationTimes = root.expirationTimes,
-      lanes = root.pendingLanes & -62914561;
+    pingedLanes = root.pingedLanes,
+    expirationTimes = root.expirationTimes,
+    lanes = root.pendingLanes & -62914561;
     0 < lanes;
 
   ) {
@@ -2124,16 +2132,16 @@ function scheduleTaskForRootDuringMicrotask(root, currentTime) {
   )
     return (
       null !== pingedLanes &&
-        null !== pingedLanes &&
-        cancelCallback$1(pingedLanes),
+      null !== pingedLanes &&
+      cancelCallback$1(pingedLanes),
       (root.callbackNode = null),
       (root.callbackPriority = 0)
     );
   if (0 !== (suspendedLanes & 3))
     return (
       null !== pingedLanes &&
-        null !== pingedLanes &&
-        cancelCallback$1(pingedLanes),
+      null !== pingedLanes &&
+      cancelCallback$1(pingedLanes),
       (root.callbackPriority = 2),
       (root.callbackNode = null),
       2
@@ -2281,12 +2289,12 @@ function processUpdateQueue(
     var current = workInProgress$jscomp$0.alternate;
     null !== current &&
       ((current = current.updateQueue),
-      (pendingQueue = current.lastBaseUpdate),
-      pendingQueue !== lastBaseUpdate &&
+        (pendingQueue = current.lastBaseUpdate),
+        pendingQueue !== lastBaseUpdate &&
         (null === pendingQueue
           ? (current.firstBaseUpdate = firstPendingUpdate)
           : (pendingQueue.next = firstPendingUpdate),
-        (current.lastBaseUpdate = lastPendingUpdate)));
+          (current.lastBaseUpdate = lastPendingUpdate)));
   }
   if (null !== firstBaseUpdate) {
     var newState = queue.baseState;
@@ -2303,13 +2311,13 @@ function processUpdateQueue(
       ) {
         null !== current &&
           (current = current.next =
-            {
-              lane: 0,
-              tag: pendingQueue.tag,
-              payload: pendingQueue.payload,
-              callback: null,
-              next: null
-            });
+          {
+            lane: 0,
+            tag: pendingQueue.tag,
+            payload: pendingQueue.payload,
+            callback: null,
+            next: null
+          });
         a: {
           var workInProgress = workInProgress$jscomp$0,
             update = pendingQueue;
@@ -2342,11 +2350,11 @@ function processUpdateQueue(
         updateLane = pendingQueue.callback;
         null !== updateLane &&
           ((workInProgress$jscomp$0.flags |= 64),
-          isHiddenUpdate && (workInProgress$jscomp$0.flags |= 8192),
-          (isHiddenUpdate = queue.callbacks),
-          null === isHiddenUpdate
-            ? (queue.callbacks = [updateLane])
-            : isHiddenUpdate.push(updateLane));
+            isHiddenUpdate && (workInProgress$jscomp$0.flags |= 8192),
+            (isHiddenUpdate = queue.callbacks),
+            null === isHiddenUpdate
+              ? (queue.callbacks = [updateLane])
+              : isHiddenUpdate.push(updateLane));
       } else
         (isHiddenUpdate = {
           lane: updateLane,
@@ -2385,7 +2393,7 @@ function callCallback(callback, context) {
   if ("function" !== typeof callback)
     throw Error(
       "Invalid argument passed as callback. Expected a function. Instead received: " +
-        callback
+      callback
     );
   callback.call(context);
 }
@@ -2469,17 +2477,17 @@ function getStackByFiberInDevAndProd(workInProgress) {
   }
 }
 var SuspenseException = Error(
-    "Suspense Exception: This is not a real error! It's an implementation detail of `use` to interrupt the current render. You must either rethrow it immediately, or move the `use` call outside of the `try/catch` block. Capturing without rethrowing will lead to unexpected behavior.\n\nTo handle async errors, wrap your component in an error boundary, or call the promise's `.catch` method and pass the result to `use`"
-  ),
+  "Suspense Exception: This is not a real error! It's an implementation detail of `use` to interrupt the current render. You must either rethrow it immediately, or move the `use` call outside of the `try/catch` block. Capturing without rethrowing will lead to unexpected behavior.\n\nTo handle async errors, wrap your component in an error boundary, or call the promise's `.catch` method and pass the result to `use`"
+),
   SuspenseyCommitException = Error(
     "Suspense Exception: This is not a real error, and should not leak into userspace. If you're seeing this, it's likely a bug in React."
   ),
-  noopSuspenseyCommitThenable = { then: function () {} };
+  noopSuspenseyCommitThenable = { then: function () { } };
 function isThenableResolved(thenable) {
   thenable = thenable.status;
   return "fulfilled" === thenable || "rejected" === thenable;
 }
-function noop() {}
+function noop() { }
 function trackUsedThenable(thenableState, thenable, index) {
   index = thenableState[index];
   void 0 === index
@@ -2491,8 +2499,8 @@ function trackUsedThenable(thenableState, thenable, index) {
     case "rejected":
       throw (
         ((thenableState = thenable.reason),
-        checkIfUseWrappedInAsyncCatch(thenableState),
-        thenableState)
+          checkIfUseWrappedInAsyncCatch(thenableState),
+          thenableState)
       );
     default:
       if ("string" === typeof thenable.status) thenable.then(noop, noop);
@@ -2527,8 +2535,8 @@ function trackUsedThenable(thenableState, thenable, index) {
         case "rejected":
           throw (
             ((thenableState = thenable.reason),
-            checkIfUseWrappedInAsyncCatch(thenableState),
-            thenableState)
+              checkIfUseWrappedInAsyncCatch(thenableState),
+              thenableState)
           );
       }
       suspendedThenable = thenable;
@@ -2574,8 +2582,8 @@ function convertStringRefToCallbackRef(
   if (!returnFiber)
     throw Error(
       "Element ref was specified as a string (" +
-        stringRef +
-        ") but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a function component\n2. You may be adding a ref to a component that was not created inside a component's render method\n3. You have multiple copies of React loaded\nSee https://react.dev/link/refs-must-have-owner for more information."
+      stringRef +
+      ") but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a function component\n2. You may be adding a ref to a component that was not created inside a component's render method\n3. You have multiple copies of React loaded\nSee https://react.dev/link/refs-must-have-owner for more information."
     );
   if (1 !== returnFiber.tag)
     throw Error(
@@ -2585,8 +2593,8 @@ function convertStringRefToCallbackRef(
   if (!inst)
     throw Error(
       "Missing owner for string ref " +
-        stringRef +
-        ". This error is likely caused by a bug in React. Please file an issue."
+      stringRef +
+      ". This error is likely caused by a bug in React. Please file an issue."
     );
   if (
     null !== current &&
@@ -2602,8 +2610,8 @@ function coerceRef(returnFiber, current, workInProgress, element) {
   var mixedRef = element.ref;
   returnFiber =
     "string" === typeof mixedRef ||
-    "number" === typeof mixedRef ||
-    "boolean" === typeof mixedRef
+      "number" === typeof mixedRef ||
+      "boolean" === typeof mixedRef
       ? convertStringRefToCallbackRef(returnFiber, current, element, mixedRef)
       : mixedRef;
   workInProgress.ref = returnFiber;
@@ -2612,10 +2620,10 @@ function throwOnInvalidObjectType(returnFiber, newChild) {
   returnFiber = Object.prototype.toString.call(newChild);
   throw Error(
     "Objects are not valid as a React child (found: " +
-      ("[object Object]" === returnFiber
-        ? "object with keys {" + Object.keys(newChild).join(", ") + "}"
-        : returnFiber) +
-      "). If you meant to render a collection of children, use an array instead."
+    ("[object Object]" === returnFiber
+      ? "object with keys {" + Object.keys(newChild).join(", ") + "}"
+      : returnFiber) +
+    "). If you meant to render a collection of children, use an array instead."
   );
 }
 function resolveLazy(lazyType) {
@@ -2633,13 +2641,13 @@ function createChildReconciler(shouldTrackSideEffects) {
   }
   function deleteRemainingChildren(returnFiber, currentFirstChild) {
     if (!shouldTrackSideEffects) return null;
-    for (; null !== currentFirstChild; )
+    for (; null !== currentFirstChild;)
       deleteChild(returnFiber, currentFirstChild),
         (currentFirstChild = currentFirstChild.sibling);
     return null;
   }
   function mapRemainingChildren(currentFirstChild) {
-    for (var existingChildren = new Map(); null !== currentFirstChild; )
+    for (var existingChildren = new Map(); null !== currentFirstChild;)
       null !== currentFirstChild.key
         ? existingChildren.set(currentFirstChild.key, currentFirstChild)
         : existingChildren.set(currentFirstChild.index, currentFirstChild),
@@ -2942,10 +2950,10 @@ function createChildReconciler(shouldTrackSideEffects) {
   ) {
     for (
       var resultingFirstChild = null,
-        previousNewFiber = null,
-        oldFiber = currentFirstChild,
-        newIdx = (currentFirstChild = 0),
-        nextOldFiber = null;
+      previousNewFiber = null,
+      oldFiber = currentFirstChild,
+      newIdx = (currentFirstChild = 0),
+      nextOldFiber = null;
       null !== oldFiber && newIdx < newChildren.length;
       newIdx++
     ) {
@@ -2981,11 +2989,11 @@ function createChildReconciler(shouldTrackSideEffects) {
       for (; newIdx < newChildren.length; newIdx++)
         (oldFiber = createChild(returnFiber, newChildren[newIdx], lanes)),
           null !== oldFiber &&
-            ((currentFirstChild = placeChild(
-              oldFiber,
-              currentFirstChild,
-              newIdx
-            )),
+          ((currentFirstChild = placeChild(
+            oldFiber,
+            currentFirstChild,
+            newIdx
+          )),
             null === previousNewFiber
               ? (resultingFirstChild = oldFiber)
               : (previousNewFiber.sibling = oldFiber),
@@ -3005,11 +3013,11 @@ function createChildReconciler(shouldTrackSideEffects) {
         lanes
       )),
         null !== nextOldFiber &&
-          (shouldTrackSideEffects &&
-            null !== nextOldFiber.alternate &&
-            oldFiber.delete(
-              null === nextOldFiber.key ? newIdx : nextOldFiber.key
-            ),
+        (shouldTrackSideEffects &&
+          null !== nextOldFiber.alternate &&
+          oldFiber.delete(
+            null === nextOldFiber.key ? newIdx : nextOldFiber.key
+          ),
           (currentFirstChild = placeChild(
             nextOldFiber,
             currentFirstChild,
@@ -3041,10 +3049,10 @@ function createChildReconciler(shouldTrackSideEffects) {
       throw Error("An iterable object provided no iterator.");
     for (
       var previousNewFiber = (iteratorFn = null),
-        oldFiber = currentFirstChild,
-        newIdx = (currentFirstChild = 0),
-        nextOldFiber = null,
-        step = newChildrenIterable.next();
+      oldFiber = currentFirstChild,
+      newIdx = (currentFirstChild = 0),
+      nextOldFiber = null,
+      step = newChildrenIterable.next();
       null !== oldFiber && !step.done;
       newIdx++, step = newChildrenIterable.next()
     ) {
@@ -3073,7 +3081,7 @@ function createChildReconciler(shouldTrackSideEffects) {
       for (; !step.done; newIdx++, step = newChildrenIterable.next())
         (step = createChild(returnFiber, step.value, lanes)),
           null !== step &&
-            ((currentFirstChild = placeChild(step, currentFirstChild, newIdx)),
+          ((currentFirstChild = placeChild(step, currentFirstChild, newIdx)),
             null === previousNewFiber
               ? (iteratorFn = step)
               : (previousNewFiber.sibling = step),
@@ -3087,9 +3095,9 @@ function createChildReconciler(shouldTrackSideEffects) {
     )
       (step = updateFromMap(oldFiber, returnFiber, newIdx, step.value, lanes)),
         null !== step &&
-          (shouldTrackSideEffects &&
-            null !== step.alternate &&
-            oldFiber.delete(null === step.key ? newIdx : step.key),
+        (shouldTrackSideEffects &&
+          null !== step.alternate &&
+          oldFiber.delete(null === step.key ? newIdx : step.key),
           (currentFirstChild = placeChild(step, currentFirstChild, newIdx)),
           null === previousNewFiber
             ? (iteratorFn = step)
@@ -3155,21 +3163,21 @@ function createChildReconciler(shouldTrackSideEffects) {
             }
             newChild.type === REACT_FRAGMENT_TYPE
               ? ((currentFirstChild = createFiberFromFragment(
-                  newChild.props.children,
-                  returnFiber.mode,
-                  lanes,
-                  newChild.key
-                )),
+                newChild.props.children,
+                returnFiber.mode,
+                lanes,
+                newChild.key
+              )),
                 (currentFirstChild.return = returnFiber),
                 (returnFiber = currentFirstChild))
               : ((lanes = createFiberFromTypeAndProps(
-                  newChild.type,
-                  newChild.key,
-                  newChild.props,
-                  null,
-                  returnFiber.mode,
-                  lanes
-                )),
+                newChild.type,
+                newChild.key,
+                newChild.props,
+                null,
+                returnFiber.mode,
+                lanes
+              )),
                 coerceRef(returnFiber, currentFirstChild, lanes, newChild),
                 (lanes.return = returnFiber),
                 (returnFiber = lanes));
@@ -3177,14 +3185,14 @@ function createChildReconciler(shouldTrackSideEffects) {
           return placeSingleChild(returnFiber);
         case REACT_PORTAL_TYPE:
           a: {
-            for (child = newChild.key; null !== currentFirstChild; ) {
+            for (child = newChild.key; null !== currentFirstChild;) {
               if (currentFirstChild.key === child)
                 if (
                   4 === currentFirstChild.tag &&
                   currentFirstChild.stateNode.containerInfo ===
-                    newChild.containerInfo &&
+                  newChild.containerInfo &&
                   currentFirstChild.stateNode.implementation ===
-                    newChild.implementation
+                  newChild.implementation
                 ) {
                   deleteRemainingChildren(
                     returnFiber,
@@ -3319,8 +3327,8 @@ function pushOffscreenSuspenseHandler(fiber) {
   if (22 === fiber.tag) {
     if (
       (push(suspenseStackCursor, suspenseStackCursor.current),
-      push(suspenseHandlerStackCursor, fiber),
-      null === shellBoundary)
+        push(suspenseHandlerStackCursor, fiber),
+        null === shellBoundary)
     ) {
       var current = fiber.alternate;
       null !== current &&
@@ -3340,7 +3348,7 @@ function popSuspenseHandler(fiber) {
 }
 var suspenseStackCursor = createCursor(0);
 function findFirstSuspended(row) {
-  for (var node = row; null !== node; ) {
+  for (var node = row; null !== node;) {
     if (13 === node.tag) {
       var state = node.memoizedState;
       if (null !== state && (null === state.dehydrated || shim$1() || shim$1()))
@@ -3353,7 +3361,7 @@ function findFirstSuspended(row) {
       continue;
     }
     if (node === row) break;
-    for (; null === node.sibling; ) {
+    for (; null === node.sibling;) {
       if (null === node.return || node.return === row) return null;
       node = node.return;
     }
@@ -3515,7 +3523,7 @@ function updateWorkInProgressHook() {
     };
     null === workInProgressHook
       ? (currentlyRenderingFiber$1.memoizedState = workInProgressHook =
-          nextCurrentHook)
+        nextCurrentHook)
       : (workInProgressHook = workInProgressHook.next = nextCurrentHook);
   }
   return workInProgressHook;
@@ -3582,17 +3590,17 @@ function updateReducer(reducer) {
       )
         null !== newBaseQueueLast &&
           (newBaseQueueLast = newBaseQueueLast.next =
-            {
-              lane: 0,
-              revertLane: 0,
-              action: update.action,
-              hasEagerState: update.hasEagerState,
-              eagerState: update.eagerState,
-              next: null
-            }),
+          {
+            lane: 0,
+            revertLane: 0,
+            action: update.action,
+            hasEagerState: update.hasEagerState,
+            eagerState: update.eagerState,
+            next: null
+          }),
           (updateLane = update.action),
           shouldDoubleInvokeUserFnsInHooksDEV &&
-            reducer(pendingQueue, updateLane),
+          reducer(pendingQueue, updateLane),
           (pendingQueue = update.hasEagerState
             ? update.eagerState
             : reducer(pendingQueue, updateLane));
@@ -3772,8 +3780,8 @@ function updateEffectImpl(fiberFlags, hookFlags, create, deps) {
   deps = void 0 === deps ? null : deps;
   var inst = hook.memoizedState.inst;
   null !== currentHook &&
-  null !== deps &&
-  areHookInputsEqual(deps, currentHook.memoizedState.deps)
+    null !== deps &&
+    areHookInputsEqual(deps, currentHook.memoizedState.deps)
     ? (hook.memoizedState = pushEffect(hookFlags, create, inst, deps))
     : ((currentlyRenderingFiber$1.flags |= fiberFlags),
       (hook.memoizedState = pushEffect(1 | hookFlags, create, inst, deps)));
@@ -3812,7 +3820,7 @@ function updateImperativeHandle(ref, create, deps) {
   deps = null !== deps && void 0 !== deps ? deps.concat([ref]) : null;
   updateEffectImpl(4, 4, imperativeHandleEffect.bind(null, create, ref), deps);
 }
-function mountDebugValue() {}
+function mountDebugValue() { }
 function updateCallback(callback, deps) {
   var hook = updateWorkInProgressHook();
   deps = void 0 === deps ? null : deps;
@@ -3893,7 +3901,7 @@ function dispatchReducerAction(fiber, queue, action) {
     : (enqueueUpdate$1(fiber, queue, action, lane),
       (action = getRootForUpdatedFiber(fiber)),
       null !== action &&
-        (scheduleUpdateOnFiber(action, fiber, lane),
+      (scheduleUpdateOnFiber(action, fiber, lane),
         entangleTransitionUpdate(action, queue, lane)));
 }
 function dispatchSetState(fiber, queue, action) {
@@ -3931,7 +3939,7 @@ function dispatchSetState(fiber, queue, action) {
     action = getRootForUpdatedFiber(fiber);
     null !== action &&
       (scheduleUpdateOnFiber(action, fiber, lane),
-      entangleTransitionUpdate(action, queue, lane));
+        entangleTransitionUpdate(action, queue, lane));
   }
 }
 function isRenderPhaseUpdate(fiber) {
@@ -3960,24 +3968,24 @@ function entangleTransitionUpdate(root, queue, lane) {
   }
 }
 var ContextOnlyDispatcher = {
-    readContext: readContext,
-    use: use,
-    useCallback: throwInvalidHookError,
-    useContext: throwInvalidHookError,
-    useEffect: throwInvalidHookError,
-    useImperativeHandle: throwInvalidHookError,
-    useInsertionEffect: throwInvalidHookError,
-    useLayoutEffect: throwInvalidHookError,
-    useMemo: throwInvalidHookError,
-    useReducer: throwInvalidHookError,
-    useRef: throwInvalidHookError,
-    useState: throwInvalidHookError,
-    useDebugValue: throwInvalidHookError,
-    useDeferredValue: throwInvalidHookError,
-    useTransition: throwInvalidHookError,
-    useSyncExternalStore: throwInvalidHookError,
-    useId: throwInvalidHookError
-  },
+  readContext: readContext,
+  use: use,
+  useCallback: throwInvalidHookError,
+  useContext: throwInvalidHookError,
+  useEffect: throwInvalidHookError,
+  useImperativeHandle: throwInvalidHookError,
+  useInsertionEffect: throwInvalidHookError,
+  useLayoutEffect: throwInvalidHookError,
+  useMemo: throwInvalidHookError,
+  useReducer: throwInvalidHookError,
+  useRef: throwInvalidHookError,
+  useState: throwInvalidHookError,
+  useDebugValue: throwInvalidHookError,
+  useDeferredValue: throwInvalidHookError,
+  useTransition: throwInvalidHookError,
+  useSyncExternalStore: throwInvalidHookError,
+  useId: throwInvalidHookError
+},
   HooksDispatcherOnMount = {
     readContext: readContext,
     use: use,
@@ -4161,11 +4169,11 @@ var ContextOnlyDispatcher = {
       return null === currentHook
         ? mountDeferredValueImpl(hook, value, initialValue)
         : updateDeferredValueImpl(
-            hook,
-            currentHook.memoizedState,
-            value,
-            initialValue
-          );
+          hook,
+          currentHook.memoizedState,
+          value,
+          initialValue
+        );
     },
     useTransition: function () {
       var booleanOrThenable = rerenderReducer(basicStateReducer)[0],
@@ -4222,7 +4230,7 @@ var classComponentUpdater = {
     payload = enqueueUpdate(inst, update, lane);
     null !== payload &&
       (scheduleUpdateOnFiber(payload, inst, lane),
-      entangleTransitions(payload, inst, lane));
+        entangleTransitions(payload, inst, lane));
   },
   enqueueReplaceState: function (inst, payload, callback) {
     inst = inst._reactInternals;
@@ -4234,7 +4242,7 @@ var classComponentUpdater = {
     payload = enqueueUpdate(inst, update, lane);
     null !== payload &&
       (scheduleUpdateOnFiber(payload, inst, lane),
-      entangleTransitions(payload, inst, lane));
+        entangleTransitions(payload, inst, lane));
   },
   enqueueForceUpdate: function (inst, callback) {
     inst = inst._reactInternals;
@@ -4245,7 +4253,7 @@ var classComponentUpdater = {
     callback = enqueueUpdate(inst, update, lane);
     null !== callback &&
       (scheduleUpdateOnFiber(callback, inst, lane),
-      entangleTransitions(callback, inst, lane));
+        entangleTransitions(callback, inst, lane));
   }
 };
 function checkShouldComponentUpdate(
@@ -4261,8 +4269,8 @@ function checkShouldComponentUpdate(
   return "function" === typeof workInProgress.shouldComponentUpdate
     ? workInProgress.shouldComponentUpdate(newProps, newState, nextContext)
     : ctor.prototype && ctor.prototype.isPureReactComponent
-    ? !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState)
-    : !0;
+      ? !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState)
+      : !0;
 }
 function constructClassInstance(workInProgress, ctor, props) {
   var context = emptyContextObject,
@@ -4307,20 +4315,20 @@ function mountClassInstance(workInProgress, ctor, newProps, renderLanes) {
   contextType = ctor.getDerivedStateFromProps;
   "function" === typeof contextType &&
     (applyDerivedStateFromProps(workInProgress, ctor, contextType, newProps),
-    (instance.state = workInProgress.memoizedState));
+      (instance.state = workInProgress.memoizedState));
   "function" === typeof ctor.getDerivedStateFromProps ||
     "function" === typeof instance.getSnapshotBeforeUpdate ||
     ("function" !== typeof instance.UNSAFE_componentWillMount &&
       "function" !== typeof instance.componentWillMount) ||
     ((ctor = instance.state),
-    "function" === typeof instance.componentWillMount &&
+      "function" === typeof instance.componentWillMount &&
       instance.componentWillMount(),
-    "function" === typeof instance.UNSAFE_componentWillMount &&
+      "function" === typeof instance.UNSAFE_componentWillMount &&
       instance.UNSAFE_componentWillMount(),
-    ctor !== instance.state &&
+      ctor !== instance.state &&
       classComponentUpdater.enqueueReplaceState(instance, instance.state, null),
-    processUpdateQueue(workInProgress, newProps, instance, renderLanes),
-    (instance.state = workInProgress.memoizedState));
+      processUpdateQueue(workInProgress, newProps, instance, renderLanes),
+      (instance.state = workInProgress.memoizedState));
   "function" === typeof instance.componentDidMount &&
     (workInProgress.flags |= 4194308);
 }
@@ -4330,7 +4338,7 @@ function createCapturedValueAtFiber(value, source) {
     var stack = CapturedStacks.get(value);
     "string" !== typeof stack &&
       ((stack = getStackByFiberInDevAndProd(source)),
-      CapturedStacks.set(value, stack));
+        CapturedStacks.set(value, stack));
   } else stack = getStackByFiberInDevAndProd(source);
   return { value: value, source: source, stack: stack, digest: null };
 }
@@ -4433,11 +4441,11 @@ function throwException(
         case 13:
           return (
             sourceFiber.mode & 1 &&
-              (null === shellBoundary
-                ? renderDidSuspendDelayIfPossible()
-                : null === tag.alternate &&
-                  0 === workInProgressRootExitStatus &&
-                  (workInProgressRootExitStatus = 3)),
+            (null === shellBoundary
+              ? renderDidSuspendDelayIfPossible()
+              : null === tag.alternate &&
+              0 === workInProgressRootExitStatus &&
+              (workInProgressRootExitStatus = 3)),
             (tag.flags &= -257),
             0 === (tag.mode & 1)
               ? tag === returnFiber
@@ -4446,11 +4454,11 @@ function throwException(
                   (sourceFiber.flags |= 131072),
                   (sourceFiber.flags &= -52805),
                   1 === sourceFiber.tag &&
-                    (null === sourceFiber.alternate
-                      ? (sourceFiber.tag = 17)
-                      : ((returnFiber = createUpdate(2)),
-                        (returnFiber.tag = 2),
-                        enqueueUpdate(sourceFiber, returnFiber, 2))),
+                  (null === sourceFiber.alternate
+                    ? (sourceFiber.tag = 17)
+                    : ((returnFiber = createUpdate(2)),
+                      (returnFiber.tag = 2),
+                      enqueueUpdate(sourceFiber, returnFiber, 2))),
                   (sourceFiber.lanes |= 2))
               : ((tag.flags |= 65536), (tag.lanes = rootRenderLanes)),
             value === noopSuspenseyCommitThenable
@@ -4460,7 +4468,7 @@ function throwException(
                   ? (tag.updateQueue = new Set([value]))
                   : returnFiber.add(value),
                 tag.mode & 1 &&
-                  attachPingListener(root, value, rootRenderLanes)),
+                attachPingListener(root, value, rootRenderLanes)),
             !1
           );
         case 22:
@@ -4472,10 +4480,10 @@ function throwException(
                 : ((returnFiber = tag.updateQueue),
                   null === returnFiber
                     ? ((returnFiber = {
-                        transitions: null,
-                        markerInstances: null,
-                        retryQueue: new Set([value])
-                      }),
+                      transitions: null,
+                      markerInstances: null,
+                      retryQueue: new Set([value])
+                    }),
                       (tag.updateQueue = returnFiber))
                     : ((sourceFiber = returnFiber.retryQueue),
                       null === sourceFiber
@@ -4487,8 +4495,8 @@ function throwException(
       }
       throw Error(
         "Unexpected Suspense handler tag (" +
-          tag.tag +
-          "). This is a bug in React."
+        tag.tag +
+        "). This is a bug in React."
       );
     }
     if (1 === root.tag)
@@ -4526,9 +4534,9 @@ function throwException(
       case 1:
         if (
           ((returnFiber = value),
-          (sourceFiber = root.type),
-          (tag = root.stateNode),
-          0 === (root.flags & 128) &&
+            (sourceFiber = root.type),
+            (tag = root.stateNode),
+            0 === (root.flags & 128) &&
             ("function" === typeof sourceFiber.getDerivedStateFromError ||
               (null !== tag &&
                 "function" === typeof tag.componentDidCatch &&
@@ -4562,11 +4570,11 @@ function reconcileChildren(current, workInProgress, nextChildren, renderLanes) {
     null === current
       ? mountChildFibers(workInProgress, null, nextChildren, renderLanes)
       : reconcileChildFibers(
-          workInProgress,
-          current.child,
-          nextChildren,
-          renderLanes
-        );
+        workInProgress,
+        current.child,
+        nextChildren,
+        renderLanes
+      );
 }
 function updateForwardRef(
   current,
@@ -4663,8 +4671,8 @@ function updateSimpleMemoComponent(
     )
       if (
         ((didReceiveUpdate = !1),
-        (workInProgress.pendingProps = nextProps = prevProps),
-        0 !== (current.lanes & renderLanes))
+          (workInProgress.pendingProps = nextProps = prevProps),
+          0 !== (current.lanes & renderLanes))
       )
         0 !== (current.flags & 131072) && (didReceiveUpdate = !0);
       else
@@ -4693,7 +4701,7 @@ function updateOffscreenComponent(current, workInProgress, renderLanes) {
         null !== prevState ? prevState.baseLanes | renderLanes : renderLanes;
       if (null !== current) {
         nextProps = workInProgress.child = current.child;
-        for (nextChildren = 0; null !== nextProps; )
+        for (nextChildren = 0; null !== nextProps;)
           (nextChildren =
             nextChildren | nextProps.lanes | nextProps.childLanes),
             (nextProps = nextProps.sibling);
@@ -4848,12 +4856,12 @@ function updateClassComponent(
     oldContext = workInProgress.memoizedState;
     oldProps !== nextProps || oldState !== oldContext || hasForceUpdate
       ? ("function" === typeof getDerivedStateFromProps &&
-          (applyDerivedStateFromProps(
-            workInProgress,
-            Component,
-            getDerivedStateFromProps,
-            nextProps
-          ),
+        (applyDerivedStateFromProps(
+          workInProgress,
+          Component,
+          getDerivedStateFromProps,
+          nextProps
+        ),
           (oldContext = workInProgress.memoizedState)),
         (oldProps =
           hasForceUpdate ||
@@ -4867,16 +4875,16 @@ function updateClassComponent(
             nextContext
           ))
           ? (contextType ||
-              ("function" !== typeof instance.UNSAFE_componentWillMount &&
-                "function" !== typeof instance.componentWillMount) ||
-              ("function" === typeof instance.componentWillMount &&
-                instance.componentWillMount(),
+            ("function" !== typeof instance.UNSAFE_componentWillMount &&
+              "function" !== typeof instance.componentWillMount) ||
+            ("function" === typeof instance.componentWillMount &&
+              instance.componentWillMount(),
               "function" === typeof instance.UNSAFE_componentWillMount &&
-                instance.UNSAFE_componentWillMount()),
+              instance.UNSAFE_componentWillMount()),
             "function" === typeof instance.componentDidMount &&
-              (workInProgress.flags |= 4194308))
+            (workInProgress.flags |= 4194308))
           : ("function" === typeof instance.componentDidMount &&
-              (workInProgress.flags |= 4194308),
+            (workInProgress.flags |= 4194308),
             (workInProgress.memoizedProps = nextProps),
             (workInProgress.memoizedState = oldContext)),
         (instance.props = nextProps),
@@ -4884,7 +4892,7 @@ function updateClassComponent(
         (instance.context = nextContext),
         (nextProps = oldProps))
       : ("function" === typeof instance.componentDidMount &&
-          (workInProgress.flags |= 4194308),
+        (workInProgress.flags |= 4194308),
         (nextProps = !1));
   } else {
     instance = workInProgress.stateNode;
@@ -4922,15 +4930,15 @@ function updateClassComponent(
     processUpdateQueue(workInProgress, nextProps, instance, renderLanes);
     var newState = workInProgress.memoizedState;
     nextContext !== getDerivedStateFromProps ||
-    oldContext$jscomp$0 !== newState ||
-    hasForceUpdate
+      oldContext$jscomp$0 !== newState ||
+      hasForceUpdate
       ? ("function" === typeof oldState &&
-          (applyDerivedStateFromProps(
-            workInProgress,
-            Component,
-            oldState,
-            nextProps
-          ),
+        (applyDerivedStateFromProps(
+          workInProgress,
+          Component,
+          oldState,
+          nextProps
+        ),
           (newState = workInProgress.memoizedState)),
         (contextType =
           hasForceUpdate ||
@@ -4945,28 +4953,28 @@ function updateClassComponent(
           ) ||
           !1)
           ? (oldContext ||
-              ("function" !== typeof instance.UNSAFE_componentWillUpdate &&
-                "function" !== typeof instance.componentWillUpdate) ||
-              ("function" === typeof instance.componentWillUpdate &&
-                instance.componentWillUpdate(nextProps, newState, oldProps),
+            ("function" !== typeof instance.UNSAFE_componentWillUpdate &&
+              "function" !== typeof instance.componentWillUpdate) ||
+            ("function" === typeof instance.componentWillUpdate &&
+              instance.componentWillUpdate(nextProps, newState, oldProps),
               "function" === typeof instance.UNSAFE_componentWillUpdate &&
-                instance.UNSAFE_componentWillUpdate(
-                  nextProps,
-                  newState,
-                  oldProps
-                )),
+              instance.UNSAFE_componentWillUpdate(
+                nextProps,
+                newState,
+                oldProps
+              )),
             "function" === typeof instance.componentDidUpdate &&
-              (workInProgress.flags |= 4),
+            (workInProgress.flags |= 4),
             "function" === typeof instance.getSnapshotBeforeUpdate &&
-              (workInProgress.flags |= 1024))
+            (workInProgress.flags |= 1024))
           : ("function" !== typeof instance.componentDidUpdate ||
-              (nextContext === current.memoizedProps &&
-                oldContext$jscomp$0 === current.memoizedState) ||
-              (workInProgress.flags |= 4),
+            (nextContext === current.memoizedProps &&
+              oldContext$jscomp$0 === current.memoizedState) ||
+            (workInProgress.flags |= 4),
             "function" !== typeof instance.getSnapshotBeforeUpdate ||
-              (nextContext === current.memoizedProps &&
-                oldContext$jscomp$0 === current.memoizedState) ||
-              (workInProgress.flags |= 1024),
+            (nextContext === current.memoizedProps &&
+              oldContext$jscomp$0 === current.memoizedState) ||
+            (workInProgress.flags |= 1024),
             (workInProgress.memoizedProps = nextProps),
             (workInProgress.memoizedState = newState)),
         (instance.props = nextProps),
@@ -4974,13 +4982,13 @@ function updateClassComponent(
         (instance.context = oldProps),
         (nextProps = contextType))
       : ("function" !== typeof instance.componentDidUpdate ||
-          (nextContext === current.memoizedProps &&
-            oldContext$jscomp$0 === current.memoizedState) ||
-          (workInProgress.flags |= 4),
+        (nextContext === current.memoizedProps &&
+          oldContext$jscomp$0 === current.memoizedState) ||
+        (workInProgress.flags |= 4),
         "function" !== typeof instance.getSnapshotBeforeUpdate ||
-          (nextContext === current.memoizedProps &&
-            oldContext$jscomp$0 === current.memoizedState) ||
-          (workInProgress.flags |= 1024),
+        (nextContext === current.memoizedProps &&
+          oldContext$jscomp$0 === current.memoizedState) ||
+        (workInProgress.flags |= 1024),
         (nextProps = !1));
   }
   return finishClassComponent(
@@ -5013,11 +5021,11 @@ function finishClassComponent(
   workInProgress.flags |= 1;
   null !== current && hasContext
     ? ((workInProgress.child = reconcileChildFibers(
-        workInProgress,
-        current.child,
-        null,
-        renderLanes
-      )),
+      workInProgress,
+      current.child,
+      null,
+      renderLanes
+    )),
       (workInProgress.child = reconcileChildFibers(
         workInProgress,
         null,
@@ -5066,11 +5074,11 @@ function updateSuspenseComponent(current, workInProgress, renderLanes) {
         ? ((progressedPrimaryFragment.childLanes = 0),
           (progressedPrimaryFragment.pendingProps = didSuspend))
         : (progressedPrimaryFragment = createFiberFromOffscreen(
-            didSuspend,
-            showFallback,
-            0,
-            null
-          ));
+          didSuspend,
+          showFallback,
+          0,
+          null
+        ));
       nextProps = createFiberFromFragment(
         nextProps,
         showFallback,
@@ -5122,19 +5130,19 @@ function updateSuspenseComponent(current, workInProgress, renderLanes) {
         (nextProps.pendingProps = primaryChildProps),
         (workInProgress.deletions = null))
       : ((nextProps = createWorkInProgress(
-          progressedPrimaryFragment,
-          primaryChildProps
-        )),
+        progressedPrimaryFragment,
+        primaryChildProps
+      )),
         (nextProps.subtreeFlags =
           progressedPrimaryFragment.subtreeFlags & 31457280));
     null !== dehydrated
       ? (showFallback = createWorkInProgress(dehydrated, showFallback))
       : ((showFallback = createFiberFromFragment(
-          showFallback,
-          didSuspend,
-          renderLanes,
-          null
-        )),
+        showFallback,
+        didSuspend,
+        renderLanes,
+        null
+      )),
         (showFallback.flags |= 2));
     showFallback.return = workInProgress;
     nextProps.return = workInProgress;
@@ -5168,9 +5176,9 @@ function updateSuspenseComponent(current, workInProgress, renderLanes) {
   JSCompiler_temp.sibling = null;
   null !== current &&
     ((renderLanes = workInProgress.deletions),
-    null === renderLanes
-      ? ((workInProgress.deletions = [current]), (workInProgress.flags |= 16))
-      : renderLanes.push(current));
+      null === renderLanes
+        ? ((workInProgress.deletions = [current]), (workInProgress.flags |= 16))
+        : renderLanes.push(current));
   workInProgress.child = JSCompiler_temp;
   workInProgress.memoizedState = null;
   return JSCompiler_temp;
@@ -5343,15 +5351,15 @@ function updateDehydratedSuspenseComponent(
         }
       nextProps =
         0 !==
-        (nextProps & (didPrimaryChildrenDefer.suspendedLanes | renderLanes))
+          (nextProps & (didPrimaryChildrenDefer.suspendedLanes | renderLanes))
           ? 0
           : nextProps;
       if (0 !== nextProps && nextProps !== suspenseState.retryLane)
         throw (
           ((suspenseState.retryLane = nextProps),
-          enqueueConcurrentRenderForLane(current, nextProps),
-          scheduleUpdateOnFiber(didPrimaryChildrenDefer, current, nextProps),
-          SelectiveHydrationException)
+            enqueueConcurrentRenderForLane(current, nextProps),
+            scheduleUpdateOnFiber(didPrimaryChildrenDefer, current, nextProps),
+            SelectiveHydrationException)
         );
     }
     shim$1() || renderDidSuspendDelayIfPossible();
@@ -5390,13 +5398,13 @@ function initSuspenseListRenderState(
   var renderState = workInProgress.memoizedState;
   null === renderState
     ? (workInProgress.memoizedState = {
-        isBackwards: isBackwards,
-        rendering: null,
-        renderingStartTime: 0,
-        last: lastContentRow,
-        tail: tail,
-        tailMode: tailMode
-      })
+      isBackwards: isBackwards,
+      rendering: null,
+      renderingStartTime: 0,
+      last: lastContentRow,
+      tail: tail,
+      tailMode: tailMode
+    })
     : ((renderState.isBackwards = isBackwards),
       (renderState.rendering = null),
       (renderState.renderingStartTime = 0),
@@ -5414,7 +5422,7 @@ function updateSuspenseListComponent(current, workInProgress, renderLanes) {
     (nextProps = (nextProps & 1) | 2), (workInProgress.flags |= 128);
   else {
     if (null !== current && 0 !== (current.flags & 128))
-      a: for (current = workInProgress.child; null !== current; ) {
+      a: for (current = workInProgress.child; null !== current;) {
         if (13 === current.tag)
           null !== current.memoizedState &&
             scheduleSuspenseWorkOnFiber(current, renderLanes, workInProgress);
@@ -5426,7 +5434,7 @@ function updateSuspenseListComponent(current, workInProgress, renderLanes) {
           continue;
         }
         if (current === workInProgress) break a;
-        for (; null === current.sibling; ) {
+        for (; null === current.sibling;) {
           if (null === current.return || current.return === workInProgress)
             break a;
           current = current.return;
@@ -5442,11 +5450,11 @@ function updateSuspenseListComponent(current, workInProgress, renderLanes) {
     switch (revealOrder) {
       case "forwards":
         renderLanes = workInProgress.child;
-        for (revealOrder = null; null !== renderLanes; )
+        for (revealOrder = null; null !== renderLanes;)
           (current = renderLanes.alternate),
             null !== current &&
-              null === findFirstSuspended(current) &&
-              (revealOrder = renderLanes),
+            null === findFirstSuspended(current) &&
+            (revealOrder = renderLanes),
             (renderLanes = renderLanes.sibling);
         renderLanes = revealOrder;
         null === renderLanes
@@ -5464,7 +5472,7 @@ function updateSuspenseListComponent(current, workInProgress, renderLanes) {
       case "backwards":
         renderLanes = null;
         revealOrder = workInProgress.child;
-        for (workInProgress.child = null; null !== revealOrder; ) {
+        for (workInProgress.child = null; null !== revealOrder;) {
           current = revealOrder.alternate;
           if (null !== current && null === findFirstSuspended(current)) {
             workInProgress.child = revealOrder;
@@ -5495,8 +5503,8 @@ function resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress) {
   0 === (workInProgress.mode & 1) &&
     null !== current &&
     ((current.alternate = null),
-    (workInProgress.alternate = null),
-    (workInProgress.flags |= 2));
+      (workInProgress.alternate = null),
+      (workInProgress.flags |= 2));
 }
 function bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes) {
   null !== current && (workInProgress.dependencies = current.dependencies);
@@ -5508,7 +5516,7 @@ function bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes) {
     current = workInProgress.child;
     renderLanes = createWorkInProgress(current, current.pendingProps);
     workInProgress.child = renderLanes;
-    for (renderLanes.return = workInProgress; null !== current.sibling; )
+    for (renderLanes.return = workInProgress; null !== current.sibling;)
       (current = current.sibling),
         (renderLanes = renderLanes.sibling =
           createWorkInProgress(current, current.pendingProps)),
@@ -5574,8 +5582,8 @@ function attemptEarlyBailoutIfNoScheduledUpdate(
       context = workInProgress.memoizedState;
       null !== context &&
         ((context.rendering = null),
-        (context.tail = null),
-        (context.lastEffect = null));
+          (context.tail = null),
+          (context.lastEffect = null));
       push(suspenseStackCursor, suspenseStackCursor.current);
       if (newValue) break;
       else return null;
@@ -5625,9 +5633,9 @@ function beginWork(current, workInProgress, renderLanes) {
       );
       workInProgress.flags |= 1;
       "object" === typeof value &&
-      null !== value &&
-      "function" === typeof value.render &&
-      void 0 === value.$$typeof
+        null !== value &&
+        "function" === typeof value.render &&
+        void 0 === value.$$typeof
         ? ((workInProgress.tag = 1),
           (workInProgress.memoizedState = null),
           (workInProgress.updateQueue = null),
@@ -5702,8 +5710,8 @@ function beginWork(current, workInProgress, renderLanes) {
         }
         throw Error(
           "Element type is invalid. Received a promise that resolves to: " +
-            Component +
-            ". Lazy element type must resolve to a class or function."
+          Component +
+          ". Lazy element type must resolve to a class or function."
         );
       }
       return workInProgress;
@@ -5750,10 +5758,10 @@ function beginWork(current, workInProgress, renderLanes) {
       value = workInProgress.memoizedState.element;
       value === Component
         ? (workInProgress = bailoutOnAlreadyFinishedWork(
-            current,
-            workInProgress,
-            renderLanes
-          ))
+          current,
+          workInProgress,
+          renderLanes
+        ))
         : (reconcileChildren(current, workInProgress, value, renderLanes),
           (workInProgress = workInProgress.child));
       return workInProgress;
@@ -5780,11 +5788,11 @@ function beginWork(current, workInProgress, renderLanes) {
         (Component = workInProgress.pendingProps),
         null === current
           ? (workInProgress.child = reconcileChildFibers(
-              workInProgress,
-              null,
-              Component,
-              renderLanes
-            ))
+            workInProgress,
+            null,
+            Component,
+            renderLanes
+          ))
           : reconcileChildren(current, workInProgress, Component, renderLanes),
         workInProgress.child
       );
@@ -5849,7 +5857,7 @@ function beginWork(current, workInProgress, renderLanes) {
           } else
             for (
               oldProps = workInProgress.child,
-                null !== oldProps && (oldProps.return = workInProgress);
+              null !== oldProps && (oldProps.return = workInProgress);
               null !== oldProps;
 
             ) {
@@ -5910,7 +5918,7 @@ function beginWork(current, workInProgress, renderLanes) {
               } else newValue = oldProps.child;
               if (null !== newValue) newValue.return = oldProps;
               else
-                for (newValue = oldProps; null !== newValue; ) {
+                for (newValue = oldProps; null !== newValue;) {
                   if (newValue === workInProgress) {
                     newValue = null;
                     break;
@@ -5990,8 +5998,8 @@ function beginWork(current, workInProgress, renderLanes) {
   }
   throw Error(
     "Unknown unit of work tag (" +
-      workInProgress.tag +
-      "). This error is likely caused by a bug in React. Please file an issue."
+    workInProgress.tag +
+    "). This error is likely caused by a bug in React. Please file an issue."
   );
 }
 var valueCursor = createCursor(null),
@@ -6002,21 +6010,21 @@ function resetContextDependencies() {
   lastFullyObservedContext =
     lastContextDependency =
     currentlyRenderingFiber =
-      null;
+    null;
 }
 function popProvider(context) {
   context._currentValue = valueCursor.current;
   pop(valueCursor);
 }
 function scheduleContextWorkOnParentPath(parent, renderLanes, propagationRoot) {
-  for (; null !== parent; ) {
+  for (; null !== parent;) {
     var alternate = parent.alternate;
     (parent.childLanes & renderLanes) !== renderLanes
       ? ((parent.childLanes |= renderLanes),
         null !== alternate && (alternate.childLanes |= renderLanes))
       : null !== alternate &&
-        (alternate.childLanes & renderLanes) !== renderLanes &&
-        (alternate.childLanes |= renderLanes);
+      (alternate.childLanes & renderLanes) !== renderLanes &&
+      (alternate.childLanes |= renderLanes);
     if (parent === propagationRoot) break;
     parent = parent.return;
   }
@@ -6028,7 +6036,7 @@ function prepareToReadContext(workInProgress, renderLanes) {
   null !== workInProgress &&
     null !== workInProgress.firstContext &&
     (0 !== (workInProgress.lanes & renderLanes) && (didReceiveUpdate = !0),
-    (workInProgress.firstContext = null));
+      (workInProgress.firstContext = null));
 }
 function readContext(context) {
   return readContextForConsumer(currentlyRenderingFiber, context);
@@ -6043,7 +6051,7 @@ function readContextForConsumer(consumer, context) {
   if (lastFullyObservedContext !== context)
     if (
       ((context = { context: context, memoizedValue: value, next: null }),
-      null === lastContextDependency)
+        null === lastContextDependency)
     ) {
       if (null === consumer)
         throw Error(
@@ -6055,20 +6063,20 @@ function readContextForConsumer(consumer, context) {
   return value;
 }
 var ReactCurrentBatchConfig$1 = ReactSharedInternals.ReactCurrentBatchConfig;
-function handleAsyncAction() {}
+function handleAsyncAction() { }
 function scheduleRetryEffect(workInProgress, retryQueue) {
   null !== retryQueue
     ? (workInProgress.flags |= 4)
     : workInProgress.flags & 16384 &&
-      ((retryQueue =
-        22 !== workInProgress.tag ? claimNextRetryLane() : 536870912),
+    ((retryQueue =
+      22 !== workInProgress.tag ? claimNextRetryLane() : 536870912),
       (workInProgress.lanes |= retryQueue));
 }
 function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
   switch (renderState.tailMode) {
     case "hidden":
       hasRenderedATailFallback = renderState.tail;
-      for (var lastTailNode = null; null !== hasRenderedATailFallback; )
+      for (var lastTailNode = null; null !== hasRenderedATailFallback;)
         null !== hasRenderedATailFallback.alternate &&
           (lastTailNode = hasRenderedATailFallback),
           (hasRenderedATailFallback = hasRenderedATailFallback.sibling);
@@ -6078,7 +6086,7 @@ function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
       break;
     case "collapsed":
       lastTailNode = renderState.tail;
-      for (var lastTailNode$61 = null; null !== lastTailNode; )
+      for (var lastTailNode$61 = null; null !== lastTailNode;)
         null !== lastTailNode.alternate && (lastTailNode$61 = lastTailNode),
           (lastTailNode = lastTailNode.sibling);
       null === lastTailNode$61
@@ -6090,19 +6098,19 @@ function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
 }
 function bubbleProperties(completedWork) {
   var didBailout =
-      null !== completedWork.alternate &&
-      completedWork.alternate.child === completedWork.child,
+    null !== completedWork.alternate &&
+    completedWork.alternate.child === completedWork.child,
     newChildLanes = 0,
     subtreeFlags = 0;
   if (didBailout)
-    for (var child$62 = completedWork.child; null !== child$62; )
+    for (var child$62 = completedWork.child; null !== child$62;)
       (newChildLanes |= child$62.lanes | child$62.childLanes),
         (subtreeFlags |= child$62.subtreeFlags & 31457280),
         (subtreeFlags |= child$62.flags & 31457280),
         (child$62.return = completedWork),
         (child$62 = child$62.sibling);
   else
-    for (child$62 = completedWork.child; null !== child$62; )
+    for (child$62 = completedWork.child; null !== child$62;)
       (newChildLanes |= child$62.lanes | child$62.childLanes),
         (subtreeFlags |= child$62.subtreeFlags),
         (subtreeFlags |= child$62.flags),
@@ -6113,6 +6121,12 @@ function bubbleProperties(completedWork) {
   return didBailout;
 }
 function completeWork(current, workInProgress, renderLanes) {
+  if (workInProgress.flags & 1 && (workInProgress.type?.displayName || workInProgress.type?.name) !== "View")
+    insertUpdateComponents(
+      defrost.getComponentNameFromFiber(workInProgress),
+      workInProgress.flags,
+      workInProgress.key,
+    );
   var newProps = workInProgress.pendingProps;
   switch (workInProgress.tag) {
     case 2:
@@ -6133,15 +6147,15 @@ function completeWork(current, workInProgress, renderLanes) {
         (renderLanes = workInProgress.stateNode),
         popHostContainer(),
         renderLanes.pendingContext &&
-          ((renderLanes.context = renderLanes.pendingContext),
+        ((renderLanes.context = renderLanes.pendingContext),
           (renderLanes.pendingContext = null)),
         (null !== current && null !== current.child) ||
-          null === current ||
-          (current.memoizedState.isDehydrated &&
-            0 === (workInProgress.flags & 256)) ||
-          ((workInProgress.flags |= 1024),
+        null === current ||
+        (current.memoizedState.isDehydrated &&
+          0 === (workInProgress.flags & 256)) ||
+        ((workInProgress.flags |= 1024),
           null !== hydrationErrors &&
-            (queueRecoverableErrors(hydrationErrors),
+          (queueRecoverableErrors(hydrationErrors),
             (hydrationErrors = null))),
         bubbleProperties(workInProgress),
         null
@@ -6184,7 +6198,7 @@ function completeWork(current, workInProgress, renderLanes) {
         );
         instanceCache.set(renderLanes, workInProgress);
         instanceProps.set(renderLanes, newProps);
-        a: for (renderLanes = workInProgress.child; null !== renderLanes; ) {
+        a: for (renderLanes = workInProgress.child; null !== renderLanes;) {
           if (5 === renderLanes.tag || 6 === renderLanes.tag)
             current._children.push(renderLanes.stateNode);
           else if (4 !== renderLanes.tag && null !== renderLanes.child) {
@@ -6193,7 +6207,7 @@ function completeWork(current, workInProgress, renderLanes) {
             continue;
           }
           if (renderLanes === workInProgress) break a;
-          for (; null === renderLanes.sibling; ) {
+          for (; null === renderLanes.sibling;) {
             if (
               null === renderLanes.return ||
               renderLanes.return === workInProgress
@@ -6300,7 +6314,7 @@ function completeWork(current, workInProgress, renderLanes) {
             0 !== workInProgressRootExitStatus ||
             (null !== current && 0 !== (current.flags & 128))
           )
-            for (current = workInProgress.child; null !== current; ) {
+            for (current = workInProgress.child; null !== current;) {
               updatePayload = findFirstSuspended(current);
               if (null !== updatePayload) {
                 workInProgress.flags |= 128;
@@ -6309,7 +6323,7 @@ function completeWork(current, workInProgress, renderLanes) {
                 workInProgress.updateQueue = current;
                 scheduleRetryEffect(workInProgress, current);
                 workInProgress.subtreeFlags = 0;
-                for (current = workInProgress.child; null !== current; )
+                for (current = workInProgress.child; null !== current;)
                   resetWorkInProgress(current, renderLanes),
                     (current = current.sibling);
                 push(
@@ -6323,9 +6337,9 @@ function completeWork(current, workInProgress, renderLanes) {
           null !== type.tail &&
             now() > workInProgressRootRenderTargetTime &&
             ((workInProgress.flags |= 128),
-            (newProps = !0),
-            cutOffTailIfNeeded(type, !1),
-            (workInProgress.lanes = 4194304));
+              (newProps = !0),
+              cutOffTailIfNeeded(type, !1),
+              (workInProgress.lanes = 4194304));
         }
       else {
         if (!newProps)
@@ -6334,12 +6348,12 @@ function completeWork(current, workInProgress, renderLanes) {
           ) {
             if (
               ((workInProgress.flags |= 128),
-              (newProps = !0),
-              (renderLanes = current.updateQueue),
-              (workInProgress.updateQueue = renderLanes),
-              scheduleRetryEffect(workInProgress, renderLanes),
-              cutOffTailIfNeeded(type, !0),
-              null === type.tail &&
+                (newProps = !0),
+                (renderLanes = current.updateQueue),
+                (workInProgress.updateQueue = renderLanes),
+                scheduleRetryEffect(workInProgress, renderLanes),
+                cutOffTailIfNeeded(type, !0),
+                null === type.tail &&
                 "hidden" === type.tailMode &&
                 !updatePayload.alternate)
             )
@@ -6349,9 +6363,9 @@ function completeWork(current, workInProgress, renderLanes) {
               workInProgressRootRenderTargetTime &&
               536870912 !== renderLanes &&
               ((workInProgress.flags |= 128),
-              (newProps = !0),
-              cutOffTailIfNeeded(type, !1),
-              (workInProgress.lanes = 4194304));
+                (newProps = !0),
+                cutOffTailIfNeeded(type, !1),
+                (workInProgress.lanes = 4194304));
         type.isBackwards
           ? ((updatePayload.sibling = workInProgress.child),
             (workInProgress.child = updatePayload))
@@ -6385,17 +6399,17 @@ function completeWork(current, workInProgress, renderLanes) {
         (newProps = null !== workInProgress.memoizedState),
         null !== current
           ? (null !== current.memoizedState) !== newProps &&
-            (workInProgress.flags |= 8192)
+          (workInProgress.flags |= 8192)
           : newProps && (workInProgress.flags |= 8192),
         newProps && 0 !== (workInProgress.mode & 1)
           ? 0 !== (renderLanes & 536870912) &&
-            0 === (workInProgress.flags & 128) &&
-            (bubbleProperties(workInProgress),
+          0 === (workInProgress.flags & 128) &&
+          (bubbleProperties(workInProgress),
             workInProgress.subtreeFlags & 6 && (workInProgress.flags |= 8192))
           : bubbleProperties(workInProgress),
         (renderLanes = workInProgress.updateQueue),
         null !== renderLanes &&
-          scheduleRetryEffect(workInProgress, renderLanes.retryQueue),
+        scheduleRetryEffect(workInProgress, renderLanes.retryQueue),
         null
       );
     case 24:
@@ -6405,8 +6419,8 @@ function completeWork(current, workInProgress, renderLanes) {
   }
   throw Error(
     "Unknown unit of work tag (" +
-      workInProgress.tag +
-      "). This error is likely caused by a bug in React. Please file an issue."
+    workInProgress.tag +
+    "). This error is likely caused by a bug in React. Please file an issue."
   );
 }
 function unwindWork(current, workInProgress) {
@@ -6553,15 +6567,15 @@ function safelyCallDestroy(current, nearestMountedAncestor, destroy) {
 }
 var shouldFireAfterActiveInstanceBlur = !1;
 function commitBeforeMutationEffects(root, firstChild) {
-  for (nextEffect = firstChild; null !== nextEffect; )
+  for (nextEffect = firstChild; null !== nextEffect;)
     if (
       ((root = nextEffect),
-      (firstChild = root.child),
-      0 !== (root.subtreeFlags & 1028) && null !== firstChild)
+        (firstChild = root.child),
+        0 !== (root.subtreeFlags & 1028) && null !== firstChild)
     )
       (firstChild.return = root), (nextEffect = firstChild);
     else
-      for (; null !== nextEffect; ) {
+      for (; null !== nextEffect;) {
         root = nextEffect;
         try {
           var current = root.alternate,
@@ -6631,7 +6645,7 @@ function commitHookEffectListUnmount(
           destroy = inst.destroy;
         void 0 !== destroy &&
           ((inst.destroy = void 0),
-          safelyCallDestroy(finishedWork, nearestMountedAncestor, destroy));
+            safelyCallDestroy(finishedWork, nearestMountedAncestor, destroy));
       }
       effect = effect.next;
     } while (effect !== updateQueue);
@@ -6749,7 +6763,7 @@ function commitLayoutEffectOnFiber(finishedRoot, current, finishedWork) {
         if (
           ((prevProps =
             null !== finishedWork.memoizedState || offscreenSubtreeIsHidden),
-          !prevProps)
+            !prevProps)
         ) {
           current =
             (null !== current && null !== current.memoizedState) ||
@@ -6758,12 +6772,12 @@ function commitLayoutEffectOnFiber(finishedRoot, current, finishedWork) {
             prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
           offscreenSubtreeIsHidden = prevProps;
           (offscreenSubtreeWasHidden = current) &&
-          !prevOffscreenSubtreeWasHidden
+            !prevOffscreenSubtreeWasHidden
             ? recursivelyTraverseReappearLayoutEffects(
-                finishedRoot,
-                finishedWork,
-                0 !== (finishedWork.subtreeFlags & 8772)
-              )
+              finishedRoot,
+              finishedWork,
+              0 !== (finishedWork.subtreeFlags & 8772)
+            )
             : recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
           offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden;
           offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
@@ -6798,8 +6812,8 @@ function isHostParent(fiber) {
   return 5 === fiber.tag || 3 === fiber.tag || 4 === fiber.tag;
 }
 function getHostSibling(fiber) {
-  a: for (;;) {
-    for (; null === fiber.sibling; ) {
+  a: for (; ;) {
+    for (; null === fiber.sibling;) {
       if (null === fiber.return || isHostParent(fiber.return)) return null;
       fiber = fiber.return;
     }
@@ -6829,7 +6843,7 @@ function insertOrAppendPlacementNodeIntoContainer(node, before, parent) {
   else if (4 !== tag && ((node = node.child), null !== node))
     for (
       insertOrAppendPlacementNodeIntoContainer(node, before, parent),
-        node = node.sibling;
+      node = node.sibling;
       null !== node;
 
     )
@@ -6903,7 +6917,7 @@ function recursivelyTraverseDeletionEffects(
   nearestMountedAncestor,
   parent
 ) {
-  for (parent = parent.child; null !== parent; )
+  for (parent = parent.child; null !== parent;)
     commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, parent),
       (parent = parent.sibling);
 }
@@ -6915,7 +6929,7 @@ function commitDeletionEffectsOnFiber(
   if (injectedHook && "function" === typeof injectedHook.onCommitFiberUnmount)
     try {
       injectedHook.onCommitFiberUnmount(rendererID, deletedFiber);
-    } catch (err) {}
+    } catch (err) { }
   switch (deletedFiber.tag) {
     case 26:
     case 27:
@@ -6985,9 +6999,9 @@ function commitDeletionEffectsOnFiber(
       if (
         !offscreenSubtreeWasHidden &&
         ((prevHostParent = deletedFiber.updateQueue),
-        null !== prevHostParent &&
+          null !== prevHostParent &&
           ((prevHostParent = prevHostParent.lastEffect),
-          null !== prevHostParent))
+            null !== prevHostParent))
       ) {
         prevHostParentIsContainer = prevHostParent = prevHostParent.next;
         do {
@@ -7003,7 +7017,7 @@ function commitDeletionEffectsOnFiber(
                   destroy
                 ))
               : 0 !== (tag & 4) &&
-                ((inst.destroy = void 0),
+              ((inst.destroy = void 0),
                 safelyCallDestroy(
                   deletedFiber,
                   nearestMountedAncestor,
@@ -7022,8 +7036,8 @@ function commitDeletionEffectsOnFiber(
       if (
         !offscreenSubtreeWasHidden &&
         (safelyDetachRef(deletedFiber, nearestMountedAncestor),
-        (prevHostParent = deletedFiber.stateNode),
-        "function" === typeof prevHostParent.componentWillUnmount)
+          (prevHostParent = deletedFiber.stateNode),
+          "function" === typeof prevHostParent.componentWillUnmount)
       )
         try {
           (prevHostParent.props = deletedFiber.memoizedProps),
@@ -7049,8 +7063,8 @@ function commitDeletionEffectsOnFiber(
       safelyDetachRef(deletedFiber, nearestMountedAncestor);
       deletedFiber.mode & 1
         ? ((offscreenSubtreeWasHidden =
-            (prevHostParent = offscreenSubtreeWasHidden) ||
-            null !== deletedFiber.memoizedState),
+          (prevHostParent = offscreenSubtreeWasHidden) ||
+          null !== deletedFiber.memoizedState),
           recursivelyTraverseDeletionEffects(
             finishedRoot,
             nearestMountedAncestor,
@@ -7058,10 +7072,10 @@ function commitDeletionEffectsOnFiber(
           ),
           (offscreenSubtreeWasHidden = prevHostParent))
         : recursivelyTraverseDeletionEffects(
-            finishedRoot,
-            nearestMountedAncestor,
-            deletedFiber
-          );
+          finishedRoot,
+          nearestMountedAncestor,
+          deletedFiber
+        );
       break;
     default:
       recursivelyTraverseDeletionEffects(
@@ -7084,14 +7098,14 @@ function getRetryCache(finishedWork) {
         (finishedWork = finishedWork.stateNode),
         (retryCache = finishedWork._retryCache),
         null === retryCache &&
-          (retryCache = finishedWork._retryCache = new PossiblyWeakSet()),
+        (retryCache = finishedWork._retryCache = new PossiblyWeakSet()),
         retryCache
       );
     default:
       throw Error(
         "Unexpected Suspense handler tag (" +
-          finishedWork.tag +
-          "). This is a bug in React."
+        finishedWork.tag +
+        "). This is a bug in React."
       );
   }
 }
@@ -7112,7 +7126,7 @@ function recursivelyTraverseMutationEffects(root$jscomp$0, parentFiber) {
         var root = root$jscomp$0,
           returnFiber = parentFiber,
           parent = returnFiber;
-        a: for (; null !== parent; ) {
+        a: for (; null !== parent;) {
           switch (parent.tag) {
             case 27:
             case 5:
@@ -7145,7 +7159,7 @@ function recursivelyTraverseMutationEffects(root$jscomp$0, parentFiber) {
       }
     }
   if (parentFiber.subtreeFlags & 12854)
-    for (parentFiber = parentFiber.child; null !== parentFiber; )
+    for (parentFiber = parentFiber.child; null !== parentFiber;)
       commitMutationEffectsOnFiber(parentFiber, root$jscomp$0),
         (parentFiber = parentFiber.sibling);
 }
@@ -7182,12 +7196,12 @@ function commitMutationEffectsOnFiber(finishedWork, root) {
       flags & 64 &&
         offscreenSubtreeIsHidden &&
         ((finishedWork = finishedWork.updateQueue),
-        null !== finishedWork &&
+          null !== finishedWork &&
           ((flags = finishedWork.callbacks),
-          null !== flags &&
+            null !== flags &&
             ((current = finishedWork.shared.hiddenCallbacks),
-            (finishedWork.shared.hiddenCallbacks =
-              null === current ? flags : current.concat(flags)))));
+              (finishedWork.shared.hiddenCallbacks =
+                null === current ? flags : current.concat(flags)))));
       break;
     case 26:
     case 27:
@@ -7255,14 +7269,14 @@ function commitMutationEffectsOnFiber(finishedWork, root) {
       commitReconciliationEffects(finishedWork);
       finishedWork.child.flags & 8192 &&
         ((current = null !== current && null !== current.memoizedState),
-        null === finishedWork.memoizedState ||
+          null === finishedWork.memoizedState ||
           current ||
           (globalMostRecentFallbackTime = now()));
       flags & 4 &&
         ((flags = finishedWork.updateQueue),
-        null !== flags &&
+          null !== flags &&
           ((finishedWork.updateQueue = null),
-          attachSuspenseRetryListeners(finishedWork, flags)));
+            attachSuspenseRetryListeners(finishedWork, flags)));
       break;
     case 22:
       flags & 512 &&
@@ -7290,17 +7304,17 @@ function commitMutationEffectsOnFiber(finishedWork, root) {
         ((root._visibility = viewConfig
           ? root._visibility & -2
           : root._visibility | 1),
-        viewConfig &&
+          viewConfig &&
           ((root = offscreenSubtreeIsHidden || offscreenSubtreeWasHidden),
-          null === current ||
+            null === current ||
             updatePayload ||
             root ||
             (0 !== (finishedWork.mode & 1) &&
               recursivelyTraverseDisappearLayoutEffects(finishedWork))),
-        null === finishedWork.memoizedProps ||
+          null === finishedWork.memoizedProps ||
           "manual" !== finishedWork.memoizedProps.mode)
       )
-        a: for (current = null, root = finishedWork; ; ) {
+        a: for (current = null, root = finishedWork; ;) {
           if (5 === root.tag) {
             if (null === current) {
               current = root;
@@ -7367,7 +7381,7 @@ function commitMutationEffectsOnFiber(finishedWork, root) {
             continue;
           }
           if (root === finishedWork) break a;
-          for (; null === root.sibling; ) {
+          for (; null === root.sibling;) {
             if (null === root.return || root.return === finishedWork) break a;
             current === root && (current = null);
             root = root.return;
@@ -7378,20 +7392,20 @@ function commitMutationEffectsOnFiber(finishedWork, root) {
         }
       flags & 4 &&
         ((flags = finishedWork.updateQueue),
-        null !== flags &&
+          null !== flags &&
           ((current = flags.retryQueue),
-          null !== current &&
+            null !== current &&
             ((flags.retryQueue = null),
-            attachSuspenseRetryListeners(finishedWork, current))));
+              attachSuspenseRetryListeners(finishedWork, current))));
       break;
     case 19:
       recursivelyTraverseMutationEffects(root, finishedWork);
       commitReconciliationEffects(finishedWork);
       flags & 4 &&
         ((flags = finishedWork.updateQueue),
-        null !== flags &&
+          null !== flags &&
           ((finishedWork.updateQueue = null),
-          attachSuspenseRetryListeners(finishedWork, flags)));
+            attachSuspenseRetryListeners(finishedWork, flags)));
       break;
     case 21:
       break;
@@ -7405,7 +7419,7 @@ function commitReconciliationEffects(finishedWork) {
   if (flags & 2) {
     try {
       a: {
-        for (var parent = finishedWork.return; null !== parent; ) {
+        for (var parent = finishedWork.return; null !== parent;) {
           if (isHostParent(parent)) {
             var JSCompiler_inline_result = parent;
             break a;
@@ -7449,12 +7463,12 @@ function commitReconciliationEffects(finishedWork) {
 }
 function recursivelyTraverseLayoutEffects(root, parentFiber) {
   if (parentFiber.subtreeFlags & 8772)
-    for (parentFiber = parentFiber.child; null !== parentFiber; )
+    for (parentFiber = parentFiber.child; null !== parentFiber;)
       commitLayoutEffectOnFiber(root, parentFiber.alternate, parentFiber),
         (parentFiber = parentFiber.sibling);
 }
 function recursivelyTraverseDisappearLayoutEffects(parentFiber) {
-  for (parentFiber = parentFiber.child; null !== parentFiber; ) {
+  for (parentFiber = parentFiber.child; null !== parentFiber;) {
     var finishedWork = parentFiber;
     switch (finishedWork.tag) {
       case 0:
@@ -7505,7 +7519,7 @@ function recursivelyTraverseReappearLayoutEffects(
 ) {
   includeWorkInProgressEffects =
     includeWorkInProgressEffects && 0 !== (parentFiber.subtreeFlags & 8772);
-  for (parentFiber = parentFiber.child; null !== parentFiber; ) {
+  for (parentFiber = parentFiber.child; null !== parentFiber;) {
     var finishedRoot = finishedRoot$jscomp$0,
       finishedWork = parentFiber,
       flags = finishedWork.flags;
@@ -7601,7 +7615,7 @@ function commitHookPassiveMountEffects(finishedWork, hookFlags) {
 }
 function recursivelyTraversePassiveMountEffects(root, parentFiber) {
   if (parentFiber.subtreeFlags & 10256)
-    for (parentFiber = parentFiber.child; null !== parentFiber; )
+    for (parentFiber = parentFiber.child; null !== parentFiber;)
       commitPassiveMountOnFiber(root, parentFiber),
         (parentFiber = parentFiber.sibling);
 }
@@ -7625,15 +7639,15 @@ function commitPassiveMountOnFiber(finishedRoot, finishedWork) {
         ? flags._visibility & 4
           ? recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork)
           : finishedWork.mode & 1 ||
-            ((flags._visibility |= 4),
+          ((flags._visibility |= 4),
             recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork))
         : flags._visibility & 4
-        ? recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork)
-        : ((flags._visibility |= 4),
-          recursivelyTraverseReconnectPassiveEffects(
-            finishedRoot,
-            finishedWork
-          ));
+          ? recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork)
+          : ((flags._visibility |= 4),
+            recursivelyTraverseReconnectPassiveEffects(
+              finishedRoot,
+              finishedWork
+            ));
       break;
     case 24:
       recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork);
@@ -7646,7 +7660,7 @@ function recursivelyTraverseReconnectPassiveEffects(
   finishedRoot$jscomp$0,
   parentFiber
 ) {
-  for (parentFiber = parentFiber.child; null !== parentFiber; ) {
+  for (parentFiber = parentFiber.child; null !== parentFiber;) {
     var finishedRoot = finishedRoot$jscomp$0,
       finishedWork = parentFiber;
     switch (finishedWork.tag) {
@@ -7663,11 +7677,11 @@ function recursivelyTraverseReconnectPassiveEffects(
         null !== finishedWork.memoizedState
           ? instance._visibility & 4
             ? recursivelyTraverseReconnectPassiveEffects(
-                finishedRoot,
-                finishedWork
-              )
+              finishedRoot,
+              finishedWork
+            )
             : finishedWork.mode & 1 ||
-              ((instance._visibility |= 4),
+            ((instance._visibility |= 4),
               recursivelyTraverseReconnectPassiveEffects(
                 finishedRoot,
                 finishedWork
@@ -7690,7 +7704,7 @@ function recursivelyTraverseReconnectPassiveEffects(
 var suspenseyCommitFlag = 8192;
 function recursivelyAccumulateSuspenseyCommit(parentFiber) {
   if (parentFiber.subtreeFlags & suspenseyCommitFlag)
-    for (parentFiber = parentFiber.child; null !== parentFiber; )
+    for (parentFiber = parentFiber.child; null !== parentFiber;)
       accumulateSuspenseyCommitOnFiber(parentFiber),
         (parentFiber = parentFiber.sibling);
 }
@@ -7754,7 +7768,7 @@ function recursivelyTraversePassiveUnmountEffects(parentFiber) {
     detachAlternateSiblings(parentFiber);
   }
   if (parentFiber.subtreeFlags & 10256)
-    for (parentFiber = parentFiber.child; null !== parentFiber; )
+    for (parentFiber = parentFiber.child; null !== parentFiber;)
       commitPassiveUnmountOnFiber(parentFiber),
         (parentFiber = parentFiber.sibling);
 }
@@ -7770,8 +7784,8 @@ function commitPassiveUnmountOnFiber(finishedWork) {
     case 22:
       var instance = finishedWork.stateNode;
       null !== finishedWork.memoizedState &&
-      instance._visibility & 4 &&
-      (null === finishedWork.return || 13 !== finishedWork.return.tag)
+        instance._visibility & 4 &&
+        (null === finishedWork.return || 13 !== finishedWork.return.tag)
         ? ((instance._visibility &= -5),
           recursivelyTraverseDisconnectPassiveEffects(finishedWork))
         : recursivelyTraversePassiveUnmountEffects(finishedWork);
@@ -7794,7 +7808,7 @@ function recursivelyTraverseDisconnectPassiveEffects(parentFiber) {
       }
     detachAlternateSiblings(parentFiber);
   }
-  for (parentFiber = parentFiber.child; null !== parentFiber; ) {
+  for (parentFiber = parentFiber.child; null !== parentFiber;) {
     deletions = parentFiber;
     switch (deletions.tag) {
       case 0:
@@ -7807,7 +7821,7 @@ function recursivelyTraverseDisconnectPassiveEffects(parentFiber) {
         i = deletions.stateNode;
         i._visibility & 4 &&
           ((i._visibility &= -5),
-          recursivelyTraverseDisconnectPassiveEffects(deletions));
+            recursivelyTraverseDisconnectPassiveEffects(deletions));
         break;
       default:
         recursivelyTraverseDisconnectPassiveEffects(deletions);
@@ -7819,7 +7833,7 @@ function commitPassiveUnmountEffectsInsideOfDeletedTree_begin(
   deletedSubtreeRoot,
   nearestMountedAncestor
 ) {
-  for (; null !== nextEffect; ) {
+  for (; null !== nextEffect;) {
     var fiber = nextEffect;
     switch (fiber.tag) {
       case 0:
@@ -7830,7 +7844,7 @@ function commitPassiveUnmountEffectsInsideOfDeletedTree_begin(
     var child = fiber.child;
     if (null !== child) (child.return = fiber), (nextEffect = child);
     else
-      a: for (fiber = deletedSubtreeRoot; null !== nextEffect; ) {
+      a: for (fiber = deletedSubtreeRoot; null !== nextEffect;) {
         child = nextEffect;
         var sibling = child.sibling,
           returnFiber = child.return;
@@ -7889,7 +7903,7 @@ function requestUpdateLane(fiber) {
   if (null !== fiber)
     return (
       0 === currentEventTransitionLane &&
-        (currentEventTransitionLane = claimNextTransitionLane()),
+      (currentEventTransitionLane = claimNextTransitionLane()),
       currentEventTransitionLane
     );
   fiber = currentUpdatePriority;
@@ -7921,7 +7935,7 @@ function scheduleUpdateOnFiber(root, fiber, lane) {
     root === workInProgressRoot &&
       (0 === (executionContext & 2) &&
         (workInProgressRootInterleavedUpdatedLanes |= lane),
-      4 === workInProgressRootExitStatus &&
+        4 === workInProgressRootExitStatus &&
         markRootSuspended(
           root,
           workInProgressRootRenderLanes,
@@ -7929,9 +7943,9 @@ function scheduleUpdateOnFiber(root, fiber, lane) {
         )),
       ensureRootIsScheduled(root),
       2 === lane &&
-        0 === executionContext &&
-        0 === (fiber.mode & 1) &&
-        ((workInProgressRootRenderTargetTime = now() + 500),
+      0 === executionContext &&
+      0 === (fiber.mode & 1) &&
+      ((workInProgressRootRenderTargetTime = now() + 500),
         flushSyncWorkAcrossRoots_impl(!0));
 }
 function performConcurrentWorkOnRoot(root, didTimeout) {
@@ -7971,19 +7985,19 @@ function performConcurrentWorkOnRoot(root, didTimeout) {
           );
           0 !== errorRetryLanes &&
             ((lanes = errorRetryLanes),
-            (exitStatus = recoverFromConcurrentError(
-              root,
-              renderWasConcurrent,
-              errorRetryLanes
-            )));
+              (exitStatus = recoverFromConcurrentError(
+                root,
+                renderWasConcurrent,
+                errorRetryLanes
+              )));
         }
         if (1 === exitStatus)
           throw (
             ((originalCallbackNode = workInProgressRootFatalError),
-            prepareFreshStack(root, 0),
-            markRootSuspended(root, lanes, 0),
-            ensureRootIsScheduled(root),
-            originalCallbackNode)
+              prepareFreshStack(root, 0),
+              markRootSuspended(root, lanes, 0),
+              ensureRootIsScheduled(root),
+              originalCallbackNode)
           );
         root.finishedWork = didTimeout;
         root.finishedLanes = lanes;
@@ -8014,7 +8028,7 @@ function performConcurrentWorkOnRoot(root, didTimeout) {
             (lanes & 62914560) === lanes &&
             3 === exitStatus &&
             ((exitStatus = globalMostRecentFallbackTime + 300 - now()),
-            10 < exitStatus)
+              10 < exitStatus)
           ) {
             markRootSuspended(
               renderWasConcurrent,
@@ -8086,9 +8100,9 @@ function queueRecoverableErrors(errors) {
   null === workInProgressRootRecoverableErrors
     ? (workInProgressRootRecoverableErrors = errors)
     : workInProgressRootRecoverableErrors.push.apply(
-        workInProgressRootRecoverableErrors,
-        errors
-      );
+      workInProgressRootRecoverableErrors,
+      errors
+    );
 }
 function commitRootWhenReady(
   root,
@@ -8109,7 +8123,7 @@ function commitRootWhenReady(
   );
 }
 function isRenderConsistentWithExternalStores(finishedWork) {
-  for (var node = finishedWork; ; ) {
+  for (var node = finishedWork; ;) {
     if (node.flags & 16384) {
       var updateQueue = node.updateQueue;
       if (
@@ -8132,7 +8146,7 @@ function isRenderConsistentWithExternalStores(finishedWork) {
       (updateQueue.return = node), (node = updateQueue);
     else {
       if (node === finishedWork) break;
-      for (; null === node.sibling; ) {
+      for (; null === node.sibling;) {
         if (null === node.return || node.return === finishedWork) return !0;
         node = node.return;
       }
@@ -8171,7 +8185,7 @@ function resetWorkInProgressStack() {
         (thenableState$1 = null),
         (thenableIndexCounter$1 = 0),
         (interruptedWork = workInProgress);
-    for (; null !== interruptedWork; )
+    for (; null !== interruptedWork;)
       unwindInterruptedWork(interruptedWork.alternate, interruptedWork),
         (interruptedWork = interruptedWork.return);
     workInProgress = null;
@@ -8199,7 +8213,7 @@ function prepareFreshStack(root, lanes) {
     workInProgressRootPingedLanes =
     workInProgressRootInterleavedUpdatedLanes =
     workInProgressRootSkippedLanes =
-      0;
+    0;
   workInProgressRootRecoverableErrors = workInProgressRootConcurrentErrors =
     null;
   workInProgressRootDidIncludeRecursiveRenderUpdate = !1;
@@ -8230,31 +8244,31 @@ function handleThrow(root, thrownValue) {
       (workInProgressSuspendedReason =
         (null !== root &&
           ((workInProgressRootRenderLanes & 4194176) ===
-          workInProgressRootRenderLanes
+            workInProgressRootRenderLanes
             ? null !== shellBoundary
             : ((workInProgressRootRenderLanes & 62914560) !==
-                workInProgressRootRenderLanes &&
-                0 === (workInProgressRootRenderLanes & 536870912)) ||
-              root !== shellBoundary)) ||
-        0 !== (workInProgressRootSkippedLanes & 134217727) ||
-        0 !== (workInProgressRootInterleavedUpdatedLanes & 134217727)
+              workInProgressRootRenderLanes &&
+              0 === (workInProgressRootRenderLanes & 536870912)) ||
+            root !== shellBoundary)) ||
+          0 !== (workInProgressRootSkippedLanes & 134217727) ||
+          0 !== (workInProgressRootInterleavedUpdatedLanes & 134217727)
           ? 3
           : 2))
     : thrownValue === SuspenseyCommitException
-    ? ((thrownValue = getSuspendedThenable()),
-      (workInProgressSuspendedReason = 4))
-    : (workInProgressSuspendedReason =
+      ? ((thrownValue = getSuspendedThenable()),
+        (workInProgressSuspendedReason = 4))
+      : (workInProgressSuspendedReason =
         thrownValue === SelectiveHydrationException
           ? 8
           : null !== thrownValue &&
             "object" === typeof thrownValue &&
             "function" === typeof thrownValue.then
-          ? 6
-          : 1);
+            ? 6
+            : 1);
   workInProgressThrownValue = thrownValue;
   null === workInProgress &&
     ((workInProgressRootExitStatus = 1),
-    (workInProgressRootFatalError = thrownValue));
+      (workInProgressRootFatalError = thrownValue));
 }
 function pushDispatcher() {
   var prevDispatcher = ReactCurrentDispatcher.current;
@@ -8320,7 +8334,7 @@ function renderRootSync(root, lanes) {
   return workInProgressRootExitStatus;
 }
 function workLoopSync() {
-  for (; null !== workInProgress; ) performUnitOfWork(workInProgress);
+  for (; null !== workInProgress;) performUnitOfWork(workInProgress);
 }
 function renderRootConcurrent(root, lanes) {
   var prevExecutionContext = executionContext;
@@ -8423,7 +8437,7 @@ function renderRootConcurrent(root, lanes) {
   return workInProgressRootExitStatus;
 }
 function workLoopConcurrent() {
-  for (; null !== workInProgress && !shouldYield(); )
+  for (; null !== workInProgress && !shouldYield();)
     performUnitOfWork(workInProgress);
 }
 function performUnitOfWork(unitOfWork) {
@@ -8525,8 +8539,8 @@ function throwAndUnwindWorkLoop(root, unitOfWork, thrownValue) {
         root = root.return;
         null !== root &&
           ((root.flags |= 32768),
-          (root.subtreeFlags = 0),
-          (root.deletions = null));
+            (root.subtreeFlags = 0),
+            (root.deletions = null));
         workInProgress = root;
       } while (null !== root);
       workInProgressRootExitStatus = 6;
@@ -8563,6 +8577,9 @@ function commitRoot(
   didIncludeRenderPhaseUpdate,
   spawnedLane
 ) {
+  defrost.writeInLogFiles(Date.now() + "", { list: updatedComponents, change: updatedComponentForProfiler })
+  updatedComponents = []
+  updatedComponentForProfiler = null
   var previousUpdateLanePriority = currentUpdatePriority,
     prevTransition = ReactCurrentBatchConfig.transition;
   try {
@@ -8612,15 +8629,15 @@ function commitRootImpl(
   markRootFinished(root, remainingLanes, spawnedLane);
   root === workInProgressRoot &&
     ((workInProgress = workInProgressRoot = null),
-    (workInProgressRootRenderLanes = 0));
+      (workInProgressRootRenderLanes = 0));
   (0 === (didIncludeRenderPhaseUpdate.subtreeFlags & 10256) &&
     0 === (didIncludeRenderPhaseUpdate.flags & 10256)) ||
     rootDoesHavePassiveEffects ||
     ((rootDoesHavePassiveEffects = !0),
-    scheduleCallback(NormalPriority, function () {
-      flushPassiveEffects();
-      return null;
-    }));
+      scheduleCallback(NormalPriority, function () {
+        flushPassiveEffects();
+        return null;
+      }));
   spawnedLane = 0 !== (didIncludeRenderPhaseUpdate.flags & 15990);
   if (0 !== (didIncludeRenderPhaseUpdate.subtreeFlags & 15990) || spawnedLane) {
     spawnedLane = ReactCurrentBatchConfig.transition;
@@ -8645,8 +8662,8 @@ function commitRootImpl(
   } else root.current = didIncludeRenderPhaseUpdate;
   rootDoesHavePassiveEffects &&
     ((rootDoesHavePassiveEffects = !1),
-    (rootWithPendingPassiveEffects = root),
-    (pendingPassiveEffectsLanes = transitions));
+      (rootWithPendingPassiveEffects = root),
+      (pendingPassiveEffectsLanes = transitions));
   remainingLanes = root.pendingLanes;
   0 === remainingLanes && (legacyErrorBoundariesThatAlreadyFailed = null);
   onCommitRoot(didIncludeRenderPhaseUpdate.stateNode, renderPriorityLevel);
@@ -8654,7 +8671,7 @@ function commitRootImpl(
   if (null !== recoverableErrors)
     for (
       renderPriorityLevel = root.onRecoverableError,
-        didIncludeRenderPhaseUpdate = 0;
+      didIncludeRenderPhaseUpdate = 0;
       didIncludeRenderPhaseUpdate < recoverableErrors.length;
       didIncludeRenderPhaseUpdate++
     )
@@ -8667,9 +8684,9 @@ function commitRootImpl(
   if (hasUncaughtError)
     throw (
       ((hasUncaughtError = !1),
-      (root = firstUncaughtError),
-      (firstUncaughtError = null),
-      root)
+        (root = firstUncaughtError),
+        (firstUncaughtError = null),
+        root)
     );
   0 !== (pendingPassiveEffectsLanes & 3) &&
     0 !== root.tag &&
@@ -8711,7 +8728,7 @@ function flushPassiveEffects() {
         )
           try {
             injectedHook.onPostCommitFiberRoot(rendererID, renderPriority);
-          } catch (err) {}
+          } catch (err) { }
         JSCompiler_inline_result = !0;
       }
       return JSCompiler_inline_result;
@@ -8733,7 +8750,7 @@ function captureCommitPhaseError(sourceFiber, nearestMountedAncestor, error) {
   if (3 === sourceFiber.tag)
     captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);
   else
-    for (; null !== nearestMountedAncestor; ) {
+    for (; null !== nearestMountedAncestor;) {
       if (3 === nearestMountedAncestor.tag) {
         captureCommitPhaseErrorOnRoot(
           nearestMountedAncestor,
@@ -8745,7 +8762,7 @@ function captureCommitPhaseError(sourceFiber, nearestMountedAncestor, error) {
         var instance = nearestMountedAncestor.stateNode;
         if (
           "function" ===
-            typeof nearestMountedAncestor.type.getDerivedStateFromError ||
+          typeof nearestMountedAncestor.type.getDerivedStateFromError ||
           ("function" === typeof instance.componentDidCatch &&
             (null === legacyErrorBoundariesThatAlreadyFailed ||
               !legacyErrorBoundariesThatAlreadyFailed.has(instance)))
@@ -8763,7 +8780,7 @@ function captureCommitPhaseError(sourceFiber, nearestMountedAncestor, error) {
           );
           null !== nearestMountedAncestor &&
             (markRootUpdated$1(nearestMountedAncestor, 2),
-            ensureRootIsScheduled(nearestMountedAncestor));
+              ensureRootIsScheduled(nearestMountedAncestor));
           break;
         }
       }
@@ -8779,12 +8796,12 @@ function attachPingListener(root, wakeable, lanes) {
   } else
     (threadIDs = pingCache.get(wakeable)),
       void 0 === threadIDs &&
-        ((threadIDs = new Set()), pingCache.set(wakeable, threadIDs));
+      ((threadIDs = new Set()), pingCache.set(wakeable, threadIDs));
   threadIDs.has(lanes) ||
     ((workInProgressRootDidAttachPingListener = !0),
-    threadIDs.add(lanes),
-    (root = pingSuspendedRoot.bind(null, root, wakeable, lanes)),
-    wakeable.then(root, root));
+      threadIDs.add(lanes),
+      (root = pingSuspendedRoot.bind(null, root, wakeable, lanes)),
+      wakeable.then(root, root));
 }
 function pingSuspendedRoot(root, wakeable, pingedLanes) {
   var pingCache = root.pingCache;
@@ -8793,10 +8810,10 @@ function pingSuspendedRoot(root, wakeable, pingedLanes) {
   workInProgressRoot === root &&
     (workInProgressRootRenderLanes & pingedLanes) === pingedLanes &&
     (4 === workInProgressRootExitStatus ||
-    (3 === workInProgressRootExitStatus &&
-      (workInProgressRootRenderLanes & 62914560) ===
+      (3 === workInProgressRootExitStatus &&
+        (workInProgressRootRenderLanes & 62914560) ===
         workInProgressRootRenderLanes &&
-      300 > now() - globalMostRecentFallbackTime)
+        300 > now() - globalMostRecentFallbackTime)
       ? 0 === (executionContext & 2) && prepareFreshStack(root, 0)
       : (workInProgressRootPingedLanes |= pingedLanes));
   ensureRootIsScheduled(root);
@@ -8807,7 +8824,7 @@ function retryTimedOutBoundary(boundaryFiber, retryLane) {
   boundaryFiber = enqueueConcurrentRenderForLane(boundaryFiber, retryLane);
   null !== boundaryFiber &&
     (markRootUpdated$1(boundaryFiber, retryLane),
-    ensureRootIsScheduled(boundaryFiber));
+      ensureRootIsScheduled(boundaryFiber));
 }
 function retryDehydratedSuspenseBoundary(boundaryFiber) {
   var suspenseState = boundaryFiber.memoizedState,
@@ -8849,7 +8866,7 @@ function FiberNode(tag, pendingProps, key, mode) {
     this.stateNode =
     this.type =
     this.elementType =
-      null;
+    null;
   this.index = 0;
   this.refCleanup = this.ref = null;
   this.pendingProps = pendingProps;
@@ -8857,7 +8874,7 @@ function FiberNode(tag, pendingProps, key, mode) {
     this.memoizedState =
     this.updateQueue =
     this.memoizedProps =
-      null;
+    null;
   this.mode = mode;
   this.subtreeFlags = this.flags = 0;
   this.deletions = null;
@@ -8885,11 +8902,11 @@ function createWorkInProgress(current, pendingProps) {
   var workInProgress = current.alternate;
   null === workInProgress
     ? ((workInProgress = createFiber(
-        current.tag,
-        pendingProps,
-        current.key,
-        current.mode
-      )),
+      current.tag,
+      pendingProps,
+      current.key,
+      current.mode
+    )),
       (workInProgress.elementType = current.elementType),
       (workInProgress.type = current.type),
       (workInProgress.stateNode = current.stateNode),
@@ -8945,9 +8962,9 @@ function resetWorkInProgress(workInProgress, renderLanes) {
         null === renderLanes
           ? null
           : {
-              lanes: renderLanes.lanes,
-              firstContext: renderLanes.firstContext
-            }));
+            lanes: renderLanes.lanes,
+            firstContext: renderLanes.firstContext
+          }));
   return workInProgress;
 }
 function createFiberFromTypeAndProps(
@@ -9017,7 +9034,7 @@ function createFiberFromTypeAndProps(
           }
         throw Error(
           "Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: " +
-            ((null == type ? type : typeof type) + ".")
+          ((null == type ? type : typeof type) + ".")
         );
     }
   key = createFiber(fiberTag, pendingProps, key, mode);
@@ -9052,7 +9069,7 @@ function createFiberFromOffscreen(pendingProps, mode, lanes, key) {
         var root = enqueueConcurrentRenderForLane(fiber, 2);
         null !== root &&
           ((primaryChildInstance._pendingVisibility |= 2),
-          scheduleUpdateOnFiber(root, fiber, 2));
+            scheduleUpdateOnFiber(root, fiber, 2));
       }
     },
     attach: function () {
@@ -9065,7 +9082,7 @@ function createFiberFromOffscreen(pendingProps, mode, lanes, key) {
         var root = enqueueConcurrentRenderForLane(fiber, 2);
         null !== root &&
           ((primaryChildInstance._pendingVisibility &= -3),
-          scheduleUpdateOnFiber(root, fiber, 2));
+            scheduleUpdateOnFiber(root, fiber, 2));
       }
     }
   };
@@ -9106,14 +9123,14 @@ function FiberRootNode(
     this.pingCache =
     this.current =
     this.pendingChildren =
-      null;
+    null;
   this.timeoutHandle = -1;
   this.callbackNode =
     this.next =
     this.pendingContext =
     this.context =
     this.cancelPendingCommit =
-      null;
+    null;
   this.callbackPriority = 0;
   this.expirationTimes = createLaneMap(-1);
   this.entangledLanes =
@@ -9124,7 +9141,7 @@ function FiberRootNode(
     this.pingedLanes =
     this.suspendedLanes =
     this.pendingLanes =
-      0;
+    0;
   this.entanglements = createLaneMap(0);
   this.hiddenUpdates = createLaneMap(null);
   this.identifierPrefix = identifierPrefix;
@@ -9169,7 +9186,7 @@ function updateContainer(element, container, parentComponent, callback) {
   element = enqueueUpdate(parentComponent, container, lane);
   null !== element &&
     (scheduleUpdateOnFiber(element, parentComponent, lane),
-    entangleTransitions(element, parentComponent, lane));
+      entangleTransitions(element, parentComponent, lane));
   return lane;
 }
 function emptyFindFiberByHostInstance() {
@@ -9193,8 +9210,8 @@ function findNodeHandle(componentOrHandle) {
   return null == componentOrHandle
     ? componentOrHandle
     : null != componentOrHandle._nativeTag
-    ? componentOrHandle._nativeTag
-    : ReactNativePrivateInterface.getNativeTagFromPublicInstance(
+      ? componentOrHandle._nativeTag
+      : ReactNativePrivateInterface.getNativeTagFromPublicInstance(
         componentOrHandle
       );
 }
@@ -9219,7 +9236,7 @@ batchedUpdatesImpl = function (fn, a) {
   } finally {
     (executionContext = prevExecutionContext),
       0 === executionContext &&
-        ((workInProgressRootRenderTargetTime = now() + 500),
+      ((workInProgressRootRenderTargetTime = now() + 500),
         flushSyncWorkAcrossRoots_impl(!0));
   }
 };
@@ -9283,7 +9300,7 @@ if ("undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
         internals$jscomp$inline_1342
       )),
         (injectedHook = hook$jscomp$inline_1343);
-    } catch (err) {}
+    } catch (err) { }
 }
 exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = {
   computeComponentStackForErrorReporting: function (reactTag) {
@@ -9307,9 +9324,9 @@ exports.dispatchCommand = function (handle, command, args) {
       : ReactNativePrivateInterface.getNativeTagFromPublicInstance(handle);
   null != nativeTag &&
     ((handle = ReactNativePrivateInterface.getNodeFromPublicInstance(handle)),
-    null != handle
-      ? nativeFabricUIManager.dispatchCommand(handle, command, args)
-      : ReactNativePrivateInterface.UIManager.dispatchViewManagerCommand(
+      null != handle
+        ? nativeFabricUIManager.dispatchCommand(handle, command, args)
+        : ReactNativePrivateInterface.UIManager.dispatchViewManagerCommand(
           nativeTag,
           command,
           args
@@ -9319,10 +9336,10 @@ exports.findHostInstance_DEPRECATED = function (componentOrHandle) {
   return null == componentOrHandle
     ? null
     : componentOrHandle.canonical && componentOrHandle.canonical.publicInstance
-    ? componentOrHandle.canonical.publicInstance
-    : componentOrHandle._nativeTag
-    ? componentOrHandle
-    : findHostInstance(componentOrHandle);
+      ? componentOrHandle.canonical.publicInstance
+      : componentOrHandle._nativeTag
+        ? componentOrHandle
+        : findHostInstance(componentOrHandle);
 };
 exports.findNodeHandle = findNodeHandle;
 exports.getInspectorDataForInstance = getInspectorDataForInstance;
@@ -9364,9 +9381,9 @@ exports.sendAccessibilityEvent = function (handle, eventType) {
       : ReactNativePrivateInterface.getNativeTagFromPublicInstance(handle);
   null != nativeTag &&
     ((handle = ReactNativePrivateInterface.getNodeFromPublicInstance(handle)),
-    null != handle
-      ? nativeFabricUIManager.sendAccessibilityEvent(handle, eventType)
-      : ReactNativePrivateInterface.legacySendAccessibilityEvent(
+      null != handle
+        ? nativeFabricUIManager.sendAccessibilityEvent(handle, eventType)
+        : ReactNativePrivateInterface.legacySendAccessibilityEvent(
           nativeTag,
           eventType
         ));
